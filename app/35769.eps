%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Untitled-2.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Serpa
%%CreationDate: 8/11/2016
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">studio template</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-08-11T15:34:22+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-08-11T15:34:22+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-08-11T15:34:22+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXVp1xVRF3AX48vp7ffhpHEFbAl2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRmuootvtP/KMICCUI7zTfbPFP5RhsBFE&#xA;oO/YxGPht1qPHpko7sZ7L7TU2Sik7fynp9BxMUCSaw3UUuwNG/lPXIENgNquBLsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqyWaOMVc08B3wgIJQklzNLtH8CePfDs&#xA;EWSsSNV9z44CUgUvwJS/VOsf0/wyyDXNAZNrVYriSOm9R4YKTaaWmqVorfEPf7Q/rkDFmJJlHLHI&#xA;Koa5CmYK7FLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTMqirGgHUnFUJLe&#xA;ljxgFf8ALOSrvY33KIjqeUh5MfHG1EVTIsmIa/qEra1bHRrhn1Ah7eWBd1HAsPiBoKgluu21c57X&#xA;6gnNHwJXk3iR7r5/jzYE9zLIhIIkEpDShRzK7AtTemb+N0L5s0FqnWP6f4ZdBrmgUlt1kVZWozGi&#xA;L0rsSa+1Fw5JcMeJp4hxcPVc0kLqJ1IjtiKrMdue23BOpHuc1s+0oQHHIgY+89f6o5n8bOTDBKRo&#xA;c1gPQj6M2MJiURIdWkijSJgvZIyCSdv2h1yRCgptbakjgB/+CH8RlZi2CSNVlYVU1B6EZFm3irsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ817Gh4p8b+A6YQGJkhmEsp5Stt2UdMNrV81&#xA;wAAoBQZFk3irR6Yq8ctfNOsS+ZEmbQ7hNXe+CyabHE4VY+YQyGUgR04fEX5ULb9M538pkOt8SvTz&#xA;+z9bI4vVfR7esMYFKV8Sc6JilOsxxqY+LioqCnfenhk4Nc2N+a9PlW1guLes0SgmSVBsp36+H05g&#xA;9sT/AMDmOvFH7w40sZ8aMulFDWxlltbRKFmEMaqoG+y9KDPNdRKeSYHM1QeqwgRinkkE0NFlQoad&#xA;89W04rHEeQ+553J9RWZcwXKzKaqaHFKMttReM7nj+o/MZExSJJtBfRSABvhY/cfpyBi2CSJyLJ2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVTmuIoh8Rq3ZR1wgIJpBySzz9fgj8B3w7BG5cqKo2H04&#xA;CUgUqJG79Bt44EoiOBF3O58cVdJEjCp+E+OKrYYo+IYHlXoe2KoVrJIpxIzjhy5BabnetMVYrN+Z&#xA;UE+omzghaO2+JRck0bkoP7IB2NPHOfydvQEyAPT3/sSY7Jgt39bs7eelOfLbw3GdTOHDKnCw5fEg&#xA;JL7U3PqUt6lj1Ubgj3HSmVyAPNuBPRMbK5s4p2M0C29y32pKbH7/ALOYcNDihMzjEcR6t5zSIolM&#xA;5I4po+LgOh+nL7QQlV3orLV7c8h/Iev0HLBNrMO5JLzWtGsLUzTyVDEqgA5O5A3CDptXqcwtdr4a&#xA;exLY/afxbDFUxY5KemX66hZJdqhjWUvxQmpAVyoqfoy3Q6nx8QyVV395CZCjSNjldD8J28O2ZaEx&#xA;tNTZaKTt/Kf4HIGLISTSG5ilHwmjd1PXIENgNquBLsVdirsVdirsVdirsVdirsVdiq15EjXk5oMV&#xA;tCSXcsnwwjiv8x65KqY2TyU1iANT8TeJwEpEVRVZjQCpwJV47cDd9z4dsVVqU6bYqg7rVtPtZ4YJ&#xA;50jmuKiFXPHkVpUAnbuMpyaiECBI0ZclS7VrmZm4iUcK0aIbMppWjdfHxy0EEWGIlvSPtJZfqsKR&#xA;jfgKt17dsLJER2wryc8mPXFXn2p/lvd2+oJc6fMsts7nmspCunL36MPlv7Zyur7CnxXjNg9/RlxM&#xA;g+qLZafbWp+N05Vl3FampFM7KeTjkS4WHD4cBE7ptpt7ZcBEqiF/A9z/AK2UyBcmJCMuLWC4XjKo&#xA;Pge4+RwA0ki0vNvfWJLW7etB1MZ6/d/TJbFjRC4aoLhTEjfV3K/abc18Frt9+DhpeK+TyzX9K1I3&#xA;sdt9XcSjmSpFABUb1O1Nuucb7STH5yR6VH/csOzMM/DEa33+9kOil7DToLSQBjHy5Mp2+Ji21fnl&#xA;Wh9pBgjHHwXAXZ687dqeziRd+pN0dXUMvQ52um1EM2MTh9JdXkxmEqPNvL2CtFcyJTuB9+Ck2mlr&#xA;qlRRviH/AAw/rkDFmJJjHKki1Q1GQpmCuxS7FXYq7FXYq7FXYq4kAVOw8cVQst8K8YRyb+btkqY8&#xA;Xch+DO3KVuTeGNrw96oB2A+QyLJWjtyd32Hhiqr6fHeM8fEHcHFVG41G0tuP1qVICxCr6jBQSTQU&#xA;JoMhPJGAuRoIvog9Uu7hY/3biMbckrR99qjxHuMnHdHFuwDz+sjWumyUJUNOGftU8KVPvTOa9oQf&#xA;Qff+hsijfLPr3TkMxYrEAtfagA+7Nt2LMy0ZJ/1Q/YA4H/Ik/wBT9LP7BeNpGDsQoB+jM9zW5Lod&#xA;I/iP8x6f24qhZ54okM9zIEQftt+pR/TJQgZGgwyZIwFyNBj97r1rPMqRxtwU0EjECtf8mn8czY6M&#xA;gXe7q5dpxMqA271TMdz0baapcQUVv3kf8p6j5HIGLMTTm2vbe5H7tvi7odiMgRTYDaneadbTgs37&#xA;t/8Afg/jhEqQY2lM0Nz6RWRfrFqn2W6ih7iuV59Pjyx4ZAEdxWE5QNhZp+i2FxLyMhCjf0a/F/tZ&#xA;z0fZrCMlm+Hu/b3fa5356RHmnE2k2bxhEQRFRRWX+PjnQ4YRxxEYiojo4c/UbPNKLvT7i2NWHKPs&#xA;69Pp8MvEraTGnWESyylGj9T4SaV4n6MZGkxFr5tPdSXtyXC9UO0i/R3+jAJKYrIL2SNtyQR+0Ov0&#xA;5IhAKbW+pI4HP/gh0+kZWYsxJGggioNQehGRZuxV2KuxV2KqVxOIVBIqTsBhAQTSDczTGshovZRh&#xA;ukUSuVQooBTIsgFVIHbf7I8TiqISNE6DfxxV0ssUSGSVgiL1ZjQYQCdgxlIRFljeqebgCYrAVPQz&#xA;MNv9iP65nYtH1k6nUdpgbQ+bCvMc089jLJK7SOSpZjv3Gaz2mgBo6H84NXZuSUs1k2aVfKtxdT/V&#xA;YGkJRVZVBPYMSAflmp9mskpY8oPKPBX+ydjqjWbH8WZyrbx2AjvFDI5YGJhy5A+x2zcSiJCiLDmI&#xA;VDFDF6NrGIIRtxXqfme+RxYY448MRQVOrQM1tCtSRxFF7ZYqW6l5igtmaK1AmmGxkP8Adqfb+bM3&#xA;DozLeWwdXqe0hHaG5+xIGbUdSuKnncS+AGwH0bKMzxwYx3B1BOTNLrIogeXtXDp+4+0ezLt898r/&#xA;ADWPvbhoMwI2TOWGWFykilWHY5rQXfEKeFDasykMpII6EdcUo2PUmYhbtfXipQoafiOjfTkDHuZi&#xA;fencFxBOnKJgw7juPmMrIZgsE/MTVrvTbiOCxb6uZkSR5E2b7Tig8Og6ZzfbWuyY8ghE1cQb+JZR&#xA;iEx8oeaNQu9JE9+vqlXaMTKOJPEA79q75tOydRPPh4pc7pjM0VW71a8uL4wk8Lf0gwQdzyI3PfNo&#xA;I0WBlYRWkCty21aKewb+37sZ8kQ5ps8avQnr0VgfiqP5W/gcg2oW5s0kqZByI/3cgow/1174RKmJ&#xA;jaXS2txb/vFPKPtIu4+nwyYILWYkK1rqLoevHx/lOJiokm0F7FJQN8LfgfpysxbBJEYGTsVdiqE1&#xA;D7Mf+tkosZKTOiLyc8VHU5Fki4Y4uIdSHr0YbjFVXFUl1TzRZ2tY4KTzDw+wD7nv9GZWLSyludg4&#xA;Go7QhDYeosUvtTvb1+VxIWFdkGyj5DNljxRhydHm1E8huRQuWtCP0b0TcyCfj6RjYOHFQQSNqd8w&#xA;tcAcdHk7Hsv+9+CYW0On2SkafAsIap9SnxfEa0Fa0GaPT6XHhvgFcXN6Aje2tQaQ2kDVJId9+/bO&#xA;e9psk4jGYEjc8nYaEA3apZ2l9NAZXj4x/su23KvgMy+xdXqcsf3sfT0lyJ+HX37Neqx44n0nfuRu&#xA;pzyWmiNx+GVgsVR25V5fgM6bSwEp7un1+UwxGuuyRaPo0t+/JiUt0NHfuT4Lmwz6gQHm6fSaM5Tf&#xA;KLMLa1t7aIRQIEQdh39ye+aqczI2XoceKMBURQXSTRxj4zQnoOpP0ZBmvWIXERE8XwH7Ib7X9mEF&#xA;SEtu9GkSr255r/IftD+uTE2BglpBBIIoR1BybBrFC+OSSNg8bFWHcYCEg0oalpem63e282qNIohX&#xA;iwjoFcAkjl3H2jWn4ZqtZ2TDPkE5E7CqbY5GUWdjp8FmtvaQxpa0+FEA4n39/nmZixRxjhiKDLml&#xA;2pafbwj1I5AhO4iY9f8AVy+MmuUVLSFrck0rRTvStP6Yz5IhzTZzsKHdthQg19hX4W+nemRDMtLJ&#xA;/N0Bpy3AB69/iX5NtiQoLmh+IlTxfuQOo/yl7/MZFKBudPjbcUhc9GG8Tf8ANOTEmJggWFxavxcU&#xA;7gHcEexyfNr5J5p7MY2BNQDtXK5NsUVkWTsVQmofZj/1slFjJCX3+8knyH6xkWSWWt7cWzVibbuh&#xA;3U/RiqXap5hv7wtHX0oehRO/zObbBp4gA9XndXrJykY8glWZbr3YFdhVXtK1kp/J/wAbDOb9q8ko&#xA;6ImJIPFHk7rsAA6jf+aU20+O7uahYyyIN5eiinj2zmOxO1NTlPDOPHH+dyr39D9/ven1WCEdwaPc&#xA;mttak26rIAtHJBPiaUoffOkzQhIeof2uCJEclG9urvmY3BjI2oetPn4fLLI0hUurVLrTLeB39NWd&#xA;KuBWgCsemZODJwEnycXV4fEiI3W/60fbaTawWypaOy03EnLlUnxHTK8mQzNltw4Y448IVliu+PE8&#xA;Q3+/O1Pl45BtVIbSKJuZq8p6yN1+jwxVWxV2Koe6sbe5HxrR+zjY4QaQY2k13plxb1YDnGP2x2+Y&#xA;ywStqMaQeSYuxVWguriAkxOVr1HUfccBFshIhCus0moNcu3INGEqTvUMT/HGt1J2RllMYpTTuOo2&#xA;IpvgkLTE0myXKTJUnZqkGlQe3xKevTK+TZzVOhDV9lav4B/+NX74WNOckOadtyN6DtuPtL8126nE&#xA;JK9W5VHdhXseQ8dvhYfLfAQkFJdTVFuiFoBQVAJNPoPT5ZOHJrnzTfTfsP8AMZGTOKLyLJ2KoTUP&#xA;sx/62SixkhL7/eST5D9YyLJJcVSKT7bfM5vcX0j3PJZ/rPvW5Y1OwK7CqZaDEkt46PTiYzXlsOoz&#xA;Xdp44TwmMwDHzdn2TIxzWO5Pru6uIALcKUC9CwG/uANvpzVY4CIoPQE2xzzFrWo6b+jp7WZlMkrr&#xA;MuxDr8NQwYEZqO2dTPDwSie/4qAidFnm1CGeVz8ayEKvYKdwtfbJdi6g5YyJ7/sQmWqXLR6NG8Lg&#xA;SRSorFaGh4tUH786XTY7lUhzDrtdnqHFA7iShp3mOjBZj6T/AM4+wfmO2Sy6MjeO7Xp+04y2nse/&#xA;oyS31CKUDkQpPRhup+nMIh2gN8kVil2KuxV2KuxVA3ekwTVaP93J4jofmMkJMTG0nuLSa3YiUBVG&#xA;/Mn4afPLAb5NUhXNLpNTtFfipZx3cDb8d8yRpZkW4Mu0MYNCz5orMdzVSH+8+hv1HAUhK/NN1cW1&#xA;lp81vI0Uis9GU0PU/hmZo4CRkCHB185RjExNFdoXncu6W98vGRyFWZB8JJP7S9voxz6Ct4fJdN2l&#xA;fpnz72XCRHPWjA7AkgAjbZhuv6s1wLtCF6AhmBG5FSCNyfEqPhb5rhKAlOrGt11rRQPtcqZOHJhP&#xA;mmum/Yf5jISZxReRZOxVCah9mP8A1slFjJCX3+8knyH6xkWSS4qkUn22+Zze4vpHueSz/Wfetyxq&#xA;dgV2FVO41K8023kvLOT054+PFqAihcAgg9Qc0XtDmli03FE0RIOy7KH734JxpepXOqzy86KqKGSM&#xA;fZUkAMF8BVa5znZOrlmySvkB+w/DZ6Bdrmm6fdWUS3krQzQOXi4UJ3p+z3Bpm21XZX5uIHKurRm1&#xA;cMQ3O/chI5LeCzaKBzErV/drUuzeMjEAU9lzZ9n9mY9MOGA95LqNRrDOO5oHkB+ljet+b7zS5o9N&#xA;ESSWThbh+ok5ksmzVpSg6UzZGA4uLydNl1soDw69PPzRumaxp9+oeBwzCheFtmHzH8RlnNliyxlu&#xA;nceoC3Ie2ZgGPxWzbqPk1cxZYeLaQ+Ls4aoY94H/ADT+tPdM8wxyUSvF/wDfTnY/6pzBy6aUPMO1&#xA;0+uhk25ST2C6il2Bo38p65juarYq7FXEgCp6Yqkeq+Z7e1LRQD1JhsfAZk4dLKe/IODqdfDHsN5M&#xA;VvdQu7x+c7lvBewzZ48MYcnRZ9TPKfUUNlrQyFfsj5ZpjzepjyXqxU1HXcfeKYGS27tLDUbRLW8D&#xA;J6dTFMh3UmvUfTk8eWUDYa8uGOSNSY3c+WNQ0+8glA+sWnqIRPHuAOQ+0O2bGGrjOJHIupnop45A&#xA;843zX6vrF/p3mS9a2kIUyVaJt0bYdR/HI4cEcmIWGWfUzx5pcJZP5f8ANMWpK0bIY5Y1DSITVKFq&#xA;VVu3XMDUaU49+YdnpdYMu1VIK+qMGuAwJ3UbGm1CRlMOTfPmmum/Yf5jIyZxReRZOxVCah9mP/Wy&#xA;UWMkJff7ySfIfrGRZJLiqRSfbb5nN7i+ke55LP8AWfetyxqVA44ADYMhr7sslB+AzGBJn7ifuc2Q&#xA;jHH5mI+/9SnmS4S9bC1vopra5lMMbJUSCmzKwI2PX5ZrO1tH+Zw+H3lzuzssYZOKXKkTp4gsom9G&#xA;bjX4ZJj/AHjU3okfb5k5r+zuxYaX+nkPyc3Lr+MbHhj/ALL4BCMzMSzEsx6k7nOiAp0pJO5awoYR&#xA;54/460X/ABgX/ib5Euu1f1fBKtL0/Vby4ppsMkk0fxcoq1X35dsgZAc2rFinM+gElP8AT/NtzbSm&#xA;11aJgyHi0nHi6n/LXbJiTkw1JiamGUW11b3MQlt5FkjPRlNcLlxkCLCa2Ws3NuQshMsY8ftD5HMX&#xA;LpIy3Gxdlp+0Jw2PqiyfTtcinUUbmB1U7OM1uTFKHN3eHUQyC4lNo5Y5Fqhrlbel3mG7e1013TZm&#xA;+EH57ZdghxTALjavKceMyHNgZJJqdyepzdPLOwq7FWTWttPPRYlLbCp7D5nNLI09VAWE5tdGgjFZ&#xA;v3jnt0UZWZtogh7vRWFXtjyH++z1+g4RNBh3JFqGqajpySmziEtzGpYW0hKB2G4Qmh418abZpe0O&#xA;1hhzRhtX8Xlf4tEQxKTzb5L1yRzeyyeX9cqBNbXyMis52G+4FabVoabkZ0eDVmArnFxNRoY5NxtJ&#xA;kHl7Sb/Try9juoytYBwcbo37xehy7V5ozgCD1aNDgnjmRIdE5m/vPoX9QzCDsCn2m/Yf5jK5NsUX&#xA;kWTsVQmofZj/ANbJRYyQl9/vJJ8h+sZFkkuKpFJ9tvmc3uL6R7nks/1n3rcsanYFdhVo9R8/4YFb&#xA;wqp3Fzb20RlnkWOMdWY0wIMgBuxi/wDNlzdSi00eFmkc8Vk4lnY/5Cf1wGThy1BkagEy0T8uLu6k&#xA;F5r0rAseRt1blI3+u+9PkPwzGnn7nN0/ZRl6sh+DPbKws7G3W3s4VghXoiCm/ifE+5zGJJ5u6x44&#xA;wFRFBBa35Z0jWY6XkP70CiXCfDIv+y7/ACO2SjMx5NWo0mPKPUN+/q891Tyl5j8uytd2DtcWo3Ms&#xA;Q3C/8WR7/fuPlmVDMC6LPocuE3HeP45hE6T5xtbjjFegW8x29Qf3Z/5p+nLrY49UDsdmU2txCFFa&#xA;ip5JPGfiFR9xGV5IE7j5OywZYgUdv6Q5/wBiZ2PmF43AmrQfZlGxp/lAZiZNHe8fk7HB2nRqe47/&#xA;ANYR2uX63ekkqQwBBDr33GVaaJjkALka6YlgJBsbMXzbPPOxVMtFtdMnnAvpSoJokY2DU8W6jMPU&#xA;6gw2DstBo45fVLkOjO4kiSNViAEdPh49M1RLvwKXYpdirF9Q8v6nLeyyrxkWRiQ3KlAegIPhnI6z&#xA;sbUTyykKkJHvY0wb81vLcdxL5b06ZFnup7sfEteQhqsUoHeimdG+jOp0mMwxRhI3KIRVM6W5mEJh&#xA;rWMilD23rtmWYsBIrJSC9RuKD9QxCCn+m/Yf5jK5NsUXkWTsVQmofZj/ANbJRYyQl9/vJJ8h+sZF&#xA;kkuKpCxqzf6x/Xm9xfSPc8lm+s+8tZY1OwK7Cq12CgMxAA3JPTocCsf1bzha29YrIC4m6c/91g/R&#xA;9r6MBLi5NUBsN1LTPJ/mLzBKt3qcjW1qd1Mg+Mj/ACI9qD3P45RPMAzwaDLmNz2j+Oj0DRfLuk6P&#xA;FwsoQrkUedvikb5t/AbZjSmZc3e4NLDEPSEyyDkOxV2KuxVjPmHyFpOq8poALO8O/qRj4GP+WnT6&#xA;RvlsMpDrtT2dDJuPTJg88PmbyrMEnTnaE/Cd2hb/AFW/ZOZcMgPJ0uTHl0535fYn2leY9P1CiBvR&#xA;uD/ulzuT/kn9rLLb8eeMvencJPoXArtxU0/2Yyqf1R+LnYz+7n8PvQs9xBbxGWeRY416sxoMtcYy&#xA;AFli+o+bp53NvpMTMxr++4lmIG5Kp8u5wEuHPUk7RRvlfU7m38ratqDH1p4peY9Qk1J9JTU9ehzA&#xA;1EBLIAXbdm6mWLTTmNyJf8SyTyv+YNtcFYo5PSnOxtJjsSf5G7/rzGy6eUPMO20fa2LPt9M+4/oZ&#xA;5Y6xaXYCg+nL/I38DlDs0dirsVeeX35b6hda4moSSxzywsxt7uR3DoHIJPED7XwjOZydk6niIjIc&#xA;MuZ3s89z5+7ZLMrjTbYwoHc+uqgGWgq5ApyYDxzpsdxiATdMDG0jy9pZFpv2H+YyqTdFF5Fk7FUJ&#xA;qH2Y/wDWyUWMkJff7ySfIfrGRZJLiqQH7Tf6zfrOb3H9I9zyOb6z7y7LGt2BULqeq6dpiVvZeMhF&#xA;Utk+KVvD4f2R7tT2rkDk7t1mYwFzNeXX8e9j/oeYPN0yLa24tdOjJAkYkJv1Lv8A7sbb9kbeAysz&#xA;4eZ3ccY8mpPpHDAfjn1Zn5f8jaPpHGVl+t3g39eQCin/ACE3C/r98x55SXb6bs/Hi3+qXeyLKnPd&#xA;irsVdirsVdirsVWTQxTRNFMiyROKOjgMpHgQcILGUQRR5MI8wflpBMWuNGcQS9TauT6Z/wBRuq/I&#xA;7fLL4Z+91Gp7JB3x7eTHIvMPmDRBPYahAWlK8U9eoZaMDXkPtrt4/Tl+0iD3OvGoyYRKEhz70ivt&#xA;Svb6X1LmQuf2V6KvyHQZNwp5DI7tadK0V9C6kqwYAEbEV2wjmuM1IMv/AEj6um3enzAIt4B6lyij&#xA;nUMrcmXYN9kDxwTwAyEuodoNQfDlj6SSJvKWq+i88BjuIkPwmNt2+QNKfI0ONOCdLOrG6L0fzpqm&#xA;muLe9VriFPhKvUSpTwY9fk34Zi5dLGXLYux0fbOXD6Z+qP2vTvLvni3vIgYpfrEa/bRtpU+YP+1m&#xA;vyYpQ5vU6XWYs4uB+HVlltf2txHzikBA6g7EfRlblLLi+VFrXiP5j1+jCAglLGv2kmRU2VmALHqd&#xA;8JjQQJWUBlrSyLTfsP8AMZVJuii8iydiqE1D7Mf+tkosZIS/YC0eppWgFfEkADIpJpJcUsfHVv8A&#xA;Wb/iRze4/pHueRzfWfeVtxPb2sBuLqVYIB+256kdlA3Y+wGGUwPewqhZNBimred5W5RaUpgXobp6&#xA;eqf9QbhPxPuMgQTzcTJra2x/Pr8O772LO7yOzuxd2JLMxqST1JJyTrySTZTPRPM2r6NJWzm/dE1e&#xA;3f4o2/2Pb5jfIygJc3I0+ryYj6Tt3dHpXl7z5pGq8YZT9TvDt6Uh+Fj/AJD7A/I0OYs8RD0Gm7Rh&#xA;k2PpkyXKnYOJA3OKGlZWFQajCRSgg8m8CXYq7FXYq7FXYqhNT0nT9Ttzb30CzR/s1+0pPdWG4Pyy&#xA;UZEcmrLhhkFSFvO/MP5bX1ryn0om7txuYD/fKPbs/wCv2zJhmB5ui1PZUo7w9Q+1hpEkUtGUrJG2&#xA;6sKEEHoRl4dTuCyiziubrTTqKQMLRZPSeXqA9Aaf8MN8mMsbrq7CEJShx16bpr15IKSIxXgys1CR&#xA;UKwJByRYg0yDUtF0/UU/fp+8pRZl2cfT3+nIU5GTFGfNhV/pt3pF2ZLWcuISP38NQYyegcj7JPzy&#xA;EgORcEwniPFE8uoZpoHm/U4/Kepam/B7u0pHG5XZuTRqCwBAr+8zXzwR8QAci9Fp+08h0spneUdv&#xA;u/W1on5lQ3TLFrA9GY7C5Wvpn/WHVf1fLJz01fSw0nbcZbZdj39P2M1tJI5JIZI2DxsylXUggivU&#xA;EZiTDv8AHIHccluSYsi037D/ADGVSboovIsnYql+uyTQ6fNcQpzeBHkCncVVSRUDftko82vISBYf&#xA;OV/571PzDcrNeXTJKh5Q26ngiH/isDv79c2uKMAKDxGtzZ5y4pGwOVcgynQfzFuoOMGrKbmHoLlK&#xA;eqP9YbB/wPucqy6QHeOznaLt2cPTl9Q7+v7V+qedLG35Jpq/W5SSRO6ssS132Q8WY796D55kR4qA&#xA;5ONqNZASJh6rPw/WfxzYhfX95fTme7maaQ7At0A8FA2UewyYADrMmWUzcjaHwtbsVdirsVejeRLn&#xA;zaEQXA5aVT4Tc150/wCKj9qnz28MonjBd3oM2Yc/o8/0MyeR36n5DtjGIDnymZLY2kUAk/F3I2GE&#xA;gFjGRCIjuAdn2Pj2yiWLucqGYHmrZU3OxS7FXYq7FXYq7FWIeeo/KHos2pnjqHH90benrnwqOhH+&#xA;t9GXYuLpydX2gMFev6vLn+Pekeou0H5U6YsTELdXj+r2qFeWlf8AgBhjvmPucbMeHQQr+KR+8/qY&#xA;xp93dzyx2IHqtcMsUVevJzxXf5nMwzoburwylKQj37J15nv9a0x00ueSNbhUBm9EkkA9AzeJG9Bk&#xA;IZBIWHL1hniPAa4vJb5UYz6L5gglq6G1MlO1Y0dwf+CRTmPn2nEuR2f6tPmB/mg/K12kf+S/1z/j&#xA;JH/yegxn/ex/HejT/wCI5P6w++LE8ynSsk8l+aBot/yupJWseJJgT4hzBBBCkgA0BGY+fDxjbm7X&#xA;szX+BM8RPBXLzZtoPnbStV4xOfqt4dvRkOzH/Ibofl1zGyYDH3O+0namPNsfTLu/U9D037D/ADGY&#xA;kncRReRZOxV2KsF86/lB5a8x87qBRpuqtU/WoFHB2/4tj2DfMUPvlsMpDhajQwyb8pPFvMflfzZ5&#xA;Qn9PVrcz2JPGK+iq8TeHx0+E/wCS9Dmdj1FvN6zsww6V59ELb3cFwvKJq+K9CPmMyRIF0+TFKHNV&#xA;yTW7FXYq7FUy8ucf07YhlD85VRVIDAs3wrsdvtEYCQBZb9MLyRHeXrCXYNYbleD9GqKff4ZGuod7&#xA;xUakKKLUKFAX7IG1PDIswti48BxUqOwO2JQFGW6ggqF3YmpUePvkhEliZgIrS5J5EkeQUUkBF8PH&#xA;MbMYk7Obp4zA9Qq0blLkOxV2KuxVDahqdhp1ubi9nWCId2O5PgoG5PyyQiTya8uWOMXI0HnnmD8y&#xA;7u45QaQptoehuHp6rf6o3C/r+WZEMAHN0Wp7VlLbHsO/qwmSSSV2kkYvIxqzsSST4knL3UEkmyyG&#xA;88w2dx5IsNECut3ZXLSEkfAyN6jVBr1BkpTKY4yMhl0LsMmrjLSxxfxRl+v9aF8nIH81aUCQALmM&#xA;7+Kmo/Vks30H3NfZwvUQ/rBV89zet5u1Rq1pNw/5FqE/41wYBUAy7Tleon70NoutjTbfUITF6gvo&#xA;Hg51oVLIyg07/bxyY+Ig9yNLrPChONXxxr3JppM0S+QtajZ1EjSRcUJFT+9hOw+SnITH72P473Kw&#xA;SH5LIL34h98WLZkunUri7gt15StTwXqT8hkTIBsx4pT5I3y35S82+b5aaXbm204Gkl/LVYxvQ0al&#xA;WPsn05jZdRTudH2WZb8/Po+m7eBYUIBqTuTmtJt68ClXAl2KuxV2KrJ4ILiF4J41mhkBWSKRQysD&#xA;1BU7EYoIB2Lyjzl+RFjcs9/5Wl+oXYq31FyfRY/5DbtGfbcfLMiGcjm6vU9mRkPT8ujyi+XWdDvT&#xA;p+vWclrcL3Zeo/mUj4XX3U5nQzAvNans+UD3HuV45Y5UDxsGU9xl4NuulEg0V2Fi7FUy8t/8pFpX&#xA;/MZB/wAnVyvL9B9zlaL+/h/Xj973O6sre5XjKtSOjjZh8jmpx5ZQOz3ubTwyCpBKZ9PvbIloT60H&#xA;UjuPmP6ZsMepjPY7F02bQ5Me8fVFCvc3FxtGOCdz/blk8kIc+bTiw5Mv0ih3txW6Jv8AabxOYGXU&#xA;yn5B2+n0UMe/OXesPmnStO1BdOvnMDSoJY52/u/iJXix/Z+z16ZLDjJjYcXWayGPKIS2sfpLIEdH&#xA;UOjBlYVVgagg9wcLMG28UrZZYoo2kldY40FXdiAoA7knCgkAWWE+YfzLtYOVvpCi4m6G5cERqf8A&#xA;JHVv1fPL4YO90+p7VjHbHue/o891DUr7ULg3F7M08p/aY7AeCjoB7DMgRA5OjyZZTNyNlC5Jrdir&#xA;sVRWl38mn6jbX0ah5LaRZVRq0JU1oaZGceIENuDKccxMfwm1bXtUGq6xdaiI/R+svz9KvLjsBStB&#xA;X7sGOHDEBnqs3i5DOqtL8m462SSONC8jBVHUnATTKMSTQUdPi1rXb0afoNnJdTnqyjZR05MT8Kj3&#xA;bKJ5gHY6bs+Uzys9z1nyb+RWnWbpf+Z5RqV7sws1J+rqf8smjSfgvscwZ5yeT02m7MjD6t/Lo9Vh&#xA;hihiSKFFjijAVI0AVVA6AAbAZjuzApdil2KuxV2KuxV2KuxVL9b8v6Nrlk1lqtol3bncK43U/wAy&#xA;MKMp9wcMZEcmvJijMVIW8X83fkfrOlO995Wla9tRVmsXIE6jwXosg+5vnmXj1He6XV9lWPT6h9rA&#xA;ItT4Stb3sbW1xGSsiuCtGGxDA7qfnmbHKC87m0co8v2o8EEVG4PQ5a4a+K4uraVLm0YJdQMJLd2H&#xA;JRIh5ISO45DIzjYIbcGTgyRl/NIPyen+U/zNt7+FINdSOwv+hlQk27nxBO6f7L781ktLMC3sMXbW&#xA;CcuG68zyZyrKyhlIZWFQRuCDmM7YG0kuv96Zf9Y4UJBrnmvTtKR0r9YvADxtkIrWmwdtwv6/bLse&#xA;CUtw4Gq7Tw4TUjZ8unvea3us6tq9w13qaRRy/YhihrRIhuoJJNTUkk5sNPjMI0Xlu1dXDPl4o8gK&#xA;+9M9B82axorgW8nqW1atayVKHxp/Kflk54xJx9NrcmLkdu5mr/mlpQ08SpbSG9O31Y04g+Pqfy/R&#xA;X2yjwDbtz2vDhujxd37WDa35m1fWZK3c1IQapbp8Ma/R3PucyIwEeTptRq8mU+o7d3RKcm4zsVdi&#xA;rsVdirsVcSAKnpilAy6lylW3so2ubmQhY0QFqsegAG7H5ZVLKA5eHRylz/a9A8o/kfq+qPHf+apm&#xA;s7b7S2EZHrsP8o7rGPvb5Zg5NR3PR6Tsqh6th9r2fRdB0fRLJbLSrSO0tl/YQbsfFmNWY+7HMUyJ&#xA;5u7x44wFRFI/AzdirsVdirsVdirsVdirsVdirsVY15v/AC88s+aYj+kLfheAUjv4aJMtOlTSjj2a&#xA;uThkMXHz6WGTmN+94f5q/LPzd5RL3EI/SWjrUm4iUngv/Fse7J8xVffMzFqHn9Z2WRvzHeEhtNTt&#xA;7ii14SfyN/A98zIzBdFl08oeYReTcdO9E8569oiFbRxPAN/qk5JjP+qRuh+X3ZRmwCY83Z6DtKeC&#xA;QBPo6j9SI1bz/q2qB/Sh/Rscn2ow4eTcb1cAU38MqwaYDeXNze0u1zM8OI+nv6sdJJNTuTmY6BrF&#xA;DsVdirsVdirsVdirsVdiqFu9StraoJ5yfyL1+nwyEpgN+LTyn7k+8q/lp5u83FLiUfozR2ofrMoN&#xA;XX/iuPZn+ZovvmJl1DvdH2UTvyHef0Pb/KP5e+WfK0I/R1vzvCKSX81HnavUcqDiPZQBmFPIZc3o&#xA;cGlhj5DfvZLkHIdirsVdirsVdirsVdirsVdirsVdirsVdirsVeeedfyX8ua96l1pwGlam25kiX9y&#xA;5/y4hShP8y0+nLoZiHA1GghPcekvGNe0DzX5SuRb6zak27HjDdKecT0/kk/41bfM3Hnt5zV9mmJ3&#xA;Ffcp215b3C1iap7qdiPozJEgXUZMUoc1bJNbsVdirsVdirsVdirsVdiqlcXUFuvKVgPAdz8hkTIB&#xA;shjlI7KmhaF5p82XRttEtWEANJrt/hiSv88nQf6q1OY+TPTttJ2aZHlf3PZfJX5LeXdCKXepU1bU&#xA;1oweVf3EbdfgjNakfzNX2AzBnmJ5PSafQQhudy9Eylz3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYqo3dnaXttJa3cKXFtKOMkMqh0YeBVqg4g0iUQRReRecvyFidnvvKc31eYfF+jpWPAn/&#xA;AIqlO6/JtvcZkwz1zdTqezAfo+Tyy4l1TSbxrDWrWS2uY/tB14tTxp0Ye4zNhmt5zUaAxO2x7kZF&#xA;LHKgeNgynuMvBt10omJorsLF2KuxV2KuxVp5EjUu7BVHUnbASyESTQQcE+o6peJYaLayXV1JsgRS&#xA;zHxIHYDxOUzzAOfp9AZHfc9z1Hyb+Qw5pf8Am2b1pdmGmxNVR7Syjr8k29zmDk1F8npNN2WIj1/J&#xA;69ZWVnY2sdpZwpb20Q4xQxKFRR7AZjk27eMQBQ5K2BLsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdiqV+YfK+heYbM2mr2iXMYr6bnaRCe6OKMp+WSjIjk1ZcMcgqQeJebvyT8waGz&#xA;33lyR9Sshu1vQfWUHuo2lH+qK/5OZWPUfB0mr7LNbeofawe31deZhulMMykq1QQARsQQdxmbHKDz&#xA;efy6Mx5JiCCAQag9CMtcN2KHYqgLrVoo29OAetKTQAdK/R1+jKpZAHLxaSUuewZn5S/JjzJ5gaO9&#xA;8wSPpenmjLCR/pDqf5YztH8339jmHk1Hxeh0nZRrf0j7Xt3lzypoPlyz+q6RaJbqaepJ9qSQju7n&#xA;4mzElInm7zFhjjFRCbZFtdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVYn5y/LLyx5pRpLqH6tqNPg1CABZK025jpIP9bfwIyyGQxcXPpIZOfPveHeafy883+TmaZ0+&#xA;u6UD/vZCC0YH/Fi/ajP4e5zMxZ7ef1nZpG5G3eEjXXLYxcmVhJ/vv+3MnxQ6g6OV10Tnyx5F83+c&#xA;nV7aL6ppRNHvZarFSu/H9qQ/6u3jTMfLnp2uj7MMtwPiXuHkv8rfLPlZUmii+uamB8V/OAWB/wCK&#xA;13Ef0b++YU8pk9Dp9HDH5nvZhlbluxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxVplVlKsAVIoQdwQcVYhJ+UvkOTWhqx0xBIPiNqDS2Z/5jD9n6Ps+2WeLK&#xA;qcU6LFxcVfqZeiJGixxqERAFRFFAANgABlblN4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ea829a4a-f595-4f40-85b1-072a4579336b</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ea829a4a-f595-4f40-85b1-072a4579336b</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:166034e7-24b2-472d-a14f-49ca0fb9a8c8</stRef:instanceID>
            <stRef:documentID>xmp.did:64ce37b4-2972-f04d-a360-0788e98a7250</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:21e31838-8ba4-1641-b8b9-c4e0e601e49e</stEvt:instanceID>
                  <stEvt:when>2016-05-11T15:50:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea829a4a-f595-4f40-85b1-072a4579336b</stEvt:instanceID>
                  <stEvt:when>2016-08-11T15:34:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
217.371 37.3368 mo
217.371 171.715 li
420.923 288.523 li
421.557 302.769 li
427.743 299.158 li
427.743 292.437 li
427.743 158.059 li
217.371 37.3368 li
cp
.894118 .929412 .94902 rgb
f
217.371 37.3864 mo
22.2571 150.672 li
22.2571 285.432 li
22.2571 291.38 li
27.6757 294.503 li
27.6757 282.286 li
217.371 172.147 li
217.371 37.3864 li
cp
f
217.371 43.6074 mo
217.371 177.986 li
421.56 295.762 li
421.56 161.384 li
217.371 43.6074 li
cp
.831373 .878431 .909804 rgb
f
27.6203 153.754 mo
27.6203 288.514 li
217.371 178.368 li
217.371 43.6074 li
27.6203 153.754 li
cp
.956863 .956863 .956863 rgb
f
421.594 295.762 mo
421.56 301.645 li
421.557 302.769 li
326.976 357.734 li
326.942 357.714 li
232.388 412.663 li
130.029 353.566 li
130.003 353.581 li
27.6171 294.469 li
27.6203 293.345 li
27.6206 293.345 li
27.6138 293.341 li
27.6169 292.217 li
27.6203 287.386 li
421.594 295.762 li
cp
.145098 .462745 .478431 rgb
f
421.56 295.762 mo
232.75 404.215 li
27.6203 287.386 li
217.806 177.44 li
421.56 295.762 li
cp
.137255 .658824 .686275 rgb
f
281.279 150.162 mo
279.169 148.936 li
279.128 134.634 li
281.238 135.86 li
281.279 150.162 li
cp
.686275 .666667 .666667 rgb
f
268.918 142.973 mo
266.808 141.747 li
266.807 141.259 li
268.917 142.486 li
268.918 142.973 li
cp
.533333 .533333 .533333 rgb
f
268.917 142.486 mo
266.807 141.259 li
279.551 133.901 li
281.661 135.128 li
268.917 142.486 li
cp
.858824 .858824 .858824 rgb
f
281.661 135.128 mo
281.703 149.917 li
281.279 150.162 li
281.238 135.86 li
268.918 142.973 li
268.917 142.486 li
281.661 135.128 li
cp
.772549 .772549 .772549 rgb
f
281.277 126.533 mo
279.167 125.307 li
279.126 111.005 li
281.237 112.231 li
281.277 126.533 li
cp
.686275 .666667 .666667 rgb
f
268.918 119.343 mo
266.808 118.117 li
266.807 117.629 li
268.917 118.855 li
268.918 119.343 li
cp
.533333 .533333 .533333 rgb
f
268.917 118.855 mo
266.807 117.629 li
279.551 110.271 li
281.661 111.497 li
268.917 118.855 li
cp
.858824 .858824 .858824 rgb
f
281.661 111.497 mo
281.703 126.287 li
281.277 126.533 li
281.237 112.231 li
268.918 119.343 li
268.917 118.855 li
281.661 111.497 li
cp
.772549 .772549 .772549 rgb
f
284.964 112.679 mo
284.961 113.62 li
270.871 121.808 li
270.874 120.868 li
284.964 112.679 li
cp
.917647 .917647 .917647 rgb
f
270.874 120.868 mo
270.871 121.808 li
224.227 94.8781 li
224.23 93.9377 li
270.874 120.868 li
cp
.858824 .858824 .858824 rgb
f
284.964 112.679 mo
270.874 120.868 li
224.23 93.9377 li
238.32 85.7496 li
284.964 112.679 li
cp
1 1 1 rgb
f
243.896 74.2125 mo
243.849 90.7862 li
241.144 89.2249 li
241.191 72.6511 li
243.896 74.2125 li
cp
.92549 .941176 .945098 rgb
f
241.191 72.6511 mo
241.144 89.2249 li
231.613 94.7635 li
231.66 78.1897 li
241.191 72.6511 li
cp
f
234.455 79.9772 mo
234.408 96.5509 li
231.223 94.7122 li
231.27 78.1386 li
234.455 79.9772 li
cp
.52549 .85098 .964706 rgb
f
244.286 74.2638 mo
244.239 90.8374 li
234.408 96.5509 li
234.455 79.9772 li
244.286 74.2638 li
cp
.329412 .737255 .85098 rgb
f
241.344 72.5651 mo
241.344 72.873 li
241.078 72.7191 li
241.344 72.5651 li
cp
.741176 .764706 .780392 rgb
f
243.895 74.2122 mo
243.896 74.2125 li
234.365 79.7512 li
231.66 78.1897 li
241.191 72.6511 li
241.193 72.6524 li
241.344 72.5651 li
241.102 72.425 li
231.27 78.1386 li
234.455 79.9772 li
244.286 74.2638 li
244.046 74.125 li
243.895 74.2122 li
cp
.670588 .913725 1 rgb
f
243.62 74.3706 mo
243.895 74.2122 li
241.193 72.6524 li
240.871 72.8382 li
241.193 72.6524 li
241.191 72.6511 li
231.66 78.1897 li
234.365 79.7512 li
243.896 74.2125 li
243.895 74.2122 li
243.62 74.3706 li
cp
.92549 .941176 .945098 rgb
f
233.719 82.6945 mo
231.837 81.6075 li
231.776 81.5724 231.726 81.4874 231.726 81.4177 cv
231.726 81.3479 231.776 81.3198 231.837 81.3549 cv
233.719 82.442 li
233.78 82.477 233.829 82.562 233.829 82.6318 cv
233.829 82.7015 233.78 82.7296 233.719 82.6945 cv
cp
f
233.719 82.0211 mo
231.837 80.934 li
231.776 80.8989 231.726 80.8139 231.726 80.7441 cv
231.726 80.6744 231.776 80.6463 231.837 80.6814 cv
233.719 81.7685 li
233.78 81.8035 233.829 81.8886 233.829 81.9584 cv
233.829 82.028 233.78 82.0561 233.719 82.0211 cv
cp
f
233.719 81.3476 mo
231.837 80.2605 li
231.776 80.2253 231.726 80.1404 231.726 80.0706 cv
231.726 80.001 231.776 79.9729 231.837 80.0079 cv
233.719 81.095 li
233.78 81.1301 233.829 81.2151 233.829 81.2848 cv
233.829 81.3546 233.78 81.3827 233.719 81.3476 cv
cp
f
233.719 80.674 mo
231.837 79.5869 li
231.776 79.5519 231.726 79.4669 231.726 79.3972 cv
231.726 79.3275 231.776 79.2993 231.837 79.3345 cv
233.719 80.4214 li
233.78 80.4566 233.829 80.5415 233.829 80.6113 cv
233.829 80.681 233.78 80.7092 233.719 80.674 cv
cp
f
248.052 76.413 mo
248.005 92.9867 li
245.3 91.4253 li
245.347 74.8517 li
248.052 76.413 li
cp
f
245.347 74.8517 mo
245.3 91.4253 li
235.77 96.9639 li
235.817 80.3903 li
245.347 74.8517 li
cp
f
238.611 82.1778 mo
238.564 98.7515 li
235.379 96.9127 li
235.426 80.3391 li
238.611 82.1778 li
cp
.713726 .8 .211765 rgb
f
248.442 76.4642 mo
248.395 93.038 li
238.564 98.7515 li
238.611 82.1778 li
248.442 76.4642 li
cp
.627451 .678431 .152941 rgb
f
245.5 74.7657 mo
245.5 75.0735 li
245.234 74.9196 li
245.5 74.7657 li
cp
.741176 .764706 .780392 rgb
f
248.051 76.4127 mo
248.052 76.4131 li
238.521 81.9517 li
235.817 80.3903 li
245.347 74.8517 li
245.349 74.8528 li
245.5 74.7657 li
245.258 74.6256 li
235.426 80.3391 li
238.611 82.1777 li
248.442 76.4642 li
248.202 76.3255 li
248.051 76.4127 li
cp
.784314 .898039 .317647 rgb
f
247.777 76.5712 mo
248.051 76.4127 li
245.349 74.8528 li
245.027 75.0388 li
245.349 74.8528 li
245.347 74.8517 li
235.817 80.3903 li
238.521 81.9517 li
248.052 76.4131 li
248.051 76.4127 li
247.777 76.5712 li
cp
.92549 .941176 .945098 rgb
f
237.875 84.8951 mo
235.993 83.808 li
235.932 83.7729 235.883 83.6879 235.883 83.6181 cv
235.883 83.5484 235.932 83.5204 235.993 83.5554 cv
237.875 84.6425 li
237.936 84.6776 237.985 84.7626 237.985 84.8323 cv
237.985 84.9021 237.936 84.9301 237.875 84.8951 cv
cp
f
237.875 84.2215 mo
235.993 83.1344 li
235.932 83.0995 235.883 83.0143 235.883 82.9447 cv
235.883 82.875 235.932 82.8469 235.993 82.882 cv
237.875 83.969 li
237.936 84.0041 237.985 84.0891 237.985 84.1588 cv
237.985 84.2285 237.936 84.2567 237.875 84.2215 cv
cp
f
237.875 83.548 mo
235.993 82.461 li
235.932 82.4259 235.883 82.3409 235.883 82.2712 cv
235.883 82.2014 235.932 82.1733 235.993 82.2085 cv
237.875 83.2956 li
237.936 83.3305 237.985 83.4157 237.985 83.4853 cv
237.985 83.555 237.936 83.5831 237.875 83.548 cv
cp
f
237.875 82.8746 mo
235.993 81.7875 li
235.932 81.7524 235.883 81.6674 235.883 81.5977 cv
235.883 81.5279 235.932 81.4998 235.993 81.5349 cv
237.875 82.622 li
237.936 82.6571 237.985 82.7421 237.985 82.8119 cv
237.985 82.8815 237.936 82.9096 237.875 82.8746 cv
cp
f
253.231 79.2698 mo
253.184 95.8435 li
250.48 94.2821 li
250.527 77.7084 li
253.231 79.2698 li
cp
f
250.527 77.7084 mo
250.48 94.2821 li
240.949 99.8207 li
240.996 83.2471 li
250.527 77.7084 li
cp
f
243.79 85.0346 mo
243.743 101.608 li
240.558 99.7696 li
240.605 83.1958 li
243.79 85.0346 li
cp
.968627 .839216 .301961 rgb
f
253.622 79.321 mo
253.575 95.8947 li
243.743 101.608 li
243.79 85.0346 li
253.622 79.321 li
cp
.968627 .823529 .215686 rgb
f
250.68 77.6224 mo
250.68 77.9303 li
250.413 77.7764 li
250.68 77.6224 li
cp
.741176 .764706 .780392 rgb
f
253.23 79.2695 mo
253.231 79.2698 li
243.7 84.8085 li
240.996 83.2471 li
250.527 77.7084 li
250.529 77.7097 li
250.68 77.6224 li
250.437 77.4823 li
240.605 83.1958 li
243.79 85.0346 li
253.622 79.321 li
253.381 79.1824 li
253.23 79.2695 li
cp
.956863 .898039 .65098 rgb
f
252.956 79.4279 mo
253.23 79.2695 li
250.529 77.7097 li
250.207 77.8955 li
250.529 77.7097 li
250.527 77.7084 li
240.996 83.2471 li
243.7 84.8085 li
253.231 79.2698 li
253.23 79.2695 li
252.956 79.4279 li
cp
.92549 .941176 .945098 rgb
f
243.055 87.7518 mo
241.172 86.6647 li
241.111 86.6296 241.062 86.5446 241.062 86.4749 cv
241.062 86.4053 241.111 86.3771 241.172 86.4121 cv
243.055 87.4992 li
243.116 87.5343 243.165 87.6193 243.165 87.6891 cv
243.165 87.7588 243.116 87.7869 243.055 87.7518 cv
cp
f
243.055 87.0783 mo
241.172 85.9912 li
241.111 85.9562 241.062 85.8712 241.062 85.8015 cv
241.062 85.7317 241.111 85.7036 241.172 85.7387 cv
243.055 86.8257 li
243.116 86.8608 243.165 86.9458 243.165 87.0155 cv
243.165 87.0853 243.116 87.1134 243.055 87.0783 cv
cp
f
243.055 86.4049 mo
241.172 85.3178 li
241.111 85.2827 241.062 85.1977 241.062 85.1279 cv
241.062 85.0582 241.111 85.0301 241.172 85.0652 cv
243.055 86.1523 li
243.116 86.1873 243.165 86.2724 243.165 86.3421 cv
243.165 86.4118 243.116 86.4399 243.055 86.4049 cv
cp
f
243.055 85.7313 mo
241.172 84.6442 li
241.111 84.6091 241.062 84.5241 241.062 84.4544 cv
241.062 84.3848 241.111 84.3567 241.172 84.3917 cv
243.055 85.4788 li
243.116 85.5139 243.165 85.5989 243.165 85.6686 cv
243.165 85.7383 243.116 85.7665 243.055 85.7313 cv
cp
f
285.133 136.449 mo
285.13 137.389 li
271.04 145.577 li
271.043 144.637 li
285.133 136.449 li
cp
.917647 .917647 .917647 rgb
f
271.043 144.637 mo
271.04 145.577 li
224.396 118.648 li
224.399 117.707 li
271.043 144.637 li
cp
.858824 .858824 .858824 rgb
f
285.133 136.449 mo
271.043 144.637 li
224.399 117.707 li
238.489 109.519 li
285.133 136.449 li
cp
1 1 1 rgb
f
163.472 150.158 mo
165.582 148.931 li
165.623 134.63 li
163.513 135.856 li
163.472 150.158 li
cp
.686275 .666667 .666667 rgb
f
175.833 142.969 mo
177.943 141.743 li
177.944 141.255 li
175.834 142.481 li
175.833 142.969 li
cp
.533333 .533333 .533333 rgb
f
175.834 142.481 mo
177.944 141.255 li
165.2 133.897 li
163.09 135.123 li
175.834 142.481 li
cp
.858824 .858824 .858824 rgb
f
163.09 135.123 mo
163.048 149.913 li
163.472 150.158 li
163.513 135.856 li
175.833 142.969 li
175.834 142.481 li
163.09 135.123 li
cp
.772549 .772549 .772549 rgb
f
163.474 126.528 mo
165.584 125.302 li
165.625 111.001 li
163.515 112.227 li
163.474 126.528 li
cp
.686275 .666667 .666667 rgb
f
175.833 119.339 mo
177.943 118.112 li
177.944 117.625 li
175.834 118.851 li
175.833 119.339 li
cp
.533333 .533333 .533333 rgb
f
175.834 118.851 mo
177.944 117.625 li
165.2 110.267 li
163.09 111.493 li
175.834 118.851 li
cp
.858824 .858824 .858824 rgb
f
163.09 111.493 mo
163.048 126.282 li
163.474 126.528 li
163.515 112.227 li
175.833 119.339 li
175.834 118.851 li
163.09 111.493 li
cp
.772549 .772549 .772549 rgb
f
159.618 136.445 mo
159.621 137.385 li
173.711 145.573 li
173.709 144.633 li
159.618 136.445 li
cp
.917647 .917647 .917647 rgb
f
173.709 144.633 mo
173.711 145.573 li
220.355 118.643 li
220.352 117.703 li
173.709 144.633 li
cp
.858824 .858824 .858824 rgb
f
159.618 136.445 mo
173.709 144.633 li
220.352 117.703 li
206.262 109.515 li
159.618 136.445 li
cp
1 1 1 rgb
f
202.125 98.139 mo
202.172 114.713 li
204.876 113.151 li
204.829 96.5775 li
202.125 98.139 li
cp
.92549 .941176 .945098 rgb
f
204.829 96.5775 mo
204.876 113.151 li
214.407 118.69 li
214.36 102.116 li
204.829 96.5775 li
cp
f
211.566 103.904 mo
211.613 120.477 li
214.797 118.639 li
214.75 102.065 li
211.566 103.904 li
cp
.52549 .85098 .964706 rgb
f
201.734 98.1902 mo
201.781 114.764 li
211.613 120.477 li
211.566 103.904 li
201.734 98.1902 li
cp
.329412 .737255 .85098 rgb
f
204.676 96.4916 mo
204.676 96.7994 li
204.942 96.6455 li
204.676 96.4916 li
cp
.741176 .764706 .780392 rgb
f
202.125 98.1386 mo
202.125 98.139 li
211.655 103.678 li
214.36 102.116 li
204.829 96.5775 li
204.827 96.5788 li
204.676 96.4916 li
204.919 96.3515 li
214.75 102.065 li
211.566 103.904 li
201.734 98.1902 li
201.974 98.0515 li
202.125 98.1386 li
cp
.670588 .913725 1 rgb
f
202.4 98.2971 mo
202.125 98.1386 li
204.827 96.5788 li
205.149 96.7646 li
204.827 96.5788 li
204.829 96.5775 li
214.36 102.116 li
211.655 103.678 li
202.125 98.139 li
202.125 98.1386 li
202.4 98.2971 li
cp
.92549 .941176 .945098 rgb
f
212.301 106.621 mo
214.184 105.534 li
214.244 105.499 214.294 105.414 214.294 105.344 cv
214.294 105.274 214.244 105.246 214.184 105.281 cv
212.301 106.368 li
212.24 106.403 212.191 106.488 212.191 106.558 cv
212.191 106.628 212.24 106.656 212.301 106.621 cv
cp
f
212.301 105.948 mo
214.184 104.86 li
214.244 104.825 214.294 104.74 214.294 104.671 cv
214.294 104.601 214.244 104.573 214.184 104.608 cv
212.301 105.695 li
212.24 105.73 212.191 105.815 212.191 105.885 cv
212.191 105.954 212.24 105.983 212.301 105.948 cv
cp
f
212.301 105.274 mo
214.184 104.187 li
214.244 104.152 214.294 104.067 214.294 103.997 cv
214.294 103.927 214.244 103.899 214.184 103.934 cv
212.301 105.021 li
212.24 105.057 212.191 105.142 212.191 105.211 cv
212.191 105.281 212.24 105.309 212.301 105.274 cv
cp
f
212.301 104.6 mo
214.184 103.513 li
214.244 103.478 214.294 103.393 214.294 103.324 cv
214.294 103.254 214.244 103.226 214.184 103.261 cv
212.301 104.348 li
212.24 104.383 212.191 104.468 212.191 104.538 cv
212.191 104.607 212.24 104.636 212.301 104.6 cv
cp
f
197.969 100.339 mo
198.016 116.913 li
200.72 115.352 li
200.673 98.7781 li
197.969 100.339 li
cp
f
200.673 98.7781 mo
200.72 115.352 li
210.251 120.89 li
210.204 104.317 li
200.673 98.7781 li
cp
f
207.41 106.104 mo
207.457 122.678 li
210.641 120.839 li
210.594 104.266 li
207.41 106.104 li
cp
.713726 .8 .211765 rgb
f
197.578 100.391 mo
197.625 116.964 li
207.457 122.678 li
207.41 106.104 li
197.578 100.391 li
cp
.627451 .678431 .152941 rgb
f
200.52 98.6921 mo
200.52 99 li
200.787 98.846 li
200.52 98.6921 li
cp
.741176 .764706 .780392 rgb
f
197.969 100.339 mo
197.969 100.34 li
207.499 105.878 li
210.204 104.317 li
200.673 98.7781 li
200.671 98.7793 li
200.52 98.6921 li
200.763 98.552 li
210.594 104.266 li
207.41 106.104 li
197.578 100.391 li
197.818 100.252 li
197.969 100.339 li
cp
.784314 .898039 .317647 rgb
f
198.244 100.498 mo
197.969 100.339 li
200.671 98.7793 li
200.993 98.9652 li
200.671 98.7793 li
200.673 98.7781 li
210.204 104.317 li
207.499 105.878 li
197.969 100.34 li
197.969 100.339 li
198.244 100.498 li
cp
.92549 .941176 .945098 rgb
f
208.145 108.822 mo
210.028 107.734 li
210.088 107.699 210.138 107.614 210.138 107.545 cv
210.138 107.475 210.088 107.447 210.028 107.482 cv
208.145 108.569 li
208.084 108.604 208.035 108.689 208.035 108.759 cv
208.035 108.829 208.084 108.857 208.145 108.822 cv
cp
f
208.145 108.148 mo
210.028 107.061 li
210.088 107.026 210.138 106.941 210.138 106.871 cv
210.138 106.801 210.088 106.773 210.028 106.808 cv
208.145 107.895 li
208.084 107.931 208.035 108.015 208.035 108.085 cv
208.035 108.155 208.084 108.183 208.145 108.148 cv
cp
f
208.145 107.474 mo
210.028 106.387 li
210.088 106.352 210.138 106.267 210.138 106.198 cv
210.138 106.128 210.088 106.1 210.028 106.135 cv
208.145 107.222 li
208.084 107.257 208.035 107.342 208.035 107.412 cv
208.035 107.481 208.084 107.51 208.145 107.474 cv
cp
f
208.145 106.801 mo
210.028 105.714 li
210.088 105.679 210.138 105.594 210.138 105.524 cv
210.138 105.454 210.088 105.426 210.028 105.461 cv
208.145 106.548 li
208.084 106.584 208.035 106.669 208.035 106.738 cv
208.035 106.808 208.084 106.836 208.145 106.801 cv
cp
f
159.787 112.675 mo
159.79 113.615 li
173.88 121.804 li
173.877 120.863 li
159.787 112.675 li
cp
.917647 .917647 .917647 rgb
f
173.877 120.863 mo
173.88 121.804 li
220.524 94.8737 li
220.521 93.9333 li
173.877 120.863 li
cp
.858824 .858824 .858824 rgb
f
159.787 112.675 mo
173.877 120.863 li
220.521 93.9333 li
206.431 85.7452 li
159.787 112.675 li
cp
1 1 1 rgb
f
214.902 134.804 mo
215.125 134.696 215.346 134.594 215.564 134.503 cv
215.59 134.492 215.617 134.479 215.643 134.468 cv
215.852 134.382 216.058 134.305 216.262 134.234 cv
216.318 134.214 216.373 134.198 216.429 134.18 cv
216.577 134.131 216.724 134.085 216.87 134.044 cv
216.956 134.02 217.041 133.998 217.126 133.976 cv
217.209 133.956 217.291 133.935 217.373 133.917 cv
217.462 133.897 217.551 133.879 217.64 133.862 cv
217.72 133.847 217.8 133.831 217.88 133.818 cv
217.934 133.81 217.988 133.803 218.042 133.796 cv
218.281 133.762 218.517 133.737 218.746 133.726 cv
218.758 133.725 218.77 133.723 218.782 133.723 cv
218.996 133.714 219.204 133.717 219.409 133.728 cv
219.462 133.731 219.514 133.734 219.566 133.738 cv
219.728 133.751 219.887 133.769 220.042 133.794 cv
220.073 133.799 220.105 133.802 220.136 133.807 cv
220.311 133.838 220.48 133.878 220.646 133.925 cv
220.69 133.937 220.733 133.952 220.777 133.966 cv
220.896 134.003 221.014 134.044 221.128 134.09 cv
221.177 134.109 221.226 134.129 221.274 134.15 cv
221.391 134.201 221.504 134.257 221.615 134.317 cv
221.658 134.34 221.703 134.36 221.745 134.384 cv
219.463 133.058 li
219.446 133.048 219.428 133.038 219.411 133.029 cv
219.386 133.014 219.358 133.004 219.333 132.99 cv
219.222 132.931 219.109 132.875 218.992 132.824 cv
218.97 132.814 218.95 132.802 218.927 132.792 cv
218.901 132.781 218.873 132.774 218.846 132.764 cv
218.732 132.718 218.615 132.677 218.495 132.64 cv
218.464 132.63 218.435 132.617 218.404 132.608 cv
218.391 132.604 218.377 132.602 218.364 132.599 cv
218.198 132.552 218.029 132.512 217.854 132.481 cv
217.847 132.48 217.84 132.478 217.832 132.476 cv
217.809 132.472 217.784 132.472 217.76 132.468 cv
217.605 132.443 217.446 132.425 217.284 132.412 cv
217.256 132.41 217.229 132.404 217.201 132.403 cv
217.177 132.401 217.151 132.403 217.127 132.402 cv
216.922 132.391 216.714 132.388 216.5 132.397 cv
216.497 132.397 216.495 132.397 216.492 132.397 cv
216.483 132.397 216.473 132.399 216.464 132.399 cv
216.235 132.41 216 132.436 215.76 132.469 cv
215.732 132.474 215.705 132.473 215.677 132.478 cv
215.65 132.482 215.623 132.488 215.597 132.492 cv
215.518 132.505 215.439 132.521 215.359 132.536 cv
215.27 132.553 215.18 132.57 215.09 132.591 cv
215.009 132.609 214.927 132.629 214.845 132.65 cv
214.787 132.665 214.73 132.676 214.671 132.692 cv
214.644 132.7 214.616 132.71 214.588 132.718 cv
214.442 132.759 214.295 132.805 214.147 132.854 cv
214.091 132.872 214.036 132.888 213.98 132.908 cv
213.776 132.978 213.57 133.056 213.361 133.142 cv
213.355 133.144 213.349 133.146 213.343 133.149 cv
213.323 133.157 213.302 133.168 213.282 133.176 cv
213.064 133.268 212.843 133.369 212.62 133.477 cv
212.555 133.509 212.49 133.541 212.425 133.574 cv
212.176 133.699 211.926 133.831 211.673 133.977 cv
186.188 148.691 li
188.47 150.017 li
213.955 135.303 li
214.208 135.157 214.458 135.025 214.707 134.9 cv
214.772 134.867 214.837 134.835 214.902 134.804 cv
cp
f
178.232 165.618 mo
178.236 165.553 178.241 165.489 178.246 165.424 cv
178.259 165.245 178.276 165.065 178.298 164.884 cv
178.305 164.826 178.31 164.768 178.318 164.709 cv
178.331 164.61 178.347 164.511 178.363 164.411 cv
178.377 164.322 178.389 164.233 178.405 164.143 cv
178.423 164.042 178.444 163.941 178.464 163.84 cv
178.48 163.755 178.496 163.67 178.515 163.584 cv
178.573 163.315 178.641 163.044 178.715 162.773 cv
178.731 162.711 178.749 162.648 178.767 162.586 cv
178.83 162.363 178.898 162.14 178.972 161.917 cv
178.981 161.887 178.99 161.858 179 161.829 cv
179.079 161.592 179.164 161.356 179.254 161.119 cv
179.279 161.054 179.305 160.989 179.331 160.923 cv
179.4 160.748 179.471 160.573 179.546 160.398 cv
179.575 160.33 179.604 160.262 179.634 160.193 cv
179.734 159.964 179.838 159.734 179.949 159.506 cv
179.949 159.504 179.95 159.502 179.951 159.5 cv
180.064 159.267 180.182 159.035 180.304 158.804 cv
180.339 158.738 180.374 158.673 180.409 158.608 cv
180.51 158.42 180.614 158.234 180.721 158.048 cv
180.753 157.993 180.784 157.937 180.817 157.882 cv
180.958 157.641 181.104 157.402 181.255 157.165 cv
181.285 157.118 181.316 157.071 181.347 157.024 cv
181.495 156.795 181.647 156.568 181.803 156.343 cv
181.832 156.302 181.859 156.261 181.887 156.221 cv
182.082 155.945 182.283 155.673 182.49 155.405 cv
182.525 155.359 182.56 155.314 182.595 155.268 cv
182.84 154.954 183.093 154.647 183.354 154.346 cv
183.393 154.3 183.433 154.254 183.473 154.208 cv
183.63 154.029 183.789 153.852 183.952 153.678 cv
183.968 153.66 183.985 153.642 184.001 153.624 cv
184.18 153.433 184.363 153.247 184.547 153.064 cv
184.586 153.026 184.625 152.988 184.664 152.95 cv
184.932 152.688 185.205 152.432 185.483 152.187 cv
185.514 152.159 185.546 152.133 185.577 152.105 cv
185.862 151.857 186.152 151.616 186.446 151.387 cv
186.471 151.368 186.496 151.35 186.52 151.331 cv
186.823 151.097 187.131 150.873 187.443 150.661 cv
187.458 150.652 187.473 150.643 187.487 150.633 cv
187.811 150.415 188.139 150.209 188.47 150.017 cv
186.188 148.691 li
185.857 148.882 185.529 149.089 185.205 149.307 cv
185.191 149.316 185.176 149.325 185.161 149.335 cv
184.849 149.547 184.541 149.771 184.238 150.005 cv
184.214 150.024 184.189 150.042 184.164 150.061 cv
183.869 150.29 183.58 150.531 183.295 150.78 cv
183.264 150.807 183.232 150.833 183.202 150.86 cv
182.923 151.106 182.65 151.362 182.382 151.624 cv
182.361 151.644 182.339 151.663 182.318 151.683 cv
182.3 151.701 182.283 151.72 182.265 151.738 cv
182.081 151.921 181.898 152.107 181.719 152.298 cv
181.703 152.316 181.686 152.334 181.67 152.352 cv
181.507 152.526 181.348 152.703 181.191 152.882 cv
181.169 152.906 181.147 152.929 181.126 152.953 cv
181.107 152.975 181.09 152.998 181.072 153.019 cv
180.811 153.321 180.558 153.628 180.313 153.942 cv
180.298 153.961 180.282 153.979 180.267 153.998 cv
180.247 154.025 180.228 154.052 180.208 154.079 cv
180.001 154.347 179.8 154.619 179.605 154.895 cv
179.597 154.906 179.588 154.917 179.58 154.929 cv
179.56 154.958 179.542 154.988 179.521 155.016 cv
179.365 155.241 179.213 155.469 179.065 155.698 cv
179.045 155.729 179.023 155.759 179.003 155.79 cv
178.993 155.806 178.983 155.823 178.973 155.839 cv
178.822 156.076 178.676 156.315 178.535 156.556 cv
178.525 156.573 178.514 156.589 178.504 156.606 cv
178.482 156.645 178.462 156.684 178.439 156.722 cv
178.332 156.908 178.228 157.095 178.127 157.283 cv
178.106 157.321 178.083 157.359 178.063 157.398 cv
178.049 157.424 178.037 157.45 178.023 157.477 cv
177.901 157.708 177.782 157.941 177.669 158.174 cv
177.669 158.175 li
177.668 158.176 177.667 158.178 177.667 158.179 cv
177.556 158.408 177.452 158.638 177.352 158.867 cv
177.34 158.894 177.327 158.92 177.315 158.947 cv
177.297 158.989 177.282 159.03 177.264 159.072 cv
177.189 159.247 177.118 159.422 177.049 159.598 cv
177.032 159.64 177.013 159.683 176.997 159.725 cv
176.988 159.748 176.981 159.77 176.972 159.793 cv
176.882 160.029 176.797 160.266 176.718 160.502 cv
176.715 160.509 176.713 160.516 176.71 160.522 cv
176.703 160.545 176.697 160.568 176.69 160.59 cv
176.616 160.814 176.548 161.037 176.485 161.26 cv
176.475 161.295 176.462 161.33 176.453 161.365 cv
176.445 161.392 176.44 161.419 176.433 161.446 cv
176.359 161.718 176.291 161.989 176.233 162.258 cv
176.23 162.27 176.227 162.282 176.224 162.294 cv
176.208 162.368 176.196 162.441 176.182 162.514 cv
176.162 162.615 176.141 162.716 176.123 162.817 cv
176.107 162.906 176.095 162.996 176.081 163.085 cv
176.065 163.185 176.049 163.284 176.036 163.383 cv
176.033 163.404 176.029 163.424 176.027 163.445 cv
176.022 163.483 176.02 163.52 176.016 163.558 cv
175.994 163.739 175.977 163.919 175.964 164.098 cv
175.959 164.163 175.954 164.227 175.95 164.292 cv
175.937 164.518 175.928 164.742 175.929 164.964 cv
176.06 201.082 li
178.342 202.408 li
178.211 166.29 li
178.21 166.069 178.219 165.844 178.232 165.618 cv
cp
f
213.955 135.303 mo
219.637 132.023 224.254 133.991 224.271 139.698 cv
224.401 175.815 li
178.342 202.408 li
178.211 166.29 li
178.195 160.584 182.788 153.297 188.47 150.017 cv
213.955 135.303 li
cp
.52549 .85098 .964706 rgb
f
181.536 186.641 mo
217.656 165.65 li
217.615 180.108 li
181.495 201.099 li
181.536 186.641 li
cp
.772549 .772549 .772549 rgb
f
227.275 227.53 mo
263.396 206.539 li
263.392 207.93 li
227.271 228.921 li
227.275 227.53 li
cp
f
181.495 201.099 mo
217.615 180.108 li
263.396 206.539 li
227.275 227.53 li
181.495 201.099 li
cp
.862745 .862745 .862745 rgb
f
227.32 211.681 mo
263.44 190.69 li
263.437 192.081 li
227.316 213.072 li
227.32 211.681 li
cp
.772549 .772549 .772549 rgb
f
180.329 184.551 mo
216.45 163.56 li
263.44 190.69 li
227.32 211.681 li
180.329 184.551 li
cp
.862745 .862745 .862745 rgb
f
181.495 201.099 mo
227.275 227.53 li
227.271 228.921 li
180.28 201.791 li
180.329 184.551 li
227.32 211.681 li
227.316 213.072 li
181.536 186.641 li
181.495 201.099 li
cp
.537255 .537255 .537255 rgb
f
228.529 213.772 mo
264.65 192.782 li
264.609 207.24 li
228.488 228.23 li
228.529 213.772 li
cp
.772549 .772549 .772549 rgb
f
228.488 228.23 mo
264.609 207.24 li
310.386 233.669 li
274.266 254.66 li
228.488 228.23 li
cp
.862745 .862745 .862745 rgb
f
275.524 239.512 mo
311.645 218.521 li
311.596 235.761 li
275.475 256.751 li
275.524 239.512 li
cp
.772549 .772549 .772549 rgb
f
227.32 211.681 mo
263.44 190.69 li
311.645 218.521 li
275.524 239.512 li
227.32 211.681 li
cp
.862745 .862745 .862745 rgb
f
274.266 254.66 mo
274.307 240.202 li
228.529 213.772 li
228.488 228.23 li
274.266 254.66 li
274.266 254.66 li
cp
227.32 211.681 mo
275.524 239.512 li
275.475 256.751 li
228.485 229.621 li
227.271 228.921 li
227.32 211.681 li
cp
.537255 .537255 .537255 rgb
f
226.515 212.81 mo
227.719 212.11 li
227.67 229.34 li
226.466 230.04 li
226.515 212.81 li
cp
.329412 .737255 .85098 rgb
f
179.262 185.528 mo
180.466 184.828 li
227.719 212.11 li
226.515 212.81 li
179.262 185.528 li
cp
.670588 .913725 1 rgb
f
226.515 212.81 mo
226.466 230.04 li
179.213 202.758 li
179.262 185.528 li
226.515 212.81 li
cp
.52549 .85098 .964706 rgb
f
274.368 240.438 mo
275.572 239.738 li
275.523 256.969 li
274.319 257.668 li
274.368 240.438 li
cp
.329412 .737255 .85098 rgb
f
227.115 213.156 mo
228.319 212.456 li
275.572 239.738 li
274.368 240.438 li
227.115 213.156 li
cp
.670588 .913725 1 rgb
f
274.368 240.438 mo
274.319 257.668 li
227.066 230.386 li
227.115 213.156 li
274.368 240.438 li
cp
.52549 .85098 .964706 rgb
f
320.955 206.498 mo
320.935 213.555 li
275.504 239.956 li
275.524 232.9 li
320.955 206.498 li
cp
.772549 .772549 .772549 rgb
f
275.524 232.9 mo
275.504 239.956 li
178.966 184.22 li
178.986 177.163 li
275.524 232.9 li
cp
.917647 .917647 .917647 rgb
f
320.955 206.498 mo
275.524 232.9 li
178.986 177.163 li
224.417 150.762 li
320.955 206.498 li
cp
1 1 1 rgb
f
314.113 192.189 mo
314.335 192.082 314.554 191.981 314.771 191.89 cv
314.799 191.879 314.827 191.865 314.855 191.854 cv
315.063 191.768 315.268 191.691 315.472 191.62 cv
315.528 191.6 315.584 191.584 315.64 191.566 cv
315.788 191.517 315.935 191.471 316.08 191.43 cv
316.167 191.406 316.252 191.384 316.338 191.362 cv
316.42 191.342 316.501 191.321 316.582 191.303 cv
316.673 191.283 316.762 191.266 316.851 191.248 cv
316.931 191.233 317.01 191.218 317.089 191.205 cv
317.144 191.196 317.198 191.19 317.252 191.182 cv
317.491 191.148 317.727 191.123 317.956 191.112 cv
317.968 191.111 317.98 191.11 317.992 191.109 cv
318.206 191.1 318.414 191.104 318.619 191.114 cv
318.672 191.117 318.724 191.121 318.776 191.125 cv
318.938 191.137 319.097 191.156 319.252 191.18 cv
319.283 191.185 319.315 191.188 319.346 191.194 cv
319.521 191.225 319.691 191.265 319.857 191.311 cv
319.901 191.324 319.943 191.339 319.987 191.352 cv
320.107 191.39 320.224 191.431 320.339 191.476 cv
320.388 191.496 320.437 191.516 320.485 191.537 cv
320.602 191.588 320.715 191.644 320.826 191.704 cv
320.869 191.727 320.914 191.747 320.956 191.771 cv
318.674 190.445 li
318.657 190.435 318.639 190.425 318.622 190.415 cv
318.597 190.401 318.57 190.391 318.545 190.378 cv
318.434 190.318 318.32 190.262 318.203 190.211 cv
318.181 190.201 318.16 190.188 318.138 190.179 cv
318.112 190.168 318.083 190.161 318.057 190.15 cv
317.942 190.105 317.825 190.064 317.705 190.026 cv
317.674 190.017 317.645 190.003 317.614 189.994 cv
317.602 189.991 317.588 189.989 317.575 189.985 cv
317.409 189.939 317.239 189.899 317.064 189.868 cv
317.057 189.866 317.05 189.864 317.043 189.863 cv
317.019 189.859 316.994 189.858 316.97 189.854 cv
316.815 189.829 316.656 189.811 316.494 189.799 cv
316.466 189.796 316.439 189.791 316.411 189.789 cv
316.387 189.787 316.361 189.79 316.337 189.788 cv
316.132 189.778 315.924 189.774 315.71 189.783 cv
315.707 189.783 315.705 189.783 315.702 189.783 cv
315.693 189.783 315.683 189.785 315.674 189.786 cv
315.445 189.797 315.209 189.822 314.97 189.856 cv
314.942 189.86 314.915 189.86 314.886 189.864 cv
314.86 189.868 314.833 189.875 314.807 189.879 cv
314.728 189.892 314.649 189.907 314.569 189.922 cv
314.48 189.939 314.391 189.957 314.3 189.977 cv
314.219 189.995 314.138 190.016 314.056 190.036 cv
313.997 190.051 313.94 190.063 313.881 190.079 cv
313.854 190.086 313.826 190.097 313.798 190.104 cv
313.652 190.145 313.505 190.191 313.356 190.24 cv
313.301 190.258 313.246 190.274 313.191 190.294 cv
312.987 190.364 312.781 190.442 312.573 190.528 cv
312.566 190.53 312.56 190.532 312.554 190.535 cv
312.532 190.544 312.511 190.555 312.489 190.564 cv
312.272 190.655 312.053 190.756 311.831 190.863 cv
311.766 190.895 311.701 190.927 311.636 190.96 cv
311.388 191.085 311.138 191.217 310.885 191.363 cv
285.397 206.078 li
287.679 207.404 li
313.167 192.689 li
313.42 192.543 313.67 192.411 313.918 192.286 cv
313.983 192.253 314.048 192.221 314.113 192.189 cv
cp
.917647 .917647 .917647 rgb
f
277.444 223.005 mo
277.448 222.941 277.453 222.877 277.457 222.813 cv
277.471 222.633 277.488 222.452 277.51 222.27 cv
277.517 222.213 277.522 222.155 277.53 222.098 cv
277.543 221.997 277.559 221.896 277.575 221.796 cv
277.589 221.707 277.601 221.619 277.617 221.531 cv
277.635 221.429 277.656 221.328 277.676 221.226 cv
277.692 221.141 277.708 221.056 277.727 220.97 cv
277.785 220.701 277.853 220.43 277.927 220.158 cv
277.944 220.096 277.961 220.035 277.978 219.973 cv
278.042 219.748 278.111 219.523 278.185 219.298 cv
278.194 219.27 278.202 219.243 278.211 219.215 cv
278.29 218.978 278.377 218.741 278.467 218.504 cv
278.491 218.439 278.517 218.374 278.543 218.309 cv
278.612 218.133 278.684 217.958 278.758 217.783 cv
278.787 217.715 278.816 217.646 278.846 217.578 cv
278.947 217.347 279.052 217.116 279.163 216.885 cv
279.163 216.885 li
279.276 216.652 279.395 216.419 279.517 216.188 cv
279.551 216.122 279.587 216.057 279.622 215.992 cv
279.723 215.805 279.827 215.618 279.934 215.432 cv
279.966 215.377 279.997 215.322 280.029 215.267 cv
280.17 215.026 280.316 214.787 280.467 214.55 cv
280.498 214.502 280.529 214.455 280.56 214.407 cv
280.708 214.178 280.86 213.95 281.017 213.725 cv
281.045 213.686 281.071 213.646 281.099 213.606 cv
281.294 213.33 281.495 213.058 281.702 212.789 cv
281.737 212.744 281.772 212.698 281.808 212.652 cv
282.053 212.339 282.306 212.031 282.566 211.73 cv
282.605 211.684 282.645 211.638 282.685 211.593 cv
282.841 211.414 283 211.238 283.162 211.065 cv
283.179 211.046 283.196 211.027 283.214 211.008 cv
283.392 210.818 283.574 210.633 283.758 210.45 cv
283.797 210.411 283.837 210.373 283.877 210.334 cv
284.144 210.072 284.417 209.817 284.695 209.572 cv
284.726 209.545 284.757 209.518 284.788 209.491 cv
285.073 209.243 285.362 209.003 285.656 208.774 cv
285.681 208.754 285.706 208.736 285.731 208.717 cv
286.034 208.483 286.341 208.259 286.653 208.048 cv
286.668 208.038 286.683 208.029 286.697 208.019 cv
287.021 207.802 287.348 207.596 287.679 207.404 cv
285.397 206.078 li
285.066 206.269 284.739 206.476 284.415 206.693 cv
284.401 206.703 284.386 206.712 284.371 206.722 cv
284.059 206.933 283.752 207.157 283.449 207.391 cv
283.424 207.41 283.399 207.428 283.374 207.447 cv
283.08 207.676 282.791 207.917 282.507 208.165 cv
282.475 208.192 282.444 208.219 282.412 208.246 cv
282.134 208.491 281.862 208.746 281.595 209.008 cv
281.574 209.029 281.551 209.047 281.53 209.068 cv
281.512 209.086 281.494 209.106 281.476 209.124 cv
281.292 209.307 281.11 209.492 280.932 209.682 cv
280.914 209.701 280.897 209.72 280.88 209.739 cv
280.718 209.912 280.559 210.088 280.403 210.267 cv
280.382 210.291 280.359 210.314 280.338 210.338 cv
280.32 210.359 280.303 210.382 280.284 210.404 cv
280.024 210.705 279.771 211.012 279.526 211.326 cv
279.511 211.345 279.495 211.363 279.48 211.382 cv
279.459 211.409 279.44 211.437 279.42 211.463 cv
279.213 211.732 279.012 212.004 278.817 212.28 cv
278.809 212.291 278.801 212.302 278.793 212.313 cv
278.773 212.341 278.755 212.371 278.735 212.4 cv
278.578 212.624 278.426 212.851 278.278 213.08 cv
278.258 213.112 278.236 213.142 278.216 213.174 cv
278.205 213.19 278.196 213.207 278.185 213.224 cv
278.034 213.461 277.888 213.7 277.747 213.94 cv
277.737 213.957 277.727 213.973 277.717 213.99 cv
277.694 214.028 277.674 214.067 277.652 214.106 cv
277.545 214.292 277.441 214.478 277.34 214.666 cv
277.319 214.705 277.296 214.743 277.275 214.782 cv
277.261 214.808 277.249 214.836 277.235 214.862 cv
277.113 215.093 276.994 215.324 276.882 215.557 cv
276.882 215.557 276.882 215.558 276.881 215.559 cv
276.881 215.56 li
276.77 215.791 276.665 216.022 276.564 216.252 cv
276.552 216.279 276.539 216.305 276.527 216.332 cv
276.509 216.373 276.494 216.415 276.476 216.457 cv
276.402 216.632 276.33 216.807 276.261 216.982 cv
276.245 217.025 276.225 217.067 276.209 217.11 cv
276.2 217.133 276.193 217.155 276.185 217.178 cv
276.095 217.415 276.009 217.652 275.93 217.888 cv
275.927 217.895 275.925 217.901 275.923 217.907 cv
275.915 217.929 275.91 217.951 275.902 217.974 cv
275.829 218.198 275.76 218.422 275.697 218.646 cv
275.687 218.681 275.674 218.716 275.665 218.75 cv
275.657 218.778 275.652 218.805 275.645 218.832 cv
275.571 219.104 275.503 219.375 275.445 219.645 cv
275.442 219.657 275.438 219.669 275.436 219.681 cv
275.42 219.754 275.408 219.826 275.394 219.899 cv
275.374 220.001 275.353 220.103 275.335 220.204 cv
275.319 220.294 275.306 220.383 275.292 220.473 cv
275.277 220.572 275.261 220.672 275.248 220.771 cv
275.245 220.791 275.241 220.811 275.239 220.832 cv
275.234 220.87 275.232 220.907 275.228 220.945 cv
275.206 221.127 275.189 221.307 275.175 221.487 cv
275.171 221.551 275.166 221.615 275.162 221.679 cv
275.149 221.906 275.14 222.131 275.141 222.353 cv
275.271 258.471 li
277.553 259.797 li
277.423 223.679 li
277.422 223.457 277.431 223.232 277.444 223.005 cv
cp
f
313.167 192.689 mo
318.846 189.41 323.466 191.377 323.482 197.086 cv
323.613 233.204 li
277.553 259.797 li
277.423 223.679 li
277.406 217.969 282 210.683 287.679 207.404 cv
313.167 192.689 li
cp
.52549 .85098 .964706 rgb
f
198.231 200.594 mo
198.227 201.824 li
197.163 202.443 li
197.167 201.213 li
198.231 200.594 li
cp
.572549 .588235 .603922 rgb
f
204.425 206.226 mo
204.422 207.456 li
195.739 202.443 li
195.742 201.213 li
204.425 206.226 li
cp
.858824 .858824 .858824 rgb
f
206.199 205.195 mo
206.196 206.425 li
204.422 207.456 li
204.425 206.226 li
206.199 205.195 li
cp
.717647 .698039 .698039 rgb
f
206.199 205.195 mo
204.425 206.226 li
195.742 201.213 li
197.516 200.182 li
198.231 200.594 li
197.167 201.213 li
204.421 205.401 li
205.485 204.783 li
206.199 205.195 li
cp
.94902 .94902 .94902 rgb
f
246.859 227.725 mo
246.855 228.955 li
245.791 229.574 li
245.795 228.344 li
246.859 227.725 li
cp
.572549 .588235 .603922 rgb
f
253.053 233.357 mo
253.05 234.587 li
244.367 229.574 li
244.37 228.344 li
253.053 233.357 li
cp
.858824 .858824 .858824 rgb
f
254.827 232.326 mo
254.823 233.556 li
253.05 234.587 li
253.053 233.357 li
254.827 232.326 li
cp
.717647 .698039 .698039 rgb
f
254.827 232.326 mo
253.053 233.357 li
244.37 228.344 li
246.144 227.313 li
246.859 227.725 li
245.795 228.344 li
253.048 232.532 li
254.112 231.914 li
254.827 232.326 li
cp
.94902 .94902 .94902 rgb
f
331.286 178.138 mo
329.176 176.912 li
329.135 162.61 li
331.245 163.836 li
331.286 178.138 li
cp
.686275 .666667 .666667 rgb
f
318.925 170.949 mo
316.815 169.723 li
316.814 169.235 li
318.924 170.462 li
318.925 170.949 li
cp
.533333 .533333 .533333 rgb
f
318.924 170.462 mo
316.814 169.235 li
329.558 161.877 li
331.668 163.104 li
318.924 170.462 li
cp
.858824 .858824 .858824 rgb
f
331.668 163.104 mo
331.71 177.893 li
331.286 178.138 li
331.245 163.836 li
318.925 170.949 li
318.924 170.462 li
331.668 163.104 li
cp
.772549 .772549 .772549 rgb
f
331.284 154.509 mo
329.174 153.283 li
329.133 138.981 li
331.243 140.207 li
331.284 154.509 li
cp
.686275 .666667 .666667 rgb
f
318.925 147.319 mo
316.815 146.093 li
316.814 145.605 li
318.924 146.831 li
318.925 147.319 li
cp
.533333 .533333 .533333 rgb
f
318.924 146.831 mo
316.814 145.605 li
329.558 138.247 li
331.668 139.473 li
318.924 146.831 li
cp
.858824 .858824 .858824 rgb
f
331.668 139.473 mo
331.71 154.263 li
331.284 154.509 li
331.243 140.207 li
318.925 147.319 li
318.924 146.831 li
331.668 139.473 li
cp
.772549 .772549 .772549 rgb
f
335.139 164.425 mo
335.137 165.365 li
321.047 173.553 li
321.049 172.613 li
335.139 164.425 li
cp
.917647 .917647 .917647 rgb
f
321.049 172.613 mo
321.047 173.553 li
274.403 146.624 li
274.405 145.683 li
321.049 172.613 li
cp
.858824 .858824 .858824 rgb
f
335.139 164.425 mo
321.049 172.613 li
274.405 145.683 li
288.495 137.495 li
335.139 164.425 li
cp
1 1 1 rgb
f
313.434 138.568 mo
313.387 155.142 li
310.682 153.58 li
310.729 137.007 li
313.434 138.568 li
cp
.92549 .941176 .945098 rgb
f
310.729 137.007 mo
310.682 153.58 li
301.151 159.119 li
301.198 142.545 li
310.729 137.007 li
cp
f
303.992 144.333 mo
303.945 160.906 li
300.761 159.068 li
300.808 142.494 li
303.992 144.333 li
cp
.713726 .8 .211765 rgb
f
313.824 138.619 mo
313.777 155.193 li
303.945 160.906 li
303.992 144.333 li
313.824 138.619 li
cp
.627451 .678431 .152941 rgb
f
310.882 136.921 mo
310.882 137.229 li
310.616 137.075 li
310.882 136.921 li
cp
.741176 .764706 .780392 rgb
f
313.433 138.568 mo
313.434 138.568 li
303.903 144.107 li
301.198 142.545 li
310.729 137.007 li
310.731 137.008 li
310.882 136.921 li
310.639 136.781 li
300.808 142.494 li
303.993 144.333 li
313.824 138.619 li
313.584 138.48 li
313.433 138.568 li
cp
.784314 .898039 .317647 rgb
f
313.158 138.726 mo
313.433 138.568 li
310.731 137.008 li
310.409 137.194 li
310.731 137.008 li
310.729 137.007 li
301.198 142.545 li
303.903 144.107 li
313.434 138.568 li
313.433 138.568 li
313.158 138.726 li
cp
.92549 .941176 .945098 rgb
f
303.257 147.05 mo
301.374 145.963 li
301.314 145.928 301.264 145.843 301.264 145.773 cv
301.264 145.703 301.314 145.675 301.374 145.71 cv
303.257 146.798 li
303.318 146.833 303.367 146.918 303.367 146.987 cv
303.367 147.057 303.318 147.085 303.257 147.05 cv
cp
f
303.257 146.377 mo
301.374 145.289 li
301.314 145.254 301.264 145.169 301.264 145.1 cv
301.264 145.03 301.314 145.002 301.374 145.037 cv
303.257 146.124 li
303.318 146.159 303.367 146.244 303.367 146.314 cv
303.367 146.384 303.318 146.412 303.257 146.377 cv
cp
f
303.257 145.703 mo
301.374 144.616 li
301.314 144.581 301.264 144.496 301.264 144.426 cv
301.264 144.356 301.314 144.328 301.374 144.363 cv
303.257 145.451 li
303.318 145.486 303.367 145.571 303.367 145.64 cv
303.367 145.71 303.318 145.738 303.257 145.703 cv
cp
f
303.257 145.03 mo
301.374 143.943 li
301.314 143.907 301.264 143.822 301.264 143.753 cv
301.264 143.683 301.314 143.655 301.374 143.69 cv
303.257 144.777 li
303.318 144.812 303.367 144.897 303.367 144.967 cv
303.367 145.036 303.318 145.065 303.257 145.03 cv
cp
f
334.971 140.655 mo
334.968 141.596 li
320.878 149.784 li
320.881 148.844 li
334.971 140.655 li
cp
.917647 .917647 .917647 rgb
f
320.881 148.844 mo
320.878 149.784 li
274.234 122.854 li
274.237 121.914 li
320.881 148.844 li
cp
.858824 .858824 .858824 rgb
f
334.971 140.655 mo
320.881 148.844 li
274.237 121.914 li
288.327 113.726 li
334.971 140.655 li
cp
1 1 1 rgb
f
293.902 102.188 mo
293.855 118.762 li
291.151 117.201 li
291.198 100.627 li
293.902 102.188 li
cp
.92549 .941176 .945098 rgb
f
291.198 100.627 mo
291.151 117.201 li
281.62 122.739 li
281.667 106.166 li
291.198 100.627 li
cp
f
284.461 107.953 mo
284.414 124.527 li
281.23 122.688 li
281.277 106.115 li
284.461 107.953 li
cp
.52549 .85098 .964706 rgb
f
294.293 102.24 mo
294.246 118.813 li
284.414 124.527 li
284.461 107.953 li
294.293 102.24 li
cp
.329412 .737255 .85098 rgb
f
291.351 100.541 mo
291.351 100.849 li
291.084 100.695 li
291.351 100.541 li
cp
.741176 .764706 .780392 rgb
f
293.902 102.188 mo
293.902 102.188 li
284.372 107.727 li
281.667 106.166 li
291.198 100.627 li
291.2 100.628 li
291.351 100.541 li
291.108 100.401 li
281.277 106.115 li
284.461 107.953 li
294.293 102.24 li
294.053 102.101 li
293.902 102.188 li
cp
.670588 .913725 1 rgb
f
293.627 102.347 mo
293.902 102.188 li
291.2 100.628 li
290.878 100.814 li
291.2 100.628 li
291.198 100.627 li
281.667 106.166 li
284.372 107.727 li
293.902 102.188 li
293.902 102.188 li
293.627 102.347 li
cp
.92549 .941176 .945098 rgb
f
283.726 110.67 mo
281.843 109.583 li
281.782 109.548 281.733 109.463 281.733 109.394 cv
281.733 109.324 281.782 109.296 281.843 109.331 cv
283.726 110.418 li
283.787 110.453 283.836 110.538 283.836 110.608 cv
283.836 110.677 283.787 110.706 283.726 110.67 cv
cp
f
283.726 109.997 mo
281.843 108.91 li
281.782 108.875 281.733 108.79 281.733 108.72 cv
281.733 108.65 281.782 108.622 281.843 108.657 cv
283.726 109.744 li
283.787 109.779 283.836 109.865 283.836 109.934 cv
283.836 110.004 283.787 110.032 283.726 109.997 cv
cp
f
283.726 109.324 mo
281.843 108.236 li
281.782 108.201 281.733 108.116 281.733 108.047 cv
281.733 107.977 281.782 107.949 281.843 107.984 cv
283.726 109.071 li
283.787 109.106 283.836 109.191 283.836 109.261 cv
283.836 109.331 283.787 109.359 283.726 109.324 cv
cp
f
283.726 108.65 mo
281.843 107.563 li
281.782 107.528 281.733 107.443 281.733 107.373 cv
281.733 107.303 281.782 107.275 281.843 107.31 cv
283.726 108.397 li
283.787 108.433 283.836 108.518 283.836 108.587 cv
283.836 108.657 283.787 108.685 283.726 108.65 cv
cp
f
298.058 104.389 mo
298.011 120.963 li
295.307 119.401 li
295.354 102.828 li
298.058 104.389 li
cp
f
295.354 102.828 mo
295.307 119.401 li
285.776 124.94 li
285.823 108.366 li
295.354 102.828 li
cp
f
288.617 110.154 mo
288.57 126.727 li
285.385 124.889 li
285.432 108.315 li
288.617 110.154 li
cp
.713726 .8 .211765 rgb
f
298.449 104.44 mo
298.402 121.014 li
288.57 126.727 li
288.617 110.154 li
298.449 104.44 li
cp
.627451 .678431 .152941 rgb
f
295.507 102.742 mo
295.507 103.049 li
295.24 102.896 li
295.507 102.742 li
cp
.741176 .764706 .780392 rgb
f
298.058 104.389 mo
298.058 104.389 li
288.528 109.928 li
285.823 108.366 li
295.354 102.828 li
295.356 102.829 li
295.507 102.742 li
295.264 102.602 li
285.432 108.315 li
288.617 110.154 li
298.449 104.44 li
298.209 104.301 li
298.058 104.389 li
cp
.784314 .898039 .317647 rgb
f
297.783 104.547 mo
298.058 104.389 li
295.356 102.829 li
295.034 103.015 li
295.356 102.829 li
295.354 102.828 li
285.823 108.366 li
288.528 109.928 li
298.058 104.389 li
298.058 104.389 li
297.783 104.547 li
cp
.92549 .941176 .945098 rgb
f
287.882 112.871 mo
285.999 111.784 li
285.938 111.749 285.889 111.664 285.889 111.594 cv
285.889 111.524 285.938 111.496 285.999 111.531 cv
287.882 112.618 li
287.943 112.654 287.992 112.739 287.992 112.808 cv
287.992 112.878 287.943 112.906 287.882 112.871 cv
cp
f
287.882 112.198 mo
285.999 111.11 li
285.938 111.075 285.889 110.99 285.889 110.921 cv
285.889 110.851 285.938 110.823 285.999 110.858 cv
287.882 111.945 li
287.943 111.98 287.992 112.065 287.992 112.135 cv
287.992 112.204 287.943 112.233 287.882 112.198 cv
cp
f
287.882 111.524 mo
285.999 110.437 li
285.938 110.402 285.889 110.317 285.889 110.247 cv
285.889 110.177 285.938 110.149 285.999 110.184 cv
287.882 111.271 li
287.943 111.306 287.992 111.392 287.992 111.461 cv
287.992 111.531 287.943 111.559 287.882 111.524 cv
cp
f
287.882 110.851 mo
285.999 109.763 li
285.938 109.728 285.889 109.643 285.889 109.574 cv
285.889 109.504 285.938 109.476 285.999 109.511 cv
287.882 110.598 li
287.943 110.633 287.992 110.718 287.992 110.788 cv
287.992 110.857 287.943 110.886 287.882 110.851 cv
cp
f
288.791 126.898 mo
303.168 118.651 li
303.168 121.774 li
288.791 130.02 li
288.791 126.898 li
cp
f
288.791 130.02 mo
303.168 121.774 li
312.73 127.259 li
298.353 135.505 li
288.791 130.02 li
cp
f
298.504 132.191 mo
312.881 123.945 li
312.881 127.623 li
298.504 135.869 li
298.504 132.191 li
cp
.968627 .839216 .301961 rgb
f
288.64 126.534 mo
303.017 118.288 li
312.881 123.945 li
298.504 132.191 li
288.64 126.534 li
cp
.968627 .823529 .215686 rgb
f
288.64 129.931 mo
288.907 129.777 li
288.907 130.085 li
288.64 129.931 li
cp
.741176 .764706 .780392 rgb
f
288.791 126.898 mo
288.791 126.898 li
298.353 132.382 li
298.353 135.505 li
288.791 130.02 li
288.792 130.018 li
288.64 129.931 li
288.641 130.211 li
298.504 135.869 li
298.504 132.191 li
288.64 126.534 li
288.641 126.811 li
288.791 126.898 li
cp
.956863 .898039 .65098 rgb
f
289.066 127.057 mo
288.791 126.898 li
288.792 130.018 li
289.113 130.204 li
288.792 130.018 li
288.791 130.02 li
298.353 135.505 li
298.353 132.382 li
288.791 126.898 li
288.791 126.898 li
289.066 127.057 li
cp
.917647 .917647 .917647 rgb
f
301.225 131.469 mo
301.225 133.644 li
301.225 133.714 301.176 133.799 301.116 133.834 cv
301.055 133.869 301.006 133.84 301.006 133.77 cv
301.006 131.596 li
301.006 131.526 301.055 131.44 301.116 131.405 cv
301.176 131.371 301.225 131.399 301.225 131.469 cv
cp
.92549 .941176 .945098 rgb
f
300.642 131.806 mo
300.642 133.98 li
300.642 134.05 300.593 134.136 300.533 134.171 cv
300.472 134.205 300.423 134.177 300.423 134.107 cv
300.423 131.933 li
300.423 131.862 300.472 131.777 300.533 131.742 cv
300.593 131.707 300.642 131.736 300.642 131.806 cv
cp
f
300.059 132.143 mo
300.059 134.317 li
300.059 134.387 300.01 134.472 299.949 134.507 cv
299.889 134.542 299.84 134.514 299.84 134.443 cv
299.84 132.269 li
299.84 132.199 299.889 132.114 299.949 132.079 cv
300.01 132.044 300.059 132.073 300.059 132.143 cv
cp
f
299.475 132.48 mo
299.475 134.654 li
299.475 134.724 299.426 134.809 299.366 134.844 cv
299.306 134.879 299.257 134.85 299.257 134.78 cv
299.257 132.606 li
299.257 132.536 299.306 132.451 299.366 132.416 cv
299.426 132.381 299.475 132.41 299.475 132.48 cv
cp
f
380.233 213.317 mo
356.352 199.53 li
356.352 150.034 li
380.233 163.821 li
380.233 213.317 li
cp
.439216 .741176 .909804 rgb
f
357.684 177.138 mo
359.121 176.303 li
359.054 199.844 li
357.618 200.679 li
357.684 177.138 li
cp
.913725 .913725 .913725 rgb
f
357.618 200.679 mo
359.054 199.844 li
380.264 212.089 li
378.827 212.924 li
357.618 200.679 li
cp
.92549 .92549 .92549 rgb
f
357.758 151.103 mo
359.195 150.268 li
359.128 173.809 li
357.691 174.644 li
357.758 151.103 li
cp
.913725 .913725 .913725 rgb
f
357.691 174.644 mo
359.128 173.809 li
380.337 186.054 li
378.901 186.889 li
357.691 174.644 li
cp
.92549 .92549 .92549 rgb
f
381.145 162.111 mo
381.071 188.142 li
381.064 190.636 li
380.99 216.671 li
382.427 215.836 li
382.501 189.801 li
382.508 187.307 li
382.582 161.276 li
381.145 162.111 li
cp
.498039 .54902 .552941 rgb
f
403.853 226.989 mo
379.972 213.202 li
379.972 163.706 li
403.853 177.493 li
403.853 226.989 li
cp
.439216 .741176 .909804 rgb
f
381.304 190.81 mo
382.741 189.975 li
382.674 213.516 li
381.238 214.35 li
381.304 190.81 li
cp
.913725 .913725 .913725 rgb
f
381.238 214.35 mo
382.674 213.516 li
403.884 225.761 li
402.447 226.596 li
381.238 214.35 li
cp
.92549 .92549 .92549 rgb
f
381.378 164.775 mo
382.815 163.94 li
382.748 187.481 li
381.311 188.316 li
381.378 164.775 li
cp
.913725 .913725 .913725 rgb
f
381.311 188.316 mo
382.748 187.481 li
403.957 199.726 li
402.521 200.561 li
381.311 188.316 li
cp
.92549 .92549 .92549 rgb
f
355.595 147.36 mo
357.032 146.525 li
382.582 161.276 li
382.552 161.294 li
406.201 174.948 li
404.765 175.783 li
379.215 161.032 li
379.245 161.014 li
355.595 147.36 li
cp
.898039 .898039 .898039 rgb
f
381.238 214.35 mo
381.304 190.81 li
402.513 203.055 li
402.447 226.596 li
381.238 214.35 li
cp
402.521 200.561 mo
381.311 188.316 li
381.378 164.775 li
402.587 177.02 li
402.521 200.561 li
cp
378.967 163.348 mo
378.901 186.889 li
357.691 174.644 li
357.758 151.103 li
378.967 163.348 li
cp
357.684 177.138 mo
378.894 189.383 li
378.827 212.924 li
357.618 200.679 li
357.684 177.138 li
cp
379.06 215.557 mo
379.06 215.591 li
404.61 230.343 li
404.684 204.308 li
404.691 201.814 li
404.765 175.783 li
381.145 162.146 li
381.145 162.111 li
355.595 147.36 li
355.521 173.391 li
355.514 175.885 li
355.44 201.92 li
379.06 215.557 li
cp
.980392 .980392 .980392 rgb
f
404.765 175.783 mo
404.691 201.814 li
404.684 204.308 li
404.61 230.343 li
406.047 229.508 li
406.121 203.473 li
406.128 200.979 li
406.201 174.948 li
404.765 175.783 li
cp
.886275 .886275 .886275 rgb
f
348.921 202.069 mo
350.047 202.069 li
350.047 134.61 li
348.921 134.61 li
348.921 202.069 li
cp
.945098 .94902 .94902 rgb
f
409.418 236.729 mo
410.543 236.729 li
410.543 169.27 li
409.418 169.27 li
409.418 236.729 li
cp
f
413.187 209.331 mo
413.294 209.54 li
411.119 211.998 li
411.013 211.788 li
413.187 209.331 li
cp
.858824 .858824 .858824 rgb
f
411.013 211.788 mo
411.119 211.998 li
345.788 174.279 li
345.681 174.069 li
411.013 211.788 li
cp
.827451 .811765 .811765 rgb
f
413.187 209.331 mo
411.013 211.788 li
345.681 174.069 li
347.856 171.612 li
413.187 209.331 li
cp
1 1 1 rgb
f
413.186 208.457 mo
413.293 208.667 li
411.12 211.122 li
411.014 210.912 li
413.186 208.457 li
cp
.858824 .858824 .858824 rgb
f
411.014 210.912 mo
411.12 211.122 li
345.789 173.403 li
345.682 173.193 li
411.014 210.912 li
cp
.827451 .811765 .811765 rgb
f
413.186 208.457 mo
411.014 210.912 li
345.682 173.193 li
347.855 170.738 li
413.186 208.457 li
cp
1 1 1 rgb
f
413.187 207.581 mo
413.294 207.791 li
411.119 210.248 li
411.013 210.039 li
413.187 207.581 li
cp
.858824 .858824 .858824 rgb
f
411.013 210.039 mo
411.119 210.248 li
345.788 172.529 li
345.681 172.32 li
411.013 210.039 li
cp
.827451 .811765 .811765 rgb
f
413.187 207.581 mo
411.013 210.039 li
345.681 172.32 li
347.856 169.862 li
413.187 207.581 li
cp
1 1 1 rgb
f
413.186 206.707 mo
413.293 206.917 li
411.12 209.372 li
411.014 209.162 li
413.186 206.707 li
cp
.858824 .858824 .858824 rgb
f
411.014 209.162 mo
411.12 209.372 li
345.789 171.653 li
345.682 171.443 li
411.014 209.162 li
cp
.827451 .811765 .811765 rgb
f
413.186 206.707 mo
411.014 209.162 li
345.682 171.443 li
347.855 168.988 li
413.186 206.707 li
cp
1 1 1 rgb
f
413.187 205.831 mo
413.294 206.041 li
411.119 208.498 li
411.013 208.289 li
413.187 205.831 li
cp
.858824 .858824 .858824 rgb
f
411.013 208.289 mo
411.119 208.498 li
345.788 170.779 li
345.681 170.57 li
411.013 208.289 li
cp
.827451 .811765 .811765 rgb
f
413.187 205.831 mo
411.013 208.289 li
345.681 170.57 li
347.856 168.112 li
413.187 205.831 li
cp
1 1 1 rgb
f
413.187 204.958 mo
413.294 205.167 li
411.119 207.625 li
411.013 207.416 li
413.187 204.958 li
cp
.858824 .858824 .858824 rgb
f
411.013 207.416 mo
411.119 207.625 li
345.788 169.906 li
345.681 169.697 li
411.013 207.416 li
cp
.827451 .811765 .811765 rgb
f
413.187 204.958 mo
411.013 207.416 li
345.681 169.697 li
347.856 167.239 li
413.187 204.958 li
cp
1 1 1 rgb
f
413.187 204.081 mo
413.294 204.291 li
411.119 206.749 li
411.013 206.539 li
413.187 204.081 li
cp
.858824 .858824 .858824 rgb
f
411.013 206.539 mo
411.119 206.749 li
345.788 169.03 li
345.681 168.82 li
411.013 206.539 li
cp
.827451 .811765 .811765 rgb
f
413.187 204.081 mo
411.013 206.539 li
345.681 168.82 li
347.856 166.362 li
413.187 204.081 li
cp
1 1 1 rgb
f
413.187 203.208 mo
413.294 203.418 li
411.119 205.875 li
411.013 205.666 li
413.187 203.208 li
cp
.858824 .858824 .858824 rgb
f
411.013 205.666 mo
411.119 205.875 li
345.788 168.156 li
345.681 167.947 li
411.013 205.666 li
cp
.827451 .811765 .811765 rgb
f
413.187 203.208 mo
411.013 205.666 li
345.681 167.947 li
347.856 165.489 li
413.187 203.208 li
cp
1 1 1 rgb
f
413.187 198.332 mo
413.294 198.541 li
411.119 200.999 li
411.013 200.789 li
413.187 198.332 li
cp
.858824 .858824 .858824 rgb
f
411.013 200.789 mo
411.119 200.999 li
345.788 163.28 li
345.681 163.07 li
411.013 200.789 li
cp
.827451 .811765 .811765 rgb
f
413.187 198.332 mo
411.013 200.789 li
345.681 163.07 li
347.856 160.613 li
413.187 198.332 li
cp
1 1 1 rgb
f
413.187 193.458 mo
413.294 193.668 li
411.119 196.126 li
411.013 195.916 li
413.187 193.458 li
cp
.858824 .858824 .858824 rgb
f
411.013 195.916 mo
411.119 196.126 li
345.788 158.407 li
345.681 158.197 li
411.013 195.916 li
cp
.827451 .811765 .811765 rgb
f
413.187 193.458 mo
411.013 195.916 li
345.681 158.197 li
347.856 155.739 li
413.187 193.458 li
cp
1 1 1 rgb
f
413.186 188.585 mo
413.293 188.794 li
411.12 191.249 li
411.014 191.04 li
413.186 188.585 li
cp
.858824 .858824 .858824 rgb
f
411.014 191.04 mo
411.12 191.249 li
345.789 153.53 li
345.682 153.321 li
411.014 191.04 li
cp
.827451 .811765 .811765 rgb
f
413.186 188.585 mo
411.014 191.04 li
345.682 153.321 li
347.855 150.866 li
413.186 188.585 li
cp
1 1 1 rgb
f
413.186 183.71 mo
413.293 183.92 li
411.12 186.375 li
411.014 186.165 li
413.186 183.71 li
cp
.858824 .858824 .858824 rgb
f
411.014 186.165 mo
411.12 186.375 li
345.789 148.656 li
345.682 148.446 li
411.014 186.165 li
cp
.827451 .811765 .811765 rgb
f
413.186 183.71 mo
411.014 186.165 li
345.682 148.446 li
347.855 145.991 li
413.186 183.71 li
cp
1 1 1 rgb
f
413.187 178.834 mo
413.294 179.043 li
411.119 181.501 li
411.013 181.292 li
413.187 178.834 li
cp
.858824 .858824 .858824 rgb
f
411.013 181.292 mo
411.119 181.501 li
345.788 143.782 li
345.681 143.572 li
411.013 181.292 li
cp
.827451 .811765 .811765 rgb
f
413.187 178.834 mo
411.013 181.292 li
345.681 143.572 li
347.856 141.115 li
413.187 178.834 li
cp
1 1 1 rgb
f
413.186 173.96 mo
413.293 174.17 li
411.12 176.625 li
411.014 176.415 li
413.186 173.96 li
cp
.858824 .858824 .858824 rgb
f
411.014 176.415 mo
411.12 176.625 li
345.789 138.906 li
345.682 138.696 li
411.014 176.415 li
cp
.827451 .811765 .811765 rgb
f
413.186 173.96 mo
411.014 176.415 li
345.682 138.696 li
347.855 136.241 li
413.186 173.96 li
cp
1 1 1 rgb
f
411.563 170.039 mo
414.401 168.39 li
414.394 170.686 li
411.557 172.335 li
411.563 170.039 li
cp
.827451 .811765 .811765 rgb
f
345.387 131.535 mo
348.225 129.886 li
414.401 168.39 li
411.563 170.039 li
345.387 131.535 li
cp
1 1 1 rgb
f
411.563 170.039 mo
411.557 172.335 li
345.381 133.831 li
345.387 131.535 li
411.563 170.039 li
cp
.917647 .917647 .917647 rgb
f
373.818 273.831 mo
376.185 272.455 li
376.074 307.436 li
373.707 308.811 li
373.818 273.831 li
cp
.94902 .94902 .94902 rgb
f
371.618 272.561 mo
373.985 271.185 li
376.185 272.455 li
373.818 273.831 li
371.618 272.561 li
cp
.686275 .666667 .666667 rgb
f
373.818 273.831 mo
373.707 308.811 li
371.507 307.541 li
371.618 272.561 li
373.818 273.831 li
cp
.858824 .858824 .858824 rgb
f
405.299 255.654 mo
407.666 254.279 li
407.555 289.259 li
405.188 290.635 li
405.299 255.654 li
cp
.94902 .94902 .94902 rgb
f
403.099 254.384 mo
405.466 253.009 li
407.666 254.279 li
405.299 255.654 li
403.099 254.384 li
cp
.686275 .666667 .666667 rgb
f
405.299 255.654 mo
405.188 290.635 li
402.987 289.364 li
403.099 254.384 li
405.299 255.654 li
cp
.858824 .858824 .858824 rgb
f
317.607 241.622 mo
319.974 240.246 li
319.862 275.227 li
317.496 276.602 li
317.607 241.622 li
cp
.917647 .917647 .917647 rgb
f
315.407 240.351 mo
317.774 238.976 li
319.974 240.246 li
317.607 241.622 li
315.407 240.351 li
cp
.686275 .666667 .666667 rgb
f
317.607 241.622 mo
317.496 276.602 li
315.295 275.332 li
315.407 240.351 li
317.607 241.622 li
cp
.858824 .858824 .858824 rgb
f
349.088 223.445 mo
351.455 222.07 li
351.343 257.05 li
348.977 258.426 li
349.088 223.445 li
cp
.917647 .917647 .917647 rgb
f
346.888 222.175 mo
349.255 220.8 li
351.455 222.07 li
349.088 223.445 li
346.888 222.175 li
cp
.686275 .666667 .666667 rgb
f
349.088 223.445 mo
348.977 258.426 li
346.776 257.155 li
346.888 222.175 li
349.088 223.445 li
cp
.858824 .858824 .858824 rgb
f
316.692 235.275 mo
350.512 215.621 li
350.5 220.156 li
316.679 239.81 li
316.692 235.275 li
cp
.717647 .698039 .698039 rgb
f
316.679 239.81 mo
350.5 220.156 li
406.41 252.436 li
372.589 272.09 li
316.679 239.81 li
cp
.827451 .811765 .811765 rgb
f
373.846 266.85 mo
407.666 247.195 li
407.645 254.576 li
373.825 274.23 li
373.846 266.85 li
cp
.94902 .94902 .94902 rgb
f
315.46 233.14 mo
349.28 213.486 li
407.666 247.195 li
373.846 266.85 li
315.46 233.14 li
cp
1 1 1 rgb
f
372.589 272.09 mo
372.602 267.555 li
316.692 235.275 li
316.679 239.81 li
372.589 272.09 li
372.589 272.09 li
cp
315.46 233.14 mo
373.846 266.85 li
373.825 274.23 li
315.439 240.52 li
315.46 233.14 li
cp
.858824 .858824 .858824 rgb
f
336.745 289.162 mo
336.746 289.158 336.746 289.156 336.746 289.152 cv
336.748 289.126 336.75 289.09 336.752 289.049 cv
336.755 289.012 336.757 288.968 336.76 288.919 cv
336.761 288.905 336.762 288.893 336.763 288.878 cv
336.766 288.818 336.77 288.748 336.774 288.674 cv
336.775 288.656 336.776 288.638 336.777 288.62 cv
336.781 288.539 336.786 288.449 336.791 288.352 cv
336.792 288.335 336.793 288.316 336.794 288.297 cv
336.799 288.194 336.804 288.084 336.81 287.965 cv
336.81 287.962 336.81 287.959 336.81 287.956 cv
336.816 287.837 336.821 287.708 336.827 287.574 cv
336.828 287.55 336.829 287.526 336.83 287.502 cv
336.836 287.37 336.842 287.232 336.847 287.088 cv
336.848 287.06 336.849 287.033 336.85 287.005 cv
336.856 286.854 336.862 286.697 336.868 286.533 cv
336.868 286.519 336.869 286.504 336.869 286.49 cv
336.874 286.332 336.88 286.167 336.885 285.999 cv
336.886 285.973 336.887 285.948 336.887 285.922 cv
336.891 285.783 336.895 285.641 336.899 285.496 cv
336.9 285.476 336.9 285.456 336.901 285.437 cv
336.904 285.311 336.907 285.184 336.91 285.054 cv
336.911 285.009 336.912 284.964 336.913 284.919 cv
336.916 284.81 336.918 284.7 336.92 284.589 cv
336.921 284.539 336.922 284.49 336.923 284.44 cv
336.926 284.284 336.929 284.125 336.931 283.964 cv
336.931 283.959 336.931 283.953 336.931 283.947 cv
336.933 283.792 336.935 283.634 336.937 283.476 cv
336.938 283.425 336.938 283.374 336.938 283.323 cv
336.94 283.206 336.94 283.088 336.941 282.969 cv
336.942 282.91 336.942 282.852 336.942 282.793 cv
336.943 282.65 336.943 282.507 336.944 282.362 cv
336.944 282.334 336.944 282.306 336.944 282.278 cv
336.944 282.106 336.943 281.933 336.943 281.759 cv
336.943 281.733 336.942 281.707 336.942 281.681 cv
336.94 281.14 336.933 280.586 336.921 280.026 cv
336.921 280.02 336.921 280.015 336.921 280.009 cv
336.909 279.449 336.891 278.883 336.868 278.317 cv
336.867 278.295 336.866 278.272 336.865 278.25 cv
336.848 277.845 336.828 277.441 336.804 277.039 cv
336.802 277.013 336.801 276.986 336.799 276.96 cv
336.774 276.552 336.746 276.146 336.714 275.745 cv
336.713 275.734 336.712 275.723 336.711 275.712 cv
336.686 275.401 336.658 275.092 336.627 274.788 cv
336.624 274.76 336.621 274.732 336.618 274.704 cv
336.589 274.414 336.557 274.128 336.522 273.847 cv
336.517 273.81 336.513 273.773 336.508 273.737 cv
336.48 273.513 336.45 273.293 336.419 273.076 cv
336.415 273.051 336.411 273.027 336.407 273.002 cv
336.375 272.786 336.341 272.573 336.306 272.364 cv
336.303 272.35 336.301 272.335 336.298 272.321 cv
336.268 272.149 336.237 271.981 336.205 271.815 cv
336.196 271.772 336.188 271.73 336.179 271.687 cv
336.151 271.547 336.122 271.409 336.091 271.273 cv
336.085 271.245 336.079 271.215 336.072 271.187 cv
336.04 271.046 336.007 270.908 335.972 270.774 cv
335.965 270.744 335.957 270.715 335.949 270.685 cv
335.922 270.581 335.894 270.478 335.865 270.377 cv
335.856 270.347 335.847 270.318 335.839 270.288 cv
335.771 270.056 335.698 269.835 335.622 269.626 cv
335.613 269.602 335.605 269.577 335.596 269.554 cv
335.572 269.489 335.546 269.426 335.521 269.363 cv
335.506 269.326 335.491 269.287 335.476 269.251 cv
335.446 269.179 335.414 269.11 335.383 269.042 cv
335.372 269.018 335.361 268.992 335.35 268.968 cv
335.306 268.877 335.261 268.788 335.215 268.704 cv
335.203 268.682 335.19 268.662 335.178 268.64 cv
335.143 268.579 335.108 268.518 335.072 268.461 cv
335.062 268.445 335.051 268.43 335.041 268.414 cv
334.962 268.293 334.881 268.18 334.796 268.08 cv
334.79 268.073 334.783 268.066 334.777 268.059 cv
334.688 267.956 334.596 267.863 334.499 267.784 cv
334.326 267.642 334.144 267.515 333.953 267.404 cv
337.593 269.52 li
337.784 269.631 337.966 269.757 338.139 269.899 cv
338.236 269.978 338.328 270.071 338.417 270.175 cv
338.423 270.182 338.43 270.188 338.436 270.195 cv
338.521 270.295 338.602 270.408 338.681 270.529 cv
338.686 270.538 338.693 270.545 338.699 270.554 cv
338.703 270.561 338.708 270.569 338.712 270.577 cv
338.748 270.634 338.784 270.695 338.818 270.756 cv
338.83 270.777 338.843 270.797 338.854 270.819 cv
338.901 270.903 338.946 270.992 338.99 271.084 cv
338.991 271.086 338.992 271.088 338.993 271.091 cv
339.003 271.112 339.012 271.135 339.022 271.156 cv
339.054 271.225 339.085 271.294 339.116 271.366 cv
339.131 271.402 339.146 271.44 339.161 271.477 cv
339.186 271.54 339.211 271.604 339.236 271.669 cv
339.241 271.682 339.246 271.694 339.251 271.707 cv
339.255 271.718 339.258 271.731 339.262 271.741 cv
339.338 271.95 339.41 272.171 339.478 272.403 cv
339.482 272.415 339.486 272.426 339.49 272.438 cv
339.495 272.456 339.5 272.474 339.505 272.492 cv
339.533 272.593 339.561 272.696 339.589 272.801 cv
339.597 272.83 339.605 272.859 339.612 272.889 cv
339.647 273.023 339.68 273.161 339.712 273.302 cv
339.714 273.31 339.716 273.317 339.717 273.325 cv
339.722 273.346 339.726 273.368 339.731 273.389 cv
339.761 273.524 339.791 273.662 339.819 273.802 cv
339.827 273.845 339.836 273.887 339.844 273.93 cv
339.877 274.096 339.908 274.264 339.938 274.436 cv
339.939 274.44 339.94 274.444 339.94 274.447 cv
339.942 274.458 339.944 274.469 339.945 274.479 cv
339.981 274.687 340.015 274.899 340.047 275.115 cv
340.051 275.141 340.055 275.167 340.059 275.193 cv
340.09 275.409 340.12 275.629 340.148 275.852 cv
340.151 275.873 340.154 275.894 340.156 275.915 cv
340.158 275.93 340.16 275.946 340.162 275.962 cv
340.196 276.243 340.229 276.53 340.258 276.821 cv
340.261 276.848 340.264 276.874 340.267 276.902 cv
340.297 277.205 340.325 277.513 340.351 277.824 cv
340.351 277.833 340.352 277.842 340.353 277.851 cv
340.353 277.855 340.353 277.858 340.354 277.862 cv
340.386 278.262 340.414 278.668 340.439 279.075 cv
340.44 279.102 340.442 279.128 340.444 279.154 cv
340.467 279.556 340.488 279.96 340.505 280.365 cv
340.505 280.376 340.506 280.388 340.506 280.399 cv
340.507 280.41 340.507 280.421 340.507 280.432 cv
340.531 280.998 340.548 281.564 340.56 282.124 cv
340.561 282.13 340.561 282.135 340.561 282.141 cv
340.573 282.701 340.579 283.255 340.582 283.796 cv
340.582 283.805 340.582 283.814 340.582 283.823 cv
340.582 283.84 340.582 283.857 340.582 283.874 cv
340.583 284.049 340.584 284.222 340.584 284.393 cv
340.584 284.419 340.583 284.445 340.583 284.471 cv
340.583 284.62 340.583 284.768 340.582 284.914 cv
340.582 284.97 340.581 285.024 340.581 285.079 cv
340.58 285.2 340.579 285.319 340.578 285.438 cv
340.578 285.489 340.577 285.541 340.577 285.592 cv
340.575 285.738 340.573 285.883 340.571 286.026 cv
340.571 286.046 340.571 286.067 340.571 286.086 cv
340.568 286.248 340.566 286.406 340.563 286.563 cv
340.562 286.606 340.561 286.647 340.56 286.689 cv
340.558 286.805 340.556 286.918 340.553 287.031 cv
340.552 287.08 340.551 287.129 340.55 287.177 cv
340.547 287.294 340.544 287.408 340.541 287.521 cv
340.541 287.554 340.54 287.587 340.539 287.619 cv
340.535 287.762 340.531 287.901 340.527 288.037 cv
340.527 288.046 340.527 288.055 340.526 288.064 cv
340.526 288.081 340.525 288.097 340.525 288.114 cv
340.52 288.283 340.514 288.447 340.509 288.605 cv
340.508 288.62 340.508 288.634 340.507 288.649 cv
340.502 288.812 340.496 288.968 340.49 289.12 cv
340.489 289.147 340.488 289.175 340.487 289.202 cv
340.481 289.35 340.475 289.491 340.47 289.625 cv
340.469 289.644 340.468 289.661 340.467 289.68 cv
340.456 289.953 340.444 290.196 340.434 290.407 cv
340.433 290.428 340.432 290.448 340.431 290.468 cv
340.426 290.566 340.421 290.656 340.417 290.738 cv
340.416 290.753 340.415 290.766 340.414 290.78 cv
340.41 290.862 340.406 290.938 340.402 291.002 cv
340.402 291.006 340.401 291.009 340.401 291.013 cv
340.397 291.079 340.394 291.136 340.391 291.181 cv
340.391 291.183 340.391 291.185 340.391 291.187 cv
340.391 291.188 340.391 291.188 340.391 291.19 cv
340.389 291.217 340.387 291.24 340.386 291.26 cv
340.386 291.261 li
340.386 291.261 li
340.383 291.302 340.382 291.326 340.381 291.329 cv
340.381 291.329 li
340.381 291.329 li
340.381 291.329 li
340.381 291.329 li
340.381 291.329 li
336.741 289.214 li
336.742 289.213 336.742 289.208 336.742 289.204 cv
336.742 289.201 336.743 289.2 336.743 289.195 cv
336.744 289.187 336.744 289.175 336.745 289.162 cv
cp
.34902 .352941 .364706 rgb
f
337.305 268.259 mo
337.116 268.195 336.921 268.143 336.72 268.101 cv
336.659 268.088 336.597 268.079 336.535 268.068 cv
336.423 268.049 336.309 268.032 336.192 268.019 cv
336.115 268.011 336.038 268.004 335.959 267.999 cv
335.868 267.993 335.776 267.989 335.683 267.987 cv
335.595 267.985 335.506 267.985 335.416 267.986 cv
335.335 267.988 335.253 267.99 335.17 267.995 cv
335.072 268 334.973 268.008 334.874 268.017 cv
334.796 268.024 334.717 268.032 334.638 268.041 cv
334.532 268.054 334.424 268.071 334.315 268.088 cv
334.24 268.1 334.165 268.111 334.088 268.126 cv
333.97 268.148 333.85 268.174 333.729 268.201 cv
333.659 268.217 333.589 268.231 333.518 268.248 cv
333.377 268.283 333.234 268.323 333.09 268.364 cv
333.034 268.38 332.981 268.393 332.925 268.41 cv
332.722 268.471 332.516 268.538 332.307 268.612 cv
332.257 268.629 332.206 268.65 332.156 268.669 cv
331.992 268.729 331.827 268.79 331.658 268.857 cv
331.549 268.901 331.438 268.951 331.328 268.998 cv
331.21 269.048 331.094 269.095 330.974 269.149 cv
330.797 269.229 330.616 269.316 330.434 269.404 cv
330.372 269.434 330.312 269.46 330.25 269.491 cv
329.996 269.617 329.737 269.751 329.475 269.893 cv
329.238 270.02 328.999 270.154 328.756 270.294 cv
325.116 268.179 li
325.349 268.044 325.579 267.916 325.805 267.793 cv
325.815 267.787 325.825 267.783 325.835 267.778 cv
326.097 267.636 326.355 267.502 326.609 267.376 cv
326.612 267.375 326.616 267.373 326.618 267.371 cv
326.681 267.341 326.741 267.314 326.803 267.285 cv
326.981 267.198 327.16 267.112 327.335 267.034 cv
327.343 267.03 327.351 267.026 327.359 267.022 cv
327.472 266.972 327.581 266.928 327.691 266.881 cv
327.8 266.835 327.91 266.785 328.018 266.742 cv
328.025 266.739 328.033 266.736 328.04 266.733 cv
328.202 266.668 328.361 266.61 328.519 266.552 cv
328.568 266.535 328.618 266.514 328.667 266.497 cv
328.669 266.496 328.671 266.495 328.673 266.494 cv
328.874 266.423 329.072 266.359 329.266 266.3 cv
329.273 266.298 329.279 266.296 329.285 266.294 cv
329.34 266.278 329.393 266.265 329.447 266.25 cv
329.575 266.213 329.704 266.175 329.829 266.144 cv
329.846 266.14 329.861 266.137 329.878 266.133 cv
329.949 266.116 330.019 266.102 330.089 266.086 cv
330.182 266.065 330.277 266.042 330.368 266.024 cv
330.395 266.018 330.421 266.016 330.448 266.011 cv
330.525 265.996 330.6 265.985 330.675 265.973 cv
330.747 265.961 330.821 265.947 330.892 265.937 cv
330.928 265.932 330.963 265.93 330.999 265.926 cv
331.078 265.916 331.155 265.909 331.233 265.902 cv
331.291 265.896 331.35 265.888 331.407 265.884 cv
331.449 265.881 331.489 265.882 331.53 265.879 cv
331.613 265.875 331.695 265.872 331.776 265.871 cv
331.825 265.87 331.875 265.866 331.923 265.866 cv
331.964 265.866 332.003 265.871 332.043 265.871 cv
332.137 265.874 332.229 265.878 332.32 265.884 cv
332.365 265.887 332.412 265.886 332.457 265.89 cv
332.49 265.893 332.52 265.9 332.552 265.904 cv
332.669 265.916 332.782 265.933 332.895 265.953 cv
332.94 265.96 332.987 265.963 333.031 265.972 cv
333.048 265.975 333.064 265.982 333.081 265.985 cv
333.281 266.027 333.476 266.079 333.665 266.144 cv
333.674 266.147 333.685 266.149 333.694 266.152 cv
333.778 266.181 333.857 266.217 333.938 266.25 cv
333.983 266.269 334.03 266.285 334.074 266.305 cv
334.21 266.367 334.342 266.434 334.471 266.509 cv
338.111 268.624 li
337.982 268.55 337.85 268.482 337.714 268.421 cv
337.669 268.4 337.622 268.384 337.576 268.365 cv
337.487 268.328 337.397 268.291 337.305 268.259 cv
cp
.341176 .345098 .352941 rgb
f
313.142 297.343 mo
313.132 297.051 313.123 296.751 313.115 296.443 cv
313.115 296.43 313.114 296.416 313.114 296.403 cv
313.106 296.085 313.1 295.759 313.094 295.427 cv
313.094 295.406 313.094 295.384 313.094 295.362 cv
313.089 295.046 313.085 294.725 313.084 294.398 cv
313.083 294.382 313.083 294.367 313.083 294.351 cv
313.083 294.339 313.083 294.327 313.083 294.316 cv
313.081 293.831 313.082 293.335 313.088 292.832 cv
313.088 292.809 313.088 292.787 313.088 292.765 cv
313.094 292.254 313.104 291.736 313.12 291.213 cv
313.12 291.205 313.12 291.197 313.12 291.189 cv
313.12 291.183 313.121 291.177 313.121 291.171 cv
313.132 290.786 313.147 290.398 313.164 290.009 cv
313.166 289.978 313.167 289.947 313.169 289.916 cv
313.186 289.544 313.206 289.171 313.229 288.799 cv
313.23 288.78 313.231 288.761 313.232 288.743 cv
313.233 288.734 313.233 288.726 313.234 288.718 cv
313.274 288.092 313.322 287.467 313.381 286.847 cv
313.382 286.835 313.383 286.823 313.384 286.811 cv
313.385 286.798 313.387 286.784 313.388 286.771 cv
313.434 286.29 313.487 285.814 313.546 285.343 cv
313.547 285.329 313.549 285.314 313.55 285.3 cv
313.552 285.285 313.555 285.27 313.557 285.255 cv
313.607 284.863 313.661 284.474 313.721 284.092 cv
313.721 284.091 313.721 284.09 313.721 284.088 cv
313.722 284.085 313.722 284.082 313.723 284.079 cv
313.775 283.747 313.831 283.42 313.89 283.099 cv
313.892 283.09 313.893 283.082 313.895 283.073 cv
313.898 283.056 313.902 283.039 313.905 283.022 cv
313.957 282.749 314.01 282.479 314.068 282.215 cv
314.069 282.21 314.07 282.206 314.071 282.201 cv
314.074 282.185 314.078 282.169 314.082 282.153 cv
314.123 281.966 314.165 281.782 314.21 281.6 cv
314.216 281.573 314.222 281.545 314.228 281.518 cv
314.233 281.499 314.238 281.481 314.243 281.462 cv
314.29 281.274 314.338 281.089 314.388 280.907 cv
314.39 280.901 314.391 280.894 314.393 280.888 cv
314.402 280.856 314.411 280.825 314.42 280.792 cv
314.453 280.677 314.486 280.561 314.52 280.448 cv
314.526 280.43 314.531 280.411 314.536 280.393 cv
314.549 280.35 314.563 280.309 314.576 280.267 cv
314.6 280.19 314.624 280.114 314.648 280.039 cv
314.656 280.016 314.663 279.992 314.671 279.969 cv
314.684 279.93 314.697 279.893 314.71 279.854 cv
314.735 279.781 314.76 279.708 314.786 279.636 cv
314.795 279.611 314.803 279.584 314.812 279.559 cv
314.829 279.513 314.846 279.469 314.863 279.424 cv
314.879 279.381 314.895 279.337 314.911 279.295 cv
314.918 279.276 314.925 279.257 314.932 279.239 cv
314.967 279.148 315.003 279.059 315.039 278.971 cv
315.039 278.97 li
315.041 278.967 315.042 278.963 315.044 278.96 cv
315.078 278.876 315.114 278.793 315.149 278.711 cv
315.158 278.69 315.168 278.671 315.176 278.651 cv
315.189 278.622 315.203 278.593 315.216 278.564 cv
315.232 278.529 315.248 278.493 315.264 278.458 cv
315.293 278.395 315.322 278.334 315.352 278.273 cv
315.373 278.231 315.394 278.189 315.414 278.147 cv
315.499 277.978 315.585 277.81 315.674 277.643 cv
315.686 277.621 315.698 277.6 315.71 277.578 cv
315.794 277.422 315.882 277.268 315.969 277.114 cv
316.02 277.026 316.067 276.936 316.118 276.848 cv
316.125 276.837 316.132 276.827 316.139 276.816 cv
316.343 276.469 316.559 276.129 316.783 275.793 cv
316.807 275.757 316.828 275.718 316.853 275.682 cv
316.891 275.626 316.932 275.571 316.971 275.515 cv
317.067 275.375 317.166 275.237 317.265 275.099 cv
317.309 275.038 317.35 274.976 317.395 274.916 cv
317.44 274.854 317.488 274.794 317.535 274.732 cv
317.586 274.665 317.637 274.597 317.69 274.529 cv
317.726 274.482 317.762 274.433 317.799 274.386 cv
317.902 274.255 318.008 274.126 318.114 273.997 cv
318.132 273.975 318.149 273.953 318.167 273.931 cv
318.172 273.925 318.177 273.919 318.182 273.913 cv
318.31 273.759 318.44 273.607 318.573 273.456 cv
318.604 273.42 318.637 273.385 318.669 273.35 cv
318.716 273.297 318.764 273.244 318.812 273.191 cv
318.871 273.126 318.929 273.06 318.989 272.995 cv
319.065 272.913 319.144 272.833 319.221 272.752 cv
319.272 272.699 319.322 272.645 319.373 272.592 cv
319.398 272.567 319.421 272.542 319.445 272.517 cv
319.608 272.351 319.775 272.187 319.944 272.024 cv
319.946 272.023 319.947 272.021 319.949 272.019 cv
319.949 272.019 li
320.132 271.844 320.317 271.672 320.506 271.501 cv
320.523 271.486 320.541 271.471 320.558 271.456 cv
320.635 271.387 320.714 271.32 320.792 271.252 cv
320.899 271.159 321.004 271.065 321.112 270.973 cv
321.142 270.947 321.174 270.923 321.204 270.898 cv
321.301 270.817 321.399 270.738 321.498 270.659 cv
321.587 270.586 321.675 270.511 321.767 270.439 cv
321.806 270.408 321.847 270.379 321.886 270.348 cv
321.996 270.263 322.107 270.179 322.219 270.095 cv
322.302 270.032 322.383 269.968 322.467 269.906 cv
322.511 269.873 322.558 269.842 322.603 269.809 cv
322.725 269.72 322.85 269.633 322.975 269.545 cv
323.056 269.488 323.135 269.429 323.217 269.373 cv
323.263 269.342 323.311 269.312 323.357 269.281 cv
323.496 269.187 323.637 269.095 323.778 269.003 cv
323.862 268.948 323.943 268.892 324.027 268.838 cv
324.069 268.812 324.113 268.787 324.155 268.76 cv
324.315 268.66 324.478 268.561 324.641 268.463 cv
324.73 268.41 324.815 268.354 324.905 268.302 cv
324.975 268.261 325.045 268.22 325.116 268.179 cv
328.756 270.294 li
328.595 270.387 328.44 270.483 328.282 270.577 cv
328.119 270.676 327.955 270.775 327.795 270.875 cv
327.668 270.955 327.543 271.037 327.418 271.118 cv
327.276 271.21 327.135 271.302 326.997 271.396 cv
326.868 271.483 326.741 271.572 326.614 271.661 cv
326.49 271.748 326.365 271.836 326.243 271.924 cv
326.113 272.018 325.986 272.114 325.859 272.209 cv
325.747 272.294 325.635 272.378 325.526 272.464 cv
325.394 272.566 325.266 272.67 325.137 272.774 cv
325.039 272.853 324.941 272.932 324.844 273.013 cv
324.704 273.13 324.567 273.25 324.43 273.369 cv
324.353 273.436 324.274 273.503 324.198 273.571 cv
323.992 273.756 323.788 273.944 323.589 274.134 cv
323.587 274.136 323.585 274.138 323.584 274.14 cv
323.389 274.326 323.2 274.516 323.014 274.707 cv
322.962 274.76 322.911 274.814 322.86 274.868 cv
322.722 275.013 322.586 275.159 322.452 275.306 cv
322.404 275.359 322.356 275.412 322.308 275.465 cv
322.138 275.657 321.97 275.85 321.807 276.047 cv
321.789 276.068 321.772 276.09 321.755 276.111 cv
321.61 276.287 321.469 276.465 321.33 276.644 cv
321.277 276.712 321.226 276.78 321.174 276.848 cv
321.083 276.969 320.994 277.091 320.906 277.213 cv
320.805 277.352 320.707 277.491 320.61 277.632 cv
320.547 277.723 320.485 277.815 320.423 277.908 cv
320.199 278.243 319.983 278.584 319.778 278.931 cv
319.721 279.029 319.666 279.129 319.61 279.228 cv
319.522 279.382 319.434 279.537 319.35 279.694 cv
319.227 279.923 319.107 280.154 318.992 280.388 cv
318.946 280.482 318.901 280.579 318.857 280.677 cv
318.843 280.707 318.829 280.737 318.816 280.768 cv
318.771 280.869 318.727 280.971 318.683 281.075 cv
318.682 281.078 318.681 281.082 318.679 281.085 cv
318.635 281.191 318.593 281.299 318.551 281.409 cv
318.535 281.452 318.518 281.497 318.502 281.541 cv
318.476 281.61 318.451 281.68 318.426 281.751 cv
318.4 281.824 318.375 281.897 318.349 281.972 cv
318.329 282.032 318.309 282.092 318.289 282.153 cv
318.264 282.229 318.24 282.306 318.216 282.383 cv
318.197 282.443 318.178 282.503 318.16 282.563 cv
318.126 282.677 318.093 282.793 318.06 282.909 cv
318.049 282.947 318.038 282.984 318.028 283.022 cv
317.978 283.204 317.93 283.389 317.883 283.577 cv
317.872 283.623 317.861 283.669 317.849 283.715 cv
317.805 283.898 317.762 284.083 317.721 284.271 cv
317.717 284.29 317.712 284.31 317.708 284.329 cv
317.65 284.594 317.596 284.864 317.545 285.138 cv
317.54 285.163 317.535 285.188 317.53 285.214 cv
317.471 285.535 317.415 285.862 317.363 286.194 cv
317.362 286.198 317.361 286.203 317.36 286.207 cv
317.301 286.59 317.246 286.978 317.197 287.37 cv
317.193 287.4 317.189 287.429 317.185 287.459 cv
317.126 287.929 317.074 288.406 317.028 288.887 cv
317.025 288.912 317.023 288.937 317.021 288.961 cv
316.962 289.581 316.913 290.208 316.874 290.835 cv
316.872 290.86 316.871 290.886 316.869 290.911 cv
316.846 291.286 316.826 291.66 316.808 292.034 cv
316.807 292.063 316.806 292.092 316.804 292.121 cv
316.787 292.512 316.772 292.902 316.761 293.289 cv
316.76 293.301 316.76 293.313 316.76 293.325 cv
316.744 293.849 316.734 294.368 316.728 294.88 cv
316.728 294.902 316.728 294.925 316.727 294.947 cv
316.722 295.45 316.721 295.946 316.723 296.431 cv
316.723 296.459 316.723 296.486 316.723 296.514 cv
316.725 296.84 316.729 297.161 316.733 297.477 cv
316.734 297.499 316.734 297.521 316.734 297.543 cv
316.739 297.874 316.746 298.2 316.754 298.518 cv
316.754 298.532 316.755 298.545 316.755 298.558 cv
316.763 298.866 316.772 299.166 316.781 299.459 cv
316.782 299.487 316.783 299.516 316.784 299.544 cv
316.794 299.824 316.804 300.096 316.815 300.36 cv
316.817 300.392 316.818 300.424 316.819 300.456 cv
316.827 300.627 316.834 300.796 316.842 300.96 cv
316.843 300.988 316.845 301.014 316.846 301.042 cv
316.853 301.186 316.86 301.326 316.867 301.464 cv
316.869 301.499 316.871 301.535 316.873 301.57 cv
316.881 301.725 316.889 301.876 316.897 302.022 cv
316.899 302.046 316.9 302.069 316.901 302.092 cv
316.909 302.224 316.917 302.351 316.924 302.475 cv
316.926 302.5 316.927 302.526 316.929 302.551 cv
316.938 302.687 316.946 302.819 316.954 302.945 cv
316.956 302.967 316.957 302.989 316.959 303.011 cv
316.966 303.121 316.974 303.227 316.981 303.328 cv
316.982 303.349 316.984 303.37 316.985 303.391 cv
316.993 303.502 317.001 303.609 317.009 303.71 cv
317.011 303.732 317.012 303.752 317.014 303.774 cv
317.02 303.858 317.027 303.938 317.033 304.014 cv
317.034 304.033 317.036 304.053 317.038 304.071 cv
317.044 304.151 317.05 304.226 317.056 304.295 cv
317.057 304.308 317.059 304.32 317.06 304.333 cv
317.065 304.389 317.069 304.441 317.074 304.49 cv
317.075 304.507 317.077 304.524 317.078 304.539 cv
317.083 304.592 317.088 304.642 317.092 304.685 cv
317.092 304.687 317.092 304.689 317.093 304.691 cv
317.097 304.738 317.101 304.777 317.105 304.81 cv
317.106 304.818 317.106 304.825 317.107 304.832 cv
317.109 304.851 317.111 304.867 317.113 304.881 cv
317.114 304.888 317.115 304.895 317.115 304.9 cv
317.117 304.911 317.118 304.919 317.119 304.926 cv
317.12 304.93 317.121 304.936 317.121 304.939 cv
313.481 302.823 li
313.481 302.822 313.481 302.821 313.481 302.819 cv
313.48 302.818 313.48 302.813 313.479 302.81 cv
313.478 302.804 313.477 302.796 313.476 302.785 cv
313.475 302.782 313.475 302.782 313.475 302.779 cv
313.474 302.775 313.474 302.769 313.473 302.765 cv
313.472 302.752 313.47 302.737 313.468 302.72 cv
313.467 302.714 313.467 302.71 313.466 302.704 cv
313.466 302.701 313.465 302.695 313.465 302.692 cv
313.461 302.66 313.457 302.623 313.453 302.58 cv
313.452 302.571 313.451 302.561 313.451 302.553 cv
313.447 302.514 313.443 302.471 313.438 302.425 cv
313.437 302.409 313.435 302.392 313.434 302.375 cv
313.429 302.326 313.425 302.274 313.42 302.218 cv
313.419 302.205 313.418 302.193 313.417 302.18 cv
313.411 302.111 313.404 302.036 313.398 301.957 cv
313.397 301.95 313.397 301.944 313.396 301.937 cv
313.395 301.924 313.394 301.91 313.393 301.898 cv
313.387 301.822 313.381 301.743 313.374 301.659 cv
313.373 301.638 313.371 301.617 313.369 301.594 cv
313.362 301.494 313.354 301.387 313.346 301.276 cv
313.344 301.255 313.343 301.233 313.341 301.212 cv
313.334 301.111 313.327 301.006 313.319 300.897 cv
313.318 300.874 313.316 300.852 313.315 300.829 cv
313.306 300.705 313.298 300.577 313.29 300.444 cv
313.288 300.412 313.286 300.379 313.284 300.347 cv
313.276 300.228 313.269 300.106 313.262 299.98 cv
313.26 299.955 313.259 299.931 313.258 299.906 cv
313.249 299.761 313.241 299.61 313.233 299.456 cv
313.231 299.42 313.229 299.384 313.227 299.348 cv
313.22 299.211 313.213 299.071 313.206 298.927 cv
313.205 298.899 313.203 298.872 313.202 298.844 cv
313.194 298.681 313.187 298.512 313.18 298.341 cv
313.179 298.323 313.178 298.306 313.177 298.288 cv
313.177 298.274 313.176 298.259 313.176 298.245 cv
313.165 297.981 313.154 297.709 313.145 297.429 cv
313.144 297.4 313.143 297.372 313.142 297.343 cv
cp
.94902 .94902 .94902 rgb
f
328.756 270.294 mo
324.301 272.866 321.016 276.261 318.992 280.388 cv
315.506 287.501 317.054 304.66 317.121 304.939 cv
317.833 304.332 li
317.818 304.267 316.303 287.235 319.572 280.573 cv
321.449 276.746 324.539 273.571 328.758 271.135 cv
332.998 268.687 336.155 268.271 338.139 269.899 cv
341.562 272.703 340.394 291.248 340.381 291.329 cv
341.101 291.079 li
341.154 290.733 342.349 272.03 338.708 269.039 cv
336.576 267.289 333.228 267.712 328.756 270.294 cv
cp
1 1 1 rgb
f
358.943 300.807 mo
358.943 300.798 358.944 300.789 358.945 300.775 cv
358.945 300.771 358.945 300.766 358.946 300.761 cv
358.947 300.745 358.948 300.728 358.949 300.707 cv
358.949 300.703 358.95 300.697 358.95 300.692 cv
358.953 300.646 358.956 300.592 358.96 300.527 cv
358.96 300.524 358.96 300.521 358.96 300.518 cv
358.964 300.454 358.968 300.378 358.973 300.295 cv
358.974 300.282 358.974 300.269 358.975 300.255 cv
358.98 300.17 358.984 300.077 358.99 299.975 cv
358.99 299.962 358.991 299.948 358.992 299.935 cv
358.997 299.828 359.002 299.714 359.008 299.591 cv
359.008 299.589 359.008 299.588 359.008 299.587 cv
359.014 299.467 359.02 299.338 359.025 299.204 cv
359.027 299.18 359.028 299.157 359.029 299.133 cv
359.034 299.003 359.04 298.865 359.045 298.723 cv
359.047 298.691 359.048 298.659 359.049 298.628 cv
359.055 298.479 359.06 298.326 359.066 298.166 cv
359.066 298.148 359.067 298.129 359.068 298.11 cv
359.073 297.956 359.078 297.797 359.083 297.634 cv
359.084 297.605 359.085 297.577 359.086 297.548 cv
359.09 297.411 359.094 297.272 359.098 297.129 cv
359.098 297.102 359.099 297.074 359.1 297.047 cv
359.103 296.929 359.106 296.81 359.109 296.688 cv
359.11 296.641 359.111 296.594 359.112 296.546 cv
359.114 296.435 359.117 296.322 359.119 296.207 cv
359.12 296.164 359.12 296.12 359.121 296.076 cv
359.127 295.761 359.132 295.436 359.135 295.102 cv
359.136 295.053 359.136 295.003 359.137 294.953 cv
359.138 294.835 359.139 294.715 359.14 294.595 cv
359.14 294.538 359.14 294.482 359.141 294.425 cv
359.141 294.278 359.142 294.13 359.142 293.98 cv
359.142 293.956 359.142 293.932 359.142 293.907 cv
359.142 293.735 359.142 293.561 359.141 293.385 cv
359.141 293.36 359.141 293.335 359.141 293.309 cv
359.138 292.767 359.131 292.213 359.119 291.653 cv
359.119 291.647 359.119 291.642 359.119 291.636 cv
359.107 291.076 359.089 290.51 359.066 289.944 cv
359.065 289.921 359.064 289.899 359.063 289.876 cv
359.046 289.472 359.026 289.067 359.002 288.665 cv
359.001 288.639 358.999 288.613 358.997 288.587 cv
358.973 288.179 358.945 287.774 358.912 287.373 cv
358.911 287.361 358.91 287.348 358.909 287.336 cv
358.884 287.025 358.856 286.717 358.825 286.414 cv
358.823 286.386 358.82 286.359 358.817 286.331 cv
358.787 286.041 358.755 285.754 358.72 285.473 cv
358.716 285.436 358.711 285.4 358.707 285.364 cv
358.678 285.141 358.649 284.921 358.617 284.705 cv
358.613 284.678 358.609 284.652 358.605 284.626 cv
358.573 284.41 358.539 284.197 358.504 283.989 cv
358.501 283.976 358.499 283.962 358.497 283.948 cv
358.467 283.776 358.436 283.608 358.403 283.443 cv
358.395 283.399 358.386 283.357 358.378 283.314 cv
358.349 283.174 358.32 283.036 358.29 282.901 cv
358.283 282.872 358.277 282.842 358.271 282.814 cv
358.239 282.674 358.206 282.537 358.171 282.402 cv
358.163 282.371 358.155 282.341 358.147 282.309 cv
358.12 282.206 358.092 282.105 358.064 282.005 cv
358.055 281.975 358.046 281.945 358.037 281.915 cv
357.969 281.683 357.897 281.462 357.821 281.253 cv
357.812 281.23 357.804 281.206 357.795 281.183 cv
357.77 281.117 357.745 281.053 357.719 280.989 cv
357.705 280.953 357.69 280.915 357.675 280.88 cv
357.644 280.807 357.613 280.737 357.581 280.667 cv
357.57 280.644 357.56 280.62 357.549 280.597 cv
357.505 280.505 357.46 280.417 357.414 280.332 cv
357.402 280.31 357.389 280.29 357.377 280.268 cv
357.342 280.207 357.307 280.147 357.272 280.09 cv
357.261 280.073 357.25 280.058 357.24 280.042 cv
357.161 279.921 357.08 279.809 356.995 279.709 cv
356.989 279.702 356.983 279.695 356.977 279.688 cv
356.888 279.585 356.796 279.492 356.699 279.413 cv
356.527 279.272 356.346 279.147 356.157 279.037 cv
359.796 281.152 li
359.986 281.262 360.167 281.388 360.339 281.528 cv
360.435 281.607 360.527 281.7 360.616 281.803 cv
360.623 281.811 360.629 281.817 360.635 281.824 cv
360.72 281.924 360.801 282.037 360.88 282.157 cv
360.885 282.166 360.892 282.173 360.898 282.182 cv
360.902 282.189 360.907 282.198 360.911 282.205 cv
360.947 282.262 360.982 282.322 361.016 282.383 cv
361.029 282.405 361.042 282.425 361.054 282.448 cv
361.1 282.532 361.145 282.62 361.189 282.712 cv
361.19 282.714 361.191 282.716 361.192 282.719 cv
361.202 282.739 361.211 282.762 361.22 282.783 cv
361.253 282.852 361.284 282.922 361.315 282.995 cv
361.33 283.031 361.345 283.068 361.359 283.105 cv
361.385 283.168 361.41 283.232 361.435 283.297 cv
361.439 283.31 361.445 283.322 361.449 283.335 cv
361.453 283.345 361.457 283.358 361.461 283.369 cv
361.537 283.578 361.609 283.799 361.677 284.03 cv
361.681 284.043 361.685 284.053 361.688 284.065 cv
361.694 284.083 361.698 284.103 361.704 284.121 cv
361.732 284.22 361.759 284.322 361.786 284.424 cv
361.795 284.456 361.803 284.486 361.811 284.518 cv
361.845 284.652 361.879 284.789 361.911 284.929 cv
361.912 284.937 361.914 284.944 361.916 284.952 cv
361.921 284.973 361.925 284.995 361.93 285.016 cv
361.96 285.151 361.989 285.289 362.017 285.429 cv
362.026 285.472 362.035 285.515 362.043 285.558 cv
362.075 285.724 362.107 285.892 362.137 286.063 cv
362.137 286.067 362.138 286.07 362.139 286.074 cv
362.14 286.084 362.142 286.094 362.143 286.104 cv
362.179 286.313 362.213 286.525 362.245 286.741 cv
362.249 286.768 362.253 286.793 362.257 286.82 cv
362.289 287.036 362.318 287.256 362.346 287.479 cv
362.349 287.5 362.352 287.52 362.355 287.541 cv
362.357 287.557 362.358 287.573 362.36 287.588 cv
362.395 287.87 362.427 288.156 362.457 288.446 cv
362.459 288.474 362.462 288.501 362.465 288.529 cv
362.496 288.832 362.523 289.138 362.549 289.447 cv
362.549 289.457 362.551 289.467 362.551 289.477 cv
362.552 289.481 362.552 289.486 362.552 289.49 cv
362.585 289.89 362.613 290.295 362.637 290.702 cv
362.639 290.728 362.64 290.754 362.642 290.781 cv
362.666 291.183 362.686 291.587 362.703 291.991 cv
362.704 292.003 362.704 292.014 362.705 292.025 cv
362.705 292.037 362.705 292.048 362.706 292.059 cv
362.729 292.625 362.747 293.191 362.759 293.751 cv
362.759 293.757 362.759 293.762 362.759 293.768 cv
362.771 294.329 362.778 294.883 362.78 295.425 cv
362.781 295.433 362.781 295.442 362.781 295.45 cv
362.781 295.467 362.781 295.484 362.781 295.501 cv
362.782 295.676 362.782 295.85 362.782 296.022 cv
362.782 296.047 362.782 296.071 362.782 296.095 cv
362.782 296.245 362.781 296.393 362.78 296.54 cv
362.78 296.597 362.78 296.654 362.779 296.71 cv
362.779 296.83 362.778 296.95 362.777 297.068 cv
362.776 297.118 362.776 297.168 362.775 297.218 cv
362.772 297.551 362.767 297.876 362.761 298.191 cv
362.76 298.236 362.759 298.279 362.759 298.323 cv
362.756 298.437 362.754 298.55 362.752 298.661 cv
362.75 298.709 362.749 298.756 362.748 298.803 cv
362.746 298.925 362.743 299.044 362.74 299.162 cv
362.739 299.189 362.738 299.218 362.737 299.245 cv
362.734 299.387 362.73 299.527 362.726 299.663 cv
362.725 299.673 362.725 299.683 362.725 299.693 cv
362.724 299.712 362.724 299.73 362.723 299.749 cv
362.718 299.913 362.713 300.072 362.708 300.225 cv
362.707 300.244 362.706 300.263 362.706 300.281 cv
362.7 300.442 362.694 300.595 362.689 300.743 cv
362.688 300.775 362.686 300.806 362.685 300.837 cv
362.68 300.98 362.674 301.117 362.668 301.248 cv
362.667 301.273 362.666 301.296 362.665 301.319 cv
362.659 301.453 362.654 301.583 362.648 301.702 cv
362.648 301.704 362.648 301.705 362.648 301.706 cv
362.642 301.83 362.637 301.943 362.631 302.05 cv
362.631 302.064 362.63 302.077 362.629 302.09 cv
362.624 302.192 362.619 302.285 362.615 302.37 cv
362.614 302.384 362.613 302.397 362.613 302.411 cv
362.608 302.493 362.604 302.569 362.6 302.634 cv
362.6 302.636 362.6 302.638 362.6 302.641 cv
362.596 302.706 362.593 302.761 362.59 302.807 cv
362.59 302.81 362.589 302.814 362.589 302.817 cv
362.589 302.819 362.589 302.821 362.589 302.824 cv
362.588 302.834 362.588 302.841 362.587 302.85 cv
362.586 302.863 362.585 302.878 362.585 302.889 cv
362.584 302.892 362.584 302.893 362.584 302.896 cv
362.584 302.903 362.583 302.908 362.583 302.914 cv
362.582 302.921 362.582 302.931 362.581 302.936 cv
362.581 302.937 362.581 302.937 362.581 302.938 cv
362.581 302.944 362.581 302.946 362.58 302.949 cv
362.58 302.952 362.58 302.957 362.58 302.958 cv
362.58 302.959 li
358.94 300.844 li
358.94 300.844 358.94 300.838 358.941 300.834 cv
358.941 300.831 358.941 300.828 358.941 300.823 cv
358.942 300.819 358.942 300.812 358.943 300.807 cv
cp
.827451 .811765 .811765 rgb
f
359.503 279.889 mo
359.315 279.825 359.119 279.773 358.918 279.731 cv
358.858 279.718 358.795 279.709 358.734 279.698 cv
358.621 279.679 358.507 279.662 358.39 279.649 cv
358.314 279.641 358.236 279.635 358.158 279.629 cv
358.067 279.623 357.975 279.619 357.881 279.617 cv
357.793 279.615 357.705 279.615 357.615 279.616 cv
357.533 279.618 357.451 279.62 357.368 279.625 cv
357.27 279.63 357.172 279.638 357.072 279.647 cv
356.994 279.654 356.916 279.662 356.836 279.671 cv
356.73 279.684 356.622 279.701 356.513 279.718 cv
356.438 279.73 356.363 279.742 356.287 279.756 cv
356.168 279.778 356.047 279.805 355.926 279.832 cv
355.856 279.847 355.787 279.861 355.717 279.878 cv
355.574 279.913 355.429 279.954 355.283 279.996 cv
355.23 280.011 355.178 280.024 355.124 280.04 cv
354.921 280.101 354.714 280.168 354.505 280.242 cv
354.457 280.259 354.408 280.279 354.36 280.297 cv
354.194 280.357 354.027 280.419 353.856 280.488 cv
353.749 280.531 353.638 280.58 353.529 280.626 cv
353.41 280.677 353.293 280.725 353.172 280.779 cv
352.996 280.858 352.816 280.945 352.635 281.032 cv
352.573 281.063 352.511 281.09 352.448 281.121 cv
352.194 281.247 351.935 281.381 351.673 281.523 cv
351.437 281.651 351.197 281.784 350.954 281.924 cv
347.314 279.809 li
347.547 279.674 347.777 279.546 348.004 279.423 cv
348.014 279.418 348.024 279.413 348.034 279.407 cv
348.296 279.266 348.554 279.132 348.807 279.006 cv
348.81 279.005 348.814 279.003 348.817 279.002 cv
348.881 278.97 348.943 278.943 349.006 278.912 cv
349.183 278.827 349.36 278.742 349.533 278.664 cv
349.541 278.66 349.549 278.656 349.557 278.652 cv
349.671 278.601 349.781 278.557 349.893 278.51 cv
350 278.464 350.11 278.415 350.216 278.373 cv
350.223 278.37 350.231 278.366 350.238 278.363 cv
350.403 278.297 350.563 278.238 350.723 278.18 cv
350.77 278.163 350.818 278.143 350.865 278.127 cv
350.867 278.126 350.869 278.125 350.871 278.125 cv
351.072 278.054 351.27 277.989 351.465 277.93 cv
351.471 277.928 351.477 277.927 351.484 277.925 cv
351.538 277.908 351.59 277.896 351.644 277.88 cv
351.772 277.844 351.902 277.806 352.027 277.774 cv
352.044 277.77 352.06 277.767 352.077 277.763 cv
352.148 277.746 352.217 277.732 352.287 277.716 cv
352.38 277.695 352.475 277.672 352.567 277.654 cv
352.594 277.649 352.62 277.646 352.646 277.641 cv
352.723 277.626 352.798 277.615 352.873 277.603 cv
352.945 277.592 353.019 277.577 353.09 277.567 cv
353.127 277.562 353.161 277.561 353.197 277.556 cv
353.276 277.546 353.354 277.539 353.431 277.532 cv
353.489 277.526 353.549 277.518 353.606 277.514 cv
353.647 277.511 353.687 277.512 353.729 277.51 cv
353.811 277.505 353.893 277.503 353.975 277.501 cv
354.023 277.5 354.074 277.496 354.122 277.496 cv
354.162 277.496 354.201 277.501 354.242 277.502 cv
354.335 277.504 354.427 277.508 354.518 277.514 cv
354.563 277.517 354.611 277.516 354.655 277.52 cv
354.688 277.523 354.718 277.531 354.75 277.534 cv
354.867 277.546 354.981 277.564 355.094 277.583 cv
355.138 277.591 355.186 277.594 355.23 277.602 cv
355.247 277.606 355.262 277.612 355.279 277.616 cv
355.479 277.658 355.675 277.71 355.863 277.774 cv
355.873 277.777 355.883 277.779 355.893 277.782 cv
355.975 277.811 356.055 277.847 356.135 277.88 cv
356.181 277.899 356.228 277.915 356.272 277.935 cv
356.408 277.997 356.541 278.065 356.669 278.139 cv
360.309 280.254 li
360.181 280.18 360.048 280.112 359.912 280.051 cv
359.867 280.03 359.82 280.014 359.774 279.995 cv
359.685 279.958 359.595 279.921 359.503 279.889 cv
cp
.341176 .345098 .352941 rgb
f
335.34 308.975 mo
335.33 308.682 335.321 308.381 335.314 308.073 cv
335.313 308.06 335.313 308.047 335.312 308.033 cv
335.305 307.715 335.298 307.39 335.293 307.058 cv
335.292 307.036 335.292 307.014 335.292 306.992 cv
335.287 306.677 335.284 306.355 335.282 306.029 cv
335.282 306.013 335.281 305.997 335.281 305.981 cv
335.281 305.97 335.282 305.958 335.282 305.946 cv
335.279 305.461 335.28 304.965 335.286 304.462 cv
335.286 304.44 335.286 304.418 335.287 304.395 cv
335.292 303.884 335.303 303.366 335.318 302.843 cv
335.318 302.835 335.318 302.827 335.318 302.819 cv
335.319 302.814 335.319 302.808 335.319 302.802 cv
335.331 302.416 335.345 302.028 335.363 301.638 cv
335.364 301.608 335.366 301.578 335.367 301.548 cv
335.384 301.175 335.404 300.801 335.427 300.427 cv
335.428 300.409 335.429 300.392 335.43 300.374 cv
335.431 300.366 335.432 300.358 335.432 300.35 cv
335.472 299.724 335.52 299.098 335.579 298.479 cv
335.58 298.467 335.581 298.455 335.582 298.442 cv
335.583 298.429 335.585 298.415 335.586 298.402 cv
335.633 297.921 335.685 297.445 335.744 296.975 cv
335.746 296.961 335.747 296.946 335.749 296.932 cv
335.751 296.917 335.753 296.902 335.755 296.887 cv
335.805 296.494 335.859 296.106 335.919 295.723 cv
335.919 295.722 335.919 295.721 335.919 295.72 cv
335.92 295.717 335.92 295.715 335.921 295.712 cv
335.973 295.38 336.029 295.052 336.089 294.73 cv
336.09 294.722 336.091 294.713 336.093 294.705 cv
336.096 294.688 336.1 294.672 336.103 294.655 cv
336.155 294.382 336.209 294.111 336.266 293.846 cv
336.267 293.842 336.268 293.838 336.269 293.833 cv
336.272 293.818 336.276 293.803 336.279 293.788 cv
336.32 293.6 336.363 293.415 336.408 293.232 cv
336.414 293.205 336.42 293.177 336.427 293.151 cv
336.431 293.132 336.437 293.113 336.441 293.094 cv
336.488 292.906 336.536 292.721 336.586 292.539 cv
336.588 292.533 336.589 292.527 336.591 292.521 cv
336.599 292.489 336.609 292.459 336.618 292.427 cv
336.651 292.311 336.684 292.195 336.718 292.081 cv
336.724 292.063 336.729 292.044 336.734 292.026 cv
336.747 291.983 336.761 291.941 336.775 291.898 cv
336.798 291.822 336.822 291.746 336.847 291.671 cv
336.854 291.649 336.861 291.625 336.868 291.603 cv
336.881 291.564 336.895 291.526 336.908 291.488 cv
336.933 291.414 336.958 291.341 336.984 291.269 cv
336.993 291.244 337.001 291.218 337.01 291.193 cv
337.026 291.147 337.044 291.103 337.061 291.057 cv
337.077 291.014 337.093 290.97 337.109 290.927 cv
337.116 290.909 337.123 290.89 337.13 290.872 cv
337.165 290.782 337.2 290.692 337.237 290.604 cv
337.237 290.604 337.237 290.603 337.237 290.602 cv
337.239 290.598 337.241 290.594 337.243 290.59 cv
337.277 290.507 337.312 290.424 337.347 290.344 cv
337.356 290.323 337.365 290.304 337.374 290.284 cv
337.388 290.254 337.401 290.224 337.415 290.195 cv
337.431 290.16 337.446 290.125 337.462 290.09 cv
337.491 290.028 337.521 289.966 337.55 289.905 cv
337.571 289.863 337.592 289.822 337.612 289.78 cv
337.697 289.61 337.784 289.442 337.872 289.275 cv
337.884 289.253 337.897 289.232 337.909 289.21 cv
337.992 289.054 338.081 288.9 338.168 288.746 cv
338.218 288.657 338.265 288.567 338.317 288.48 cv
338.323 288.469 338.331 288.458 338.337 288.447 cv
338.542 288.1 338.758 287.76 338.982 287.424 cv
339.006 287.388 339.027 287.35 339.052 287.314 cv
339.089 287.258 339.13 287.204 339.169 287.148 cv
339.265 287.007 339.364 286.868 339.465 286.729 cv
339.508 286.669 339.549 286.607 339.593 286.547 cv
339.639 286.486 339.686 286.426 339.733 286.365 cv
339.784 286.296 339.836 286.228 339.889 286.16 cv
339.925 286.113 339.961 286.064 339.998 286.017 cv
340.101 285.886 340.207 285.757 340.313 285.628 cv
340.331 285.606 340.348 285.584 340.366 285.563 cv
340.371 285.556 340.376 285.55 340.381 285.544 cv
340.509 285.389 340.64 285.237 340.773 285.085 cv
340.804 285.05 340.836 285.016 340.868 284.98 cv
340.915 284.927 340.963 284.875 341.011 284.822 cv
341.071 284.756 341.129 284.689 341.19 284.623 cv
341.265 284.542 341.343 284.463 341.419 284.383 cv
341.471 284.329 341.521 284.275 341.573 284.222 cv
341.598 284.197 341.621 284.171 341.646 284.145 cv
341.807 283.981 341.972 283.819 342.139 283.659 cv
342.142 283.656 342.145 283.653 342.148 283.65 cv
342.148 283.65 342.149 283.648 342.15 283.648 cv
342.332 283.473 342.517 283.301 342.706 283.13 cv
342.723 283.115 342.741 283.101 342.758 283.086 cv
342.834 283.018 342.912 282.951 342.989 282.884 cv
343.097 282.79 343.203 282.694 343.313 282.601 cv
343.343 282.576 343.374 282.552 343.404 282.527 cv
343.5 282.447 343.599 282.368 343.696 282.289 cv
343.787 282.216 343.875 282.141 343.967 282.068 cv
344.006 282.037 344.046 282.008 344.085 281.978 cv
344.195 281.893 344.307 281.808 344.418 281.724 cv
344.502 281.661 344.583 281.597 344.668 281.534 cv
344.712 281.502 344.758 281.471 344.802 281.439 cv
344.925 281.35 345.049 281.263 345.173 281.175 cv
345.255 281.118 345.335 281.059 345.417 281.002 cv
345.463 280.971 345.511 280.941 345.557 280.91 cv
345.694 280.817 345.835 280.725 345.975 280.634 cv
346.06 280.579 346.141 280.522 346.227 280.468 cv
346.269 280.441 346.313 280.416 346.355 280.39 cv
346.514 280.29 346.676 280.192 346.838 280.094 cv
346.927 280.04 347.013 279.985 347.103 279.932 cv
347.173 279.891 347.244 279.85 347.314 279.809 cv
350.954 281.924 li
350.793 282.017 350.638 282.113 350.48 282.208 cv
350.317 282.306 350.154 282.405 349.994 282.505 cv
349.867 282.585 349.742 282.667 349.617 282.748 cv
349.476 282.84 349.335 282.932 349.196 283.026 cv
349.067 283.113 348.94 283.202 348.813 283.291 cv
348.689 283.378 348.565 283.465 348.443 283.554 cv
348.313 283.648 348.185 283.744 348.058 283.84 cv
347.946 283.924 347.835 284.008 347.725 284.093 cv
347.594 284.196 347.465 284.3 347.337 284.404 cv
347.239 284.483 347.14 284.562 347.044 284.643 cv
346.903 284.76 346.766 284.879 346.63 284.998 cv
346.552 285.066 346.474 285.133 346.397 285.201 cv
346.191 285.386 345.987 285.574 345.788 285.764 cv
345.783 285.769 345.778 285.775 345.773 285.78 cv
345.582 285.963 345.396 286.149 345.213 286.337 cv
345.161 286.391 345.111 286.444 345.059 286.498 cv
344.921 286.643 344.785 286.789 344.651 286.937 cv
344.603 286.99 344.554 287.043 344.507 287.096 cv
344.336 287.288 344.169 287.481 344.005 287.678 cv
343.988 287.699 343.97 287.721 343.953 287.743 cv
343.808 287.919 343.667 288.097 343.528 288.276 cv
343.476 288.343 343.424 288.411 343.373 288.479 cv
343.282 288.6 343.193 288.722 343.104 288.845 cv
343.004 288.983 342.905 289.123 342.808 289.263 cv
342.745 289.355 342.683 289.447 342.621 289.54 cv
342.398 289.875 342.181 290.215 341.977 290.563 cv
341.919 290.661 341.865 290.761 341.809 290.86 cv
341.721 291.015 341.632 291.169 341.548 291.326 cv
341.425 291.555 341.305 291.786 341.19 292.02 cv
341.144 292.115 341.099 292.212 341.055 292.309 cv
341.041 292.339 341.027 292.369 341.014 292.399 cv
340.97 292.499 340.926 292.6 340.883 292.703 cv
340.881 292.708 340.879 292.713 340.877 292.718 cv
340.834 292.824 340.791 292.932 340.749 293.041 cv
340.733 293.085 340.717 293.129 340.7 293.173 cv
340.674 293.243 340.649 293.313 340.623 293.384 cv
340.598 293.456 340.573 293.529 340.548 293.603 cv
340.527 293.664 340.507 293.725 340.486 293.787 cv
340.462 293.861 340.438 293.937 340.414 294.014 cv
340.395 294.074 340.376 294.135 340.358 294.196 cv
340.324 294.311 340.29 294.427 340.257 294.544 cv
340.247 294.581 340.236 294.617 340.226 294.654 cv
340.176 294.836 340.128 295.022 340.081 295.21 cv
340.07 295.255 340.059 295.301 340.048 295.347 cv
340.003 295.53 339.96 295.715 339.919 295.903 cv
339.915 295.923 339.91 295.942 339.906 295.961 cv
339.848 296.227 339.794 296.497 339.743 296.771 cv
339.738 296.795 339.733 296.82 339.729 296.845 cv
339.669 297.168 339.613 297.495 339.561 297.827 cv
339.56 297.831 339.559 297.835 339.559 297.838 cv
339.499 298.221 339.445 298.61 339.395 299.002 cv
339.391 299.031 339.387 299.061 339.384 299.09 cv
339.325 299.561 339.272 300.038 339.226 300.519 cv
339.224 300.543 339.221 300.568 339.219 300.592 cv
339.16 301.213 339.112 301.838 339.072 302.465 cv
339.07 302.491 339.069 302.517 339.067 302.543 cv
339.044 302.916 339.024 303.29 339.007 303.663 cv
339.005 303.693 339.004 303.723 339.002 303.754 cv
338.985 304.143 338.97 304.531 338.959 304.917 cv
338.958 304.931 338.958 304.945 338.958 304.958 cv
338.942 305.481 338.932 306 338.926 306.511 cv
338.926 306.533 338.926 306.555 338.926 306.578 cv
338.92 307.081 338.919 307.576 338.921 308.062 cv
338.921 308.089 338.922 308.117 338.922 308.144 cv
338.924 308.47 338.927 308.792 338.932 309.108 cv
338.932 309.129 338.932 309.151 338.933 309.173 cv
338.938 309.505 338.944 309.83 338.952 310.148 cv
338.953 310.162 338.953 310.175 338.953 310.188 cv
338.961 310.496 338.97 310.796 338.98 311.089 cv
338.981 311.117 338.982 311.146 338.983 311.174 cv
338.992 311.454 339.003 311.727 339.014 311.991 cv
339.015 312.022 339.016 312.055 339.018 312.086 cv
339.025 312.258 339.032 312.426 339.04 312.59 cv
339.042 312.618 339.043 312.644 339.044 312.672 cv
339.051 312.816 339.058 312.956 339.065 313.093 cv
339.067 313.129 339.069 313.166 339.071 313.202 cv
339.079 313.355 339.087 313.506 339.096 313.651 cv
339.097 313.677 339.099 313.701 339.1 313.727 cv
339.107 313.852 339.115 313.973 339.122 314.091 cv
339.124 314.124 339.126 314.158 339.128 314.19 cv
339.136 314.322 339.144 314.45 339.153 314.573 cv
339.154 314.598 339.156 314.622 339.158 314.646 cv
339.165 314.753 339.172 314.855 339.179 314.954 cv
339.181 314.977 339.182 315.001 339.184 315.023 cv
339.192 315.133 339.2 315.238 339.207 315.337 cv
339.209 315.362 339.211 315.386 339.213 315.41 cv
339.219 315.49 339.225 315.566 339.231 315.639 cv
339.233 315.661 339.234 315.683 339.236 315.704 cv
339.242 315.782 339.249 315.856 339.254 315.924 cv
339.256 315.939 339.257 315.953 339.258 315.967 cv
339.263 316.021 339.267 316.072 339.272 316.119 cv
339.273 316.137 339.275 316.155 339.277 316.172 cv
339.281 316.217 339.285 316.259 339.288 316.296 cv
339.289 316.306 339.29 316.317 339.291 316.326 cv
339.296 316.369 339.299 316.405 339.303 316.437 cv
339.304 316.448 339.305 316.457 339.306 316.466 cv
339.308 316.483 339.31 316.498 339.311 316.511 cv
339.312 316.518 339.313 316.525 339.314 316.531 cv
339.315 316.542 339.316 316.549 339.317 316.556 cv
339.318 316.56 339.319 316.567 339.32 316.569 cv
335.68 314.454 li
335.68 314.452 335.679 314.451 335.679 314.449 cv
335.679 314.448 335.678 314.443 335.678 314.441 cv
335.677 314.434 335.675 314.426 335.674 314.414 cv
335.673 314.412 335.673 314.412 335.673 314.409 cv
335.673 314.406 335.672 314.401 335.672 314.398 cv
335.67 314.384 335.668 314.367 335.666 314.348 cv
335.665 314.343 335.665 314.34 335.664 314.334 cv
335.664 314.331 335.663 314.326 335.663 314.323 cv
335.66 314.289 335.656 314.252 335.651 314.207 cv
335.651 314.204 335.65 314.2 335.65 314.196 cv
335.646 314.154 335.641 314.107 335.637 314.056 cv
335.635 314.039 335.634 314.021 335.632 314.003 cv
335.628 313.956 335.623 313.906 335.619 313.853 cv
335.617 313.838 335.616 313.824 335.615 313.809 cv
335.609 313.739 335.602 313.664 335.596 313.583 cv
335.595 313.578 335.595 313.573 335.594 313.567 cv
335.594 313.556 335.593 313.543 335.592 313.532 cv
335.585 313.454 335.579 313.372 335.572 313.286 cv
335.571 313.267 335.569 313.248 335.568 313.228 cv
335.56 313.127 335.552 313.02 335.544 312.908 cv
335.542 312.885 335.541 312.862 335.539 312.839 cv
335.532 312.74 335.525 312.637 335.518 312.531 cv
335.516 312.506 335.514 312.483 335.513 312.457 cv
335.504 312.333 335.496 312.203 335.488 312.069 cv
335.486 312.04 335.484 312.011 335.482 311.982 cv
335.475 311.862 335.468 311.739 335.46 311.613 cv
335.459 311.587 335.457 311.562 335.456 311.535 cv
335.448 311.392 335.439 311.244 335.431 311.092 cv
335.429 311.053 335.427 311.014 335.425 310.974 cv
335.418 310.837 335.411 310.697 335.404 310.553 cv
335.403 310.527 335.402 310.502 335.4 310.475 cv
335.393 310.311 335.385 310.143 335.378 309.971 cv
335.377 309.953 335.376 309.936 335.376 309.918 cv
335.375 309.904 335.374 309.889 335.374 309.875 cv
335.363 309.61 335.352 309.337 335.343 309.056 cv
335.342 309.029 335.341 309.002 335.34 308.975 cv
cp
.94902 .94902 .94902 rgb
f
350.954 281.924 mo
346.499 284.496 343.215 287.893 341.19 292.02 cv
337.705 299.131 339.253 316.29 339.32 316.569 cv
340.031 315.964 li
340.016 315.899 338.501 298.867 341.77 292.205 cv
343.647 288.378 346.739 285.202 350.956 282.767 cv
355.197 280.319 358.353 279.903 360.339 281.528 cv
363.76 284.333 362.593 302.88 362.58 302.959 cv
363.299 302.709 li
363.352 302.363 364.548 283.66 360.906 280.67 cv
358.774 278.919 355.427 279.342 350.954 281.924 cv
cp
1 1 1 rgb
f
330.694 262.526 mo
330.716 262.514 330.737 262.502 330.759 262.49 cv
330.787 262.475 330.815 262.46 330.843 262.446 cv
330.861 262.437 330.879 262.43 330.896 262.421 cv
330.901 262.419 330.905 262.417 330.91 262.415 cv
330.915 262.412 330.921 262.409 330.927 262.407 cv
330.954 262.395 330.982 262.383 331.009 262.372 cv
331.037 262.361 331.064 262.351 331.092 262.341 cv
331.096 262.339 331.1 262.338 331.105 262.337 cv
331.108 262.335 331.112 262.334 331.116 262.333 cv
331.135 262.327 331.155 262.32 331.174 262.314 cv
331.202 262.306 331.23 262.298 331.258 262.291 cv
331.271 262.288 331.284 262.285 331.297 262.282 cv
331.303 262.281 331.309 262.28 331.315 262.278 cv
331.324 262.276 331.333 262.274 331.342 262.272 cv
331.373 262.266 331.402 262.261 331.432 262.257 cv
331.45 262.255 331.467 262.254 331.484 262.252 cv
331.491 262.251 331.497 262.251 331.504 262.25 cv
331.51 262.249 331.517 262.248 331.523 262.248 cv
331.555 262.246 331.588 262.245 331.619 262.245 cv
331.633 262.245 331.646 262.246 331.659 262.247 cv
331.67 262.247 331.68 262.248 331.691 262.248 cv
331.702 262.249 331.714 262.249 331.725 262.25 cv
331.765 262.254 331.805 262.259 331.843 262.267 cv
331.843 262.267 331.844 262.267 331.845 262.267 cv
331.852 262.269 331.858 262.272 331.865 262.273 cv
331.906 262.282 331.947 262.293 331.986 262.306 cv
331.989 262.307 331.992 262.309 331.995 262.31 cv
332.049 262.33 332.102 262.354 332.151 262.383 cv
359.45 278.247 li
359.4 278.218 359.348 278.195 359.293 278.175 cv
359.251 278.159 359.208 278.147 359.164 278.137 cv
359.157 278.136 359.15 278.133 359.143 278.132 cv
359.094 278.122 359.042 278.116 358.99 278.112 cv
358.979 278.112 358.968 278.111 358.958 278.111 cv
358.907 278.109 358.855 278.11 358.802 278.114 cv
358.796 278.115 358.789 278.116 358.783 278.116 cv
358.727 278.122 358.671 278.13 358.613 278.142 cv
358.607 278.144 358.602 278.145 358.596 278.146 cv
358.536 278.16 358.476 278.176 358.415 278.197 cv
358.411 278.198 358.407 278.2 358.403 278.201 cv
358.339 278.223 358.274 278.249 358.208 278.279 cv
358.204 278.281 358.199 278.283 358.195 278.285 cv
358.128 278.316 358.061 278.351 357.992 278.391 cv
344.175 286.368 li
316.877 270.504 li
330.694 262.526 li
cp
.52549 .85098 .964706 rgb
f
339.78 286.798 mo
312.482 270.934 li
312.612 271.009 312.749 271.072 312.89 271.127 cv
312.908 271.135 312.926 271.143 312.945 271.15 cv
313.072 271.197 313.204 271.232 313.34 271.263 cv
313.364 271.268 313.386 271.277 313.411 271.282 cv
313.561 271.313 313.716 271.33 313.875 271.34 cv
313.906 271.342 313.937 271.343 313.969 271.344 cv
314.122 271.35 314.279 271.348 314.44 271.334 cv
314.46 271.333 314.48 271.33 314.501 271.328 cv
314.667 271.312 314.836 271.286 315.008 271.249 cv
315.027 271.245 315.046 271.241 315.065 271.237 cv
315.243 271.197 315.424 271.146 315.608 271.085 cv
315.62 271.08 315.632 271.077 315.644 271.073 cv
315.836 271.007 316.031 270.928 316.229 270.838 cv
316.242 270.832 316.255 270.826 316.269 270.819 cv
316.469 270.726 316.672 270.622 316.877 270.504 cv
344.175 286.368 li
344.11 286.406 344.045 286.442 343.98 286.477 cv
343.895 286.523 343.811 286.567 343.728 286.608 cv
343.674 286.634 343.621 286.659 343.567 286.683 cv
343.554 286.69 343.54 286.696 343.527 286.702 cv
343.511 286.71 343.495 286.718 343.478 286.725 cv
343.396 286.762 343.313 286.797 343.231 286.83 cv
343.148 286.863 343.065 286.895 342.983 286.924 cv
342.969 286.928 342.956 286.932 342.942 286.937 cv
342.93 286.941 342.918 286.945 342.906 286.949 cv
342.848 286.968 342.791 286.988 342.734 287.005 cv
342.649 287.031 342.565 287.054 342.481 287.075 cv
342.442 287.085 342.403 287.092 342.364 287.101 cv
342.345 287.105 342.326 287.109 342.307 287.113 cv
342.279 287.119 342.25 287.127 342.221 287.132 cv
342.133 287.15 342.046 287.164 341.959 287.176 cv
341.905 287.183 341.852 287.187 341.799 287.192 cv
341.779 287.194 341.759 287.197 341.738 287.198 cv
341.719 287.2 341.699 287.203 341.679 287.204 cv
341.58 287.211 341.481 287.215 341.385 287.214 cv
341.345 287.214 341.306 287.21 341.267 287.209 cv
341.236 287.207 341.205 287.206 341.174 287.204 cv
341.139 287.202 341.103 287.202 341.069 287.199 cv
340.949 287.188 340.83 287.171 340.715 287.148 cv
340.713 287.148 340.711 287.147 340.709 287.146 cv
340.685 287.142 340.663 287.133 340.639 287.127 cv
340.517 287.1 340.396 287.07 340.281 287.029 cv
340.268 287.024 340.256 287.018 340.243 287.014 cv
340.225 287.007 340.207 286.999 340.189 286.992 cv
340.048 286.936 339.91 286.873 339.78 286.798 cv
cp
f
333.118 268.278 mo
336.233 287.16 li
336.256 287.333 336.286 287.499 336.321 287.66 cv
336.324 287.674 336.326 287.689 336.329 287.703 cv
336.363 287.85 336.402 287.991 336.445 288.127 cv
336.457 288.168 336.471 288.207 336.484 288.247 cv
336.518 288.345 336.555 288.439 336.593 288.532 cv
336.613 288.58 336.633 288.629 336.654 288.676 cv
336.685 288.743 336.719 288.805 336.752 288.868 cv
336.793 288.945 336.833 289.023 336.878 289.095 cv
336.919 289.163 336.964 289.227 337.008 289.29 cv
337.042 289.338 337.074 289.386 337.109 289.431 cv
337.16 289.496 337.214 289.556 337.268 289.615 cv
337.304 289.654 337.338 289.695 337.374 289.732 cv
337.436 289.794 337.503 289.85 337.569 289.905 cv
337.602 289.933 337.633 289.964 337.667 289.99 cv
337.769 290.068 337.874 290.14 337.983 290.204 cv
337.985 290.204 337.986 290.205 337.987 290.206 cv
337.986 290.206 li
337.987 290.206 li
310.688 274.342 li
310.577 274.277 310.471 274.205 310.369 274.126 cv
310.335 274.1 310.304 274.069 310.271 274.042 cv
310.204 273.986 310.138 273.93 310.076 273.867 cv
310.039 273.831 310.005 273.79 309.97 273.751 cv
309.916 273.692 309.861 273.632 309.811 273.567 cv
309.776 273.522 309.743 273.474 309.71 273.426 cv
309.678 273.381 309.643 273.338 309.612 273.29 cv
309.6 273.272 309.591 273.25 309.579 273.231 cv
309.535 273.159 309.494 273.082 309.454 273.004 cv
309.431 272.96 309.404 272.92 309.382 272.874 cv
309.372 272.854 309.365 272.832 309.355 272.811 cv
309.334 272.765 309.315 272.716 309.295 272.668 cv
309.273 272.616 309.249 272.566 309.228 272.511 cv
309.213 272.47 309.2 272.425 309.186 272.383 cv
309.172 272.343 309.159 272.304 309.146 272.263 cv
309.137 272.233 309.126 272.205 309.117 272.175 cv
309.087 272.073 309.06 271.968 309.035 271.86 cv
309.034 271.853 309.032 271.846 309.031 271.839 cv
309.028 271.825 309.025 271.81 309.022 271.796 cv
309.005 271.716 308.988 271.636 308.974 271.554 cv
308.959 271.469 308.946 271.384 308.934 271.296 cv
305.819 252.414 li
333.118 268.278 li
cp
.329412 .737255 .85098 rgb
f
305.819 252.414 mo
305.85 252.391 305.88 252.37 305.91 252.349 cv
305.939 252.329 305.968 252.31 305.997 252.292 cv
306.026 252.273 306.055 252.256 306.083 252.239 cv
306.09 252.235 306.096 252.231 306.103 252.228 cv
306.124 252.215 306.146 252.203 306.167 252.192 cv
306.195 252.177 306.222 252.162 306.25 252.149 cv
306.268 252.14 306.286 252.132 306.303 252.124 cv
306.308 252.121 306.312 252.119 306.317 252.117 cv
306.322 252.115 306.327 252.112 306.332 252.11 cv
306.36 252.098 306.387 252.086 306.414 252.075 cv
306.442 252.064 306.469 252.054 306.497 252.044 cv
306.501 252.043 306.506 252.041 306.51 252.04 cv
306.514 252.038 306.519 252.037 306.523 252.036 cv
306.542 252.029 306.561 252.023 306.579 252.017 cv
306.608 252.009 306.636 252.001 306.663 251.994 cv
306.677 251.991 306.69 251.988 306.703 251.985 cv
306.709 251.984 306.715 251.982 306.722 251.981 cv
306.731 251.979 306.741 251.977 306.75 251.975 cv
306.78 251.969 306.809 251.964 306.838 251.96 cv
306.856 251.958 306.873 251.957 306.891 251.955 cv
306.897 251.954 306.904 251.953 306.911 251.953 cv
306.918 251.952 306.925 251.951 306.931 251.951 cv
306.965 251.948 306.998 251.947 307.03 251.947 cv
307.043 251.947 307.056 251.949 307.068 251.949 cv
307.079 251.95 307.089 251.95 307.1 251.951 cv
307.112 251.951 307.124 251.951 307.136 251.952 cv
307.176 251.956 307.216 251.962 307.254 251.97 cv
307.256 251.97 li
307.261 251.971 307.267 251.973 307.272 251.974 cv
307.316 251.984 307.358 251.995 307.399 252.009 cv
307.402 252.01 307.405 252.012 307.407 252.013 cv
307.463 252.033 307.516 252.057 307.566 252.086 cv
334.865 267.951 li
334.814 267.921 334.761 267.897 334.706 267.877 cv
334.662 267.861 334.617 267.849 334.571 267.839 cv
334.565 267.837 334.56 267.835 334.554 267.834 cv
334.504 267.824 334.452 267.818 334.398 267.815 cv
334.388 267.814 334.378 267.814 334.367 267.813 cv
334.316 267.812 334.263 267.812 334.21 267.817 cv
334.203 267.817 334.196 267.818 334.189 267.819 cv
334.134 267.824 334.078 267.833 334.02 267.845 cv
334.014 267.847 334.008 267.848 334.001 267.849 cv
333.942 267.863 333.882 267.879 333.821 267.9 cv
333.817 267.901 333.813 267.902 333.809 267.904 cv
333.745 267.926 333.68 267.952 333.615 267.982 cv
333.611 267.984 333.606 267.986 333.602 267.988 cv
333.536 268.018 333.469 268.053 333.401 268.092 cv
333.308 268.146 333.213 268.208 333.118 268.278 cv
305.819 252.414 li
305.819 252.414 li
cp
.670588 .913725 1 rgb
f
333.401 268.092 mo
333.308 268.146 333.213 268.208 333.118 268.278 cv
336.233 287.16 li
336.67 290.453 339.31 291.568 342.419 289.772 cv
360.055 279.591 li
360.051 278.261 359.128 277.735 357.992 278.391 cv
344.175 286.368 li
341.092 288.148 338.475 287.042 338.041 283.779 cv
335.443 268.954 li
335.296 267.855 334.412 267.508 333.401 268.092 cv
cp
.235294 .67451 .74902 rgb
f
375.053 226.916 mo
375.494 226.916 375.913 227.017 376.231 227.201 cv
376.59 227.408 376.788 227.698 376.788 228.018 cv
376.788 228.34 376.587 228.633 376.224 228.843 cv
375.902 229.029 375.479 229.132 375.034 229.132 cv
374.592 229.132 374.174 229.031 373.856 228.847 cv
373.497 228.64 373.299 228.349 373.299 228.029 cv
373.299 227.707 373.499 227.414 373.862 227.204 cv
374.185 227.018 374.607 226.916 375.053 226.916 cv
cp
.313726 .231373 .172549 rgb
f
373.301 229.168 mo
373.303 227.946 li
374.222 227.992 li
373.301 229.168 li
cp
f
376.788 228.018 mo
376.788 229.21 li
376.025 228.707 li
376.788 228.018 li
cp
f
373.365 227.717 mo
376.685 227.633 li
376.291 226.722 li
376.289 226.722 li
376.235 226.582 376.088 226.477 375.992 226.422 cv
375.746 226.279 375.412 226.201 375.053 226.201 cv
374.69 226.201 374.352 226.281 374.101 226.425 cv
374.004 226.482 373.855 226.587 373.799 226.727 cv
373.797 226.727 li
373.365 227.717 li
cp
.34902 .270588 .215686 rgb
f
375.053 226.916 mo
375.494 226.916 375.913 227.017 376.231 227.201 cv
376.59 227.408 376.788 227.698 376.788 228.018 cv
376.788 228.34 376.587 228.633 376.224 228.843 cv
375.902 229.029 375.479 229.132 375.034 229.132 cv
374.592 229.132 374.174 229.031 373.856 228.847 cv
373.497 228.64 373.299 228.349 373.299 228.029 cv
373.299 227.707 373.499 227.414 373.862 227.204 cv
374.185 227.018 374.607 226.916 375.053 226.916 cv
cp
.313726 .231373 .172549 rgb
f
375.053 228.108 mo
375.494 228.108 375.913 228.209 376.231 228.392 cv
376.59 228.6 376.788 228.89 376.788 229.21 cv
376.788 229.532 376.587 229.825 376.224 230.035 cv
375.902 230.221 375.479 230.324 375.034 230.324 cv
374.592 230.324 374.174 230.223 373.856 230.039 cv
373.497 229.832 373.299 229.541 373.299 229.221 cv
373.299 228.899 373.499 228.606 373.862 228.396 cv
374.185 228.21 374.607 228.108 375.053 228.108 cv
cp
.368627 .270588 .203922 rgb
f
372.034 233.286 mo
372.034 234.948 373.381 236.296 375.043 236.296 cv
376.705 236.296 378.053 234.948 378.053 233.286 cv
378.053 232.431 377.694 231.66 377.121 231.112 cv
376.547 229.237 li
376.559 229.006 376.415 228.774 376.112 228.598 cv
375.938 228.498 375.733 228.428 375.513 228.389 cv
375.208 228.331 374.878 228.333 374.573 228.392 cv
374.357 228.433 374.153 228.504 373.982 228.603 cv
373.688 228.773 373.54 228.994 373.537 229.216 cv
373.537 229.216 li
372.961 231.117 li
372.39 231.665 372.034 232.433 372.034 233.286 cv
cp
level3{
gsave
clp
[6.019 0 0 6.019 372.034 232.321 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.92549 .941176 .945098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.019 0 0 6.019 372.034 232.321 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2lprVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp6dqYL'bqYL'b
qYL'bq>'j^q>'j^q>'j^q=sa[q"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp@e4Rp@e4Rp@e4Rp@e1Pp%A"N
p%A"Np%A"Mo^qeJo^qeJo^qeJo^h\GoCMSFoCMSFoCMPDo()ABo()ABo()ABnaZ/>naZ/>naZ/>naQ&;
nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mdBK0mHs<.mHs<.mHs<-m-O**m-O**m-O**
~>
<~s8N#srr2orrr2orrr2orrr2lprVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtg0cqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZp\4FVp\4FV
p\4FVp\4FVp\+=Sp@e4Rp@e4Rp@e4Rp@e1Pp%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^qeJoCMSF
oCMSFoCMSFoCMSFoCDJCo()ABo()ABo()ABo()>@naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:nF5r:
~>
<~s8N#srr2orrr2orrr2orrr2oqrVc]nrVc]nrVc]nrVc]nrVZTkr;?Kjr;?Kjr;?Kjr;?Kiqtp9fqtp9f
qtp9fqtp9fqtp6dqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZ
q"OOWp\4FVp\4FVp\4FVp\4FUp@e4Rp@e4Rp@e4Rp@e4Rp@\+Op%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJ
o^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCMSFo()ABo()ABo()ABo()ABo()>@naZ/>naZ/>naZ/>naZ/>
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
375.195 229.782 mo
375.209 229.782 375.224 229.786 375.238 229.793 cv
375.28 229.817 375.294 229.871 375.27 229.912 cv
374.281 231.625 li
374.257 231.666 374.204 231.681 374.162 231.657 cv
374.121 231.633 374.107 231.579 374.131 231.538 cv
375.119 229.825 li
375.135 229.797 375.165 229.782 375.195 229.782 cv
cp
.313726 .231373 .172549 rgb
f
374.861 229.782 mo
374.891 229.782 374.921 229.797 374.937 229.825 cv
375.925 231.538 li
375.949 231.579 375.935 231.633 375.894 231.657 cv
375.852 231.681 375.799 231.666 375.775 231.625 cv
374.786 229.912 li
374.762 229.871 374.777 229.817 374.818 229.793 cv
374.832 229.786 374.847 229.782 374.861 229.782 cv
cp
f
374.212 231.472 mo
374.244 231.472 374.274 231.489 374.29 231.519 cv
374.49 231.902 li
374.624 231.646 li
374.652 231.592 374.707 231.559 374.768 231.559 cv
374.829 231.559 374.884 231.592 374.912 231.646 cv
375.046 231.902 li
375.18 231.646 li
375.208 231.592 375.263 231.559 375.324 231.559 cv
375.385 231.559 375.44 231.592 375.468 231.646 cv
375.602 231.902 li
375.802 231.519 li
375.825 231.476 375.878 231.459 375.921 231.482 cv
375.963 231.504 375.98 231.557 375.957 231.6 cv
375.746 232.003 li
375.718 232.057 375.663 232.091 375.602 232.091 cv
375.541 232.091 375.486 232.057 375.458 232.004 cv
375.324 231.748 li
375.19 232.003 li
375.162 232.057 375.107 232.091 375.046 232.091 cv
374.985 232.091 374.93 232.057 374.902 232.003 cv
374.768 231.748 li
374.634 232.003 li
374.606 232.057 374.551 232.091 374.49 232.091 cv
374.429 232.091 374.374 232.057 374.346 232.003 cv
374.135 231.6 li
374.112 231.557 374.129 231.504 374.172 231.482 cv
374.185 231.475 374.198 231.472 374.212 231.472 cv
cp
.647059 .776471 .231373 rgb
f
374.573 229.911 mo
374.573 228.392 li
374.878 228.333 375.208 228.331 375.513 228.389 cv
375.513 229.911 li
375.513 229.957 375.505 230.002 375.49 230.044 cv
375.436 230.198 375.289 230.307 375.116 230.307 cv
374.969 230.307 li
374.827 230.307 374.703 230.231 374.633 230.118 cv
374.619 230.097 374.608 230.074 374.599 230.049 cv
374.583 230.006 374.573 229.959 374.573 229.911 cv
cp
.741176 .764706 .780392 rgb
f
394.656 244.005 mo
394.656 243.971 394.657 243.937 394.656 243.903 cv
394.656 243.047 li
394.525 243.168 li
394.262 242.385 393.603 241.636 392.55 241.028 cv
389.752 239.413 385.23 239.404 382.449 241.01 cv
381.441 241.592 380.803 242.306 380.529 243.057 cv
380.376 242.979 li
380.381 243.722 li
380.293 244.843 380.994 245.983 382.481 246.841 cv
385.279 248.457 389.801 248.465 392.582 246.86 cv
393.902 246.097 394.591 245.108 394.652 244.106 cv
394.656 244.109 li
394.656 244.005 li
cp
.627451 .678431 .152941 rgb
f
392.582 246.045 mo
389.801 247.65 385.279 247.642 382.481 246.027 cv
379.683 244.411 379.669 241.801 382.449 240.195 cv
385.23 238.59 389.752 238.598 392.55 240.213 cv
395.348 241.829 395.362 244.44 392.582 246.045 cv
cp
.713726 .8 .211765 rgb
f
389.725 241.702 mo
389.685 241.702 389.646 241.699 389.606 241.691 cv
389.279 241.625 389.066 241.307 389.132 240.98 cv
392.203 225.629 li
392.268 225.301 392.588 225.09 392.914 225.155 cv
393.241 225.221 393.453 225.539 393.388 225.866 cv
390.316 241.217 li
390.259 241.504 390.007 241.702 389.725 241.702 cv
cp
.254902 .25098 .258824 rgb
f
386.979 242.985 mo
386.94 242.985 386.9 242.981 386.86 242.974 cv
386.533 242.908 386.321 242.59 386.386 242.263 cv
389.458 226.912 li
389.523 226.584 389.842 226.375 390.168 226.438 cv
390.495 226.504 390.708 226.822 390.642 227.149 cv
387.571 242.5 li
387.513 242.787 387.261 242.985 386.979 242.985 cv
cp
f
388.372 228.584 mo
388.386 228.592 388.4 228.601 388.415 228.609 cv
389.703 229.388 li
389.683 229.304 li
390.072 229.383 389.61 228.715 390.115 228.423 cv
391.458 227.648 392.547 225.77 392.547 224.229 cv
392.547 223.67 393.323 223.806 393.077 223.512 cv
393.074 223.423 li
391.916 222.718 li
391.47 222.456 390.829 222.431 390.115 222.843 cv
388.772 223.618 387.684 225.496 387.684 227.037 cv
387.684 227.769 387.929 228.292 388.331 228.558 cv
388.329 228.559 li
388.372 228.584 li
cp
f
388.917 227.783 mo
388.917 226.242 390.006 224.364 391.349 223.589 cv
392.692 222.814 393.781 223.434 393.781 224.975 cv
393.781 226.516 392.692 228.394 391.349 229.17 cv
390.006 229.945 388.917 229.324 388.917 227.783 cv
cp
.345098 .34902 .356863 rgb
f
389.598 224.352 mo
389.518 224.352 389.436 224.336 389.357 224.302 cv
374.999 218.062 li
374.694 217.929 374.553 217.573 374.686 217.267 cv
374.819 216.962 375.175 216.821 375.481 216.954 cv
389.839 223.194 li
390.145 223.327 390.285 223.683 390.152 223.989 cv
390.053 224.216 389.831 224.352 389.598 224.352 cv
cp
.254902 .25098 .258824 rgb
f
388.44 226.085 mo
388.36 226.085 388.278 226.069 388.2 226.035 cv
373.841 219.795 li
373.536 219.662 373.396 219.306 373.529 219 cv
373.661 218.695 374.016 218.555 374.323 218.687 cv
388.681 224.927 li
388.987 225.06 389.127 225.415 388.994 225.721 cv
388.896 225.949 388.673 226.085 388.44 226.085 cv
cp
f
382.216 229.193 mo
382.219 229.193 li
378.752 221.895 li
378.75 221.895 li
378.595 221.468 378.231 221.061 377.656 220.729 cv
377.625 220.712 377.589 220.7 377.557 220.683 cv
377.255 217.601 li
376.916 216.551 375.939 215.84 374.836 215.84 cv
374.798 215.84 li
373.695 215.84 372.718 216.551 372.379 217.601 cv
372.078 220.676 li
372.049 220.692 372.015 220.703 371.987 220.719 cv
371.442 221.034 371.093 221.417 370.93 221.821 cv
370.926 221.821 li
367.415 229.193 li
367.42 229.193 li
366.7 230.689 367.36 232.363 369.406 233.544 cv
372.42 235.285 377.293 235.293 380.289 233.564 cv
382.334 232.383 382.973 230.698 382.216 229.193 cv
cp
.784314 .898039 .317647 rgb
f
383.901 244.447 mo
383.666 244.447 383.444 244.393 383.275 244.296 cv
383.083 244.185 382.977 244.029 382.977 243.858 cv
382.977 243.685 383.084 243.528 383.278 243.416 cv
383.45 243.317 383.674 243.262 383.911 243.262 cv
384.146 243.262 384.368 243.316 384.537 243.414 cv
384.729 243.525 384.835 243.68 384.835 243.852 cv
384.835 244.025 384.728 244.182 384.534 244.294 cv
384.362 244.393 384.138 244.447 383.901 244.447 cv
cp
.498039 .54902 .552941 rgb
f
384.471 243.529 mo
384.781 243.708 384.779 243.999 384.467 244.179 cv
384.155 244.359 383.651 244.36 383.341 244.181 cv
383.031 244.002 383.033 243.711 383.345 243.531 cv
383.657 243.351 384.161 243.35 384.471 243.529 cv
cp
.584314 .647059 .65098 rgb
f
384.702 243.811 mo
383.11 243.811 li
383.11 243.25 li
383.11 242.827 383.463 242.484 383.898 242.484 cv
383.914 242.484 li
384.349 242.484 384.702 242.827 384.702 243.25 cv
384.702 243.811 li
cp
f
231.55 333.46 mo
116.442 267.003 li
194.813 222.02 li
309.921 288.477 li
231.55 333.46 li
cp
.796078 .929412 .968627 rgb
f
196.251 93.5966 mo
182.688 93.6388 li
184.453 103.713 li
184.454 103.722 184.456 103.731 184.458 103.74 cv
184.47 103.809 li
184.475 103.809 li
184.624 104.518 185.153 105.162 186.008 105.652 cv
186.959 106.197 188.212 106.495 189.535 106.491 cv
190.848 106.487 192.086 106.186 193.02 105.642 cv
193.901 105.13 194.431 104.451 194.543 103.707 cv
194.544 103.707 li
196.251 93.5966 li
cp
.901961 .905882 .909804 rgb
f
189.517 97.355 mo
187.738 97.3605 186.054 96.9599 184.776 96.2273 cv
183.409 95.4438 182.654 94.3705 182.651 93.2037 cv
182.647 92.0461 183.385 90.9781 184.729 90.1968 cv
185.985 89.4669 187.648 89.0615 189.412 89.0561 cv
191.192 89.0505 192.876 89.4511 194.154 90.1837 cv
195.52 90.967 196.275 92.0408 196.279 93.2071 cv
196.282 94.3649 195.544 95.4324 194.201 96.214 cv
192.945 96.9439 191.281 97.3495 189.517 97.355 cv
cp
.639216 .52549 .443137 rgb
f
195.626 93.9741 mo
195.389 94.6326 194.83 95.2616 193.944 95.7743 cv
191.496 97.1995 187.503 97.2018 185.03 95.7867 cv
184.126 95.2643 183.548 94.6287 183.306 93.9614 cv
182.874 92.8001 183.431 91.5388 184.984 90.6365 cv
187.437 89.2112 191.425 89.209 193.902 90.624 cv
195.486 91.5319 196.061 92.805 195.626 93.9741 cv
cp
.556863 .447059 .368627 rgb
f
195.626 93.9741 mo
195.389 94.6326 194.83 95.2616 193.944 95.7743 cv
191.496 97.1995 187.503 97.2018 185.03 95.7867 cv
184.126 95.2643 183.548 94.6287 183.306 93.9614 cv
183.549 93.3028 184.113 92.679 184.988 92.1663 cv
187.442 90.741 191.43 90.7388 193.907 92.1538 cv
194.806 92.6712 195.384 93.3068 195.626 93.9741 cv
cp
.368627 .270588 .203922 rgb
f
193.556 88.825 mo
193.099 92.4476 191.211 95.2041 189.313 95.0613 cv
189.281 95.0589 189.25 95.0558 189.218 95.0518 cv
189.165 95.045 189.11 95.0357 189.058 95.0242 cv
187.222 94.6298 186.111 91.5224 186.563 87.9429 cv
187.027 84.2601 188.969 81.4725 190.9 81.7161 cv
190.931 81.7199 190.959 81.7243 190.989 81.7297 cv
190.994 81.7304 li
192.869 82.0635 194.013 85.2024 193.556 88.825 cv
cp
.556863 .690196 .129412 rgb
f
192.538 88.6966 mo
192.156 91.7272 190.841 94.1941 189.313 95.0613 cv
189.281 95.0589 189.25 95.0558 189.218 95.0518 cv
189.165 95.045 189.11 95.0357 189.058 95.0242 cv
187.222 94.6298 186.111 91.5224 186.563 87.9429 cv
187.027 84.2601 188.969 81.4725 190.9 81.7161 cv
190.931 81.7199 190.959 81.7243 190.989 81.7297 cv
190.994 81.7304 li
192.259 82.9498 192.92 85.666 192.538 88.6966 cv
cp
f
193.556 88.825 mo
193.099 92.4476 191.211 95.2041 189.313 95.0613 cv
189.281 95.0589 189.25 95.0558 189.218 95.0518 cv
189.165 95.045 189.11 95.0357 189.058 95.0242 cv
187.865 93.7568 187.252 91.1112 187.623 88.1684 cv
188.017 85.0442 189.402 82.5209 190.989 81.7297 cv
190.994 81.7304 li
192.869 82.0635 194.013 85.2024 193.556 88.825 cv
cp
.647059 .776471 .231373 rgb
f
195.893 80.0406 mo
194.339 81.8878 192.302 82.741 191.299 81.9805 cv
191.283 81.9677 191.266 81.9549 191.25 81.9413 cv
191.223 81.9183 191.196 81.8936 191.171 81.8685 cv
190.293 80.9907 190.792 78.867 192.327 77.0417 cv
193.906 75.1638 195.984 74.3129 196.969 75.141 cv
196.984 75.1539 196.999 75.1665 197.013 75.1803 cv
197.016 75.1827 li
197.937 76.0402 197.446 78.1933 195.893 80.0406 cv
cp
.556863 .690196 .129412 rgb
f
195.373 79.604 mo
194.074 81.1494 192.459 82.0472 191.299 81.9805 cv
191.283 81.9677 191.266 81.9549 191.25 81.9413 cv
191.223 81.9183 191.196 81.8936 191.171 81.8685 cv
190.293 80.9907 190.792 78.867 192.327 77.0417 cv
193.906 75.1638 195.984 74.3129 196.969 75.141 cv
196.984 75.1539 196.999 75.1665 197.013 75.1803 cv
197.016 75.1827 li
197.281 76.3134 196.673 78.0586 195.373 79.604 cv
cp
f
195.893 80.0406 mo
194.339 81.8878 192.302 82.741 191.299 81.9805 cv
191.283 81.9677 191.266 81.9549 191.25 81.9413 cv
191.223 81.9183 191.196 81.8936 191.171 81.8685 cv
190.964 80.7367 191.572 79.048 192.834 77.5473 cv
194.174 75.9543 195.848 75.0502 197.013 75.1803 cv
197.016 75.1827 li
197.937 76.0402 197.446 78.1933 195.893 80.0406 cv
cp
.647059 .776471 .231373 rgb
f
192.749 72.8255 mo
194.01 74.368 194.315 76.2136 193.45 76.989 cv
193.435 77.002 193.421 77.0144 193.406 77.0267 cv
193.38 77.0476 193.353 77.0678 193.326 77.0863 cv
192.386 77.7412 190.665 77.0736 189.418 75.5493 cv
188.136 73.9811 187.842 72.1003 188.762 71.348 cv
188.776 71.3363 188.79 71.3256 188.805 71.3146 cv
188.807 71.3123 li
189.739 70.618 191.487 71.2829 192.749 72.8255 cv
cp
.556863 .690196 .129412 rgb
f
192.264 73.222 mo
193.319 74.5125 193.751 76.0009 193.45 76.989 cv
193.435 77.002 193.421 77.0144 193.406 77.0267 cv
193.38 77.0476 193.353 77.0678 193.326 77.0863 cv
192.386 77.7412 190.665 77.0736 189.418 75.5493 cv
188.136 73.9811 187.842 72.1003 188.762 71.348 cv
188.776 71.3363 188.79 71.3256 188.805 71.3146 cv
188.807 71.3123 li
189.836 71.2128 191.209 71.9315 192.264 73.222 cv
cp
f
192.749 72.8255 mo
194.01 74.368 194.315 76.2136 193.45 76.989 cv
193.435 77.002 193.421 77.0144 193.406 77.0267 cv
193.38 77.0476 193.353 77.0678 193.326 77.0863 cv
192.309 77.137 190.985 76.4234 189.96 75.1703 cv
188.872 73.84 188.447 72.3002 188.805 71.3146 cv
188.807 71.3123 li
189.739 70.618 191.487 71.2829 192.749 72.8255 cv
cp
.647059 .776471 .231373 rgb
f
187.599 82.7782 mo
188.421 83.7834 188.539 85.0523 187.874 85.64 cv
187.863 85.6499 187.852 85.6594 187.84 85.6688 cv
187.82 85.6848 187.8 85.7003 187.78 85.7147 cv
187.068 86.2226 185.867 85.8522 185.055 84.859 cv
184.219 83.8371 184.111 82.5431 184.814 81.9684 cv
184.825 81.9595 184.835 81.9512 184.847 81.9427 cv
184.849 81.941 li
185.557 81.4061 186.777 81.773 187.599 82.7782 cv
cp
.556863 .690196 .129412 rgb
f
187.229 83.0811 mo
187.916 83.9221 188.145 84.9351 187.874 85.64 cv
187.863 85.6499 187.852 85.6594 187.84 85.6688 cv
187.82 85.6848 187.8 85.7003 187.78 85.7147 cv
187.068 86.2226 185.867 85.8522 185.055 84.859 cv
184.219 83.8371 184.111 82.5431 184.814 81.9684 cv
184.825 81.9595 184.835 81.9512 184.847 81.9427 cv
184.849 81.941 li
185.593 81.8151 186.541 82.2402 187.229 83.0811 cv
cp
f
187.599 82.7782 mo
188.421 83.7834 188.539 85.0523 187.874 85.64 cv
187.863 85.6499 187.852 85.6594 187.84 85.6688 cv
187.82 85.6848 187.8 85.7003 187.78 85.7147 cv
187.046 85.8059 186.133 85.3817 185.465 84.5651 cv
184.756 83.6983 184.536 82.649 184.847 81.9427 cv
184.849 81.941 li
185.557 81.4061 186.777 81.773 187.599 82.7782 cv
cp
.647059 .776471 .231373 rgb
f
154.373 184.343 mo
147.78 188.15 li
147.759 180.77 li
154.352 176.963 li
154.373 184.343 li
cp
.827451 .811765 .811765 rgb
f
154.289 155.833 mo
147.696 159.64 li
147.675 152.26 li
154.268 148.453 li
154.289 155.833 li
cp
f
154.209 127.445 mo
147.616 131.252 li
147.595 123.869 li
154.188 120.062 li
154.209 127.445 li
cp
f
147.915 236.415 mo
130.733 226.429 li
154.452 212.735 li
171.635 222.72 li
147.915 236.415 li
cp
.858824 .858824 .858824 rgb
f
171.635 222.72 mo
154.452 212.735 li
154.375 185.48 li
171.557 195.465 li
171.635 222.72 li
cp
.533333 .533333 .533333 rgb
f
171.553 194.332 mo
170.578 194.896 li
154.428 204.22 li
147.835 208.026 li
146.843 207.448 li
130.651 198.041 li
146.791 188.721 li
147.78 188.15 li
154.373 184.343 li
171.553 194.332 li
cp
.917647 .917647 .917647 rgb
f
171.553 194.332 mo
154.373 184.343 li
154.352 176.963 li
154.348 175.71 li
154.296 157.091 li
170.393 166.445 li
171.477 167.076 li
171.553 194.332 li
cp
.858824 .858824 .858824 rgb
f
147.746 178.484 mo
147.793 195.058 li
150.498 193.497 li
150.451 176.923 li
147.746 178.484 li
cp
.92549 .941176 .945098 rgb
f
150.451 176.923 mo
150.498 193.497 li
160.029 199.035 li
159.982 182.462 li
150.451 176.923 li
cp
f
157.188 184.249 mo
157.235 200.823 li
160.419 198.984 li
160.372 182.41 li
157.188 184.249 li
cp
.713726 .8 .211765 rgb
f
147.356 178.535 mo
147.403 195.109 li
157.235 200.823 li
157.188 184.249 li
147.356 178.535 li
cp
.627451 .678431 .152941 rgb
f
150.298 176.837 mo
150.298 177.145 li
150.564 176.991 li
150.298 176.837 li
cp
.741176 .764706 .780392 rgb
f
147.747 178.484 mo
147.746 178.484 li
157.277 184.023 li
159.982 182.462 li
150.451 176.923 li
150.449 176.924 li
150.298 176.837 li
150.541 176.697 li
160.372 182.41 li
157.187 184.249 li
147.356 178.535 li
147.596 178.397 li
147.747 178.484 li
cp
.784314 .898039 .317647 rgb
f
148.022 178.642 mo
147.747 178.484 li
150.449 176.924 li
150.771 177.11 li
150.449 176.924 li
150.451 176.923 li
159.982 182.462 li
157.277 184.023 li
147.746 178.484 li
147.747 178.484 li
148.022 178.642 li
cp
1 1 1 rgb
f
157.923 186.966 mo
159.806 185.879 li
159.866 185.844 159.916 185.759 159.916 185.689 cv
159.916 185.62 159.866 185.592 159.806 185.627 cv
157.923 186.714 li
157.862 186.749 157.813 186.834 157.813 186.904 cv
157.813 186.973 157.862 187.001 157.923 186.966 cv
cp
.92549 .941176 .945098 rgb
f
157.923 186.293 mo
159.806 185.206 li
159.866 185.171 159.916 185.086 159.916 185.016 cv
159.916 184.946 159.866 184.918 159.806 184.953 cv
157.923 186.04 li
157.862 186.075 157.813 186.16 157.813 186.23 cv
157.813 186.3 157.862 186.328 157.923 186.293 cv
cp
f
157.923 185.619 mo
159.806 184.532 li
159.866 184.497 159.916 184.412 159.916 184.342 cv
159.916 184.273 159.866 184.245 159.806 184.28 cv
157.923 185.367 li
157.862 185.402 157.813 185.487 157.813 185.557 cv
157.813 185.626 157.862 185.654 157.923 185.619 cv
cp
f
157.923 184.946 mo
159.806 183.859 li
159.866 183.824 159.916 183.739 159.916 183.669 cv
159.916 183.599 159.866 183.571 159.806 183.606 cv
157.923 184.693 li
157.862 184.728 157.813 184.813 157.813 184.883 cv
157.813 184.953 157.862 184.981 157.923 184.946 cv
cp
f
143.849 181.041 mo
143.896 197.615 li
146.6 196.053 li
146.553 179.48 li
143.849 181.041 li
cp
f
146.553 179.48 mo
146.6 196.053 li
156.131 201.592 li
156.084 185.018 li
146.553 179.48 li
cp
f
153.29 186.806 mo
153.337 203.379 li
156.522 201.541 li
156.475 184.967 li
153.29 186.806 li
cp
.713726 .8 .211765 rgb
f
143.458 181.092 mo
143.505 197.666 li
153.337 203.379 li
153.29 186.806 li
143.458 181.092 li
cp
.627451 .678431 .152941 rgb
f
146.4 179.394 mo
146.4 179.701 li
146.667 179.547 li
146.4 179.394 li
cp
.741176 .764706 .780392 rgb
f
143.849 181.041 mo
143.849 181.041 li
153.379 186.58 li
156.084 185.018 li
146.553 179.48 li
146.551 179.481 li
146.4 179.394 li
146.643 179.254 li
156.475 184.967 li
153.29 186.806 li
143.458 181.092 li
143.698 180.953 li
143.849 181.041 li
cp
.784314 .898039 .317647 rgb
f
144.124 181.199 mo
143.849 181.041 li
146.551 179.481 li
146.873 179.667 li
146.551 179.481 li
146.553 179.48 li
156.084 185.018 li
153.379 186.58 li
143.849 181.041 li
143.849 181.041 li
144.124 181.199 li
cp
1 1 1 rgb
f
154.025 189.523 mo
155.908 188.436 li
155.969 188.401 156.018 188.316 156.018 188.246 cv
156.018 188.176 155.969 188.148 155.908 188.183 cv
154.025 189.27 li
153.964 189.306 153.915 189.391 153.915 189.46 cv
153.915 189.53 153.964 189.558 154.025 189.523 cv
cp
.92549 .941176 .945098 rgb
f
154.025 188.849 mo
155.908 187.762 li
155.969 187.727 156.018 187.642 156.018 187.573 cv
156.018 187.503 155.969 187.475 155.908 187.51 cv
154.025 188.597 li
153.964 188.632 153.915 188.717 153.915 188.787 cv
153.915 188.856 153.964 188.885 154.025 188.849 cv
cp
f
154.025 188.176 mo
155.908 187.089 li
155.969 187.054 156.018 186.969 156.018 186.899 cv
156.018 186.829 155.969 186.801 155.908 186.836 cv
154.025 187.923 li
153.964 187.958 153.915 188.044 153.915 188.113 cv
153.915 188.183 153.964 188.211 154.025 188.176 cv
cp
f
154.025 187.503 mo
155.908 186.415 li
155.969 186.38 156.018 186.295 156.018 186.226 cv
156.018 186.156 155.969 186.128 155.908 186.163 cv
154.025 187.25 li
153.964 187.285 153.915 187.37 153.915 187.44 cv
153.915 187.509 153.964 187.538 154.025 187.503 cv
cp
f
171.473 165.822 mo
170.393 166.445 li
154.348 175.71 li
147.755 179.516 li
146.763 178.938 li
130.571 169.531 li
146.711 160.211 li
147.696 159.64 li
154.289 155.833 li
171.473 165.822 li
cp
.917647 .917647 .917647 rgb
f
165.045 163.819 mo
150.669 155.573 li
150.669 158.696 li
165.045 166.942 li
165.045 163.819 li
cp
.92549 .941176 .945098 rgb
f
165.045 166.942 mo
150.669 158.696 li
141.107 164.18 li
155.484 172.427 li
165.045 166.942 li
cp
f
155.333 169.113 mo
140.956 160.867 li
140.956 164.544 li
155.333 172.79 li
155.333 169.113 li
cp
.968627 .839216 .301961 rgb
f
165.196 163.455 mo
150.82 155.209 li
140.956 160.867 li
155.333 169.113 li
165.196 163.455 li
cp
.968627 .823529 .215686 rgb
f
165.196 166.853 mo
164.93 166.699 li
164.93 167.006 li
165.196 166.853 li
cp
.741176 .764706 .780392 rgb
f
165.045 163.82 mo
165.045 163.819 li
155.483 169.304 li
155.484 172.427 li
165.045 166.942 li
165.045 166.94 li
165.196 166.853 li
165.196 167.133 li
155.333 172.79 li
155.333 169.113 li
165.196 163.455 li
165.196 163.733 li
165.045 163.82 li
cp
.956863 .898039 .65098 rgb
f
164.771 163.978 mo
165.045 163.82 li
165.045 166.94 li
164.723 167.126 li
165.045 166.94 li
165.045 166.942 li
155.484 172.427 li
155.483 169.304 li
165.045 163.819 li
165.045 163.82 li
164.771 163.978 li
cp
1 1 1 rgb
f
152.612 168.391 mo
152.612 170.565 li
152.612 170.635 152.661 170.721 152.721 170.755 cv
152.781 170.79 152.83 170.762 152.83 170.692 cv
152.83 168.517 li
152.83 168.447 152.781 168.362 152.721 168.327 cv
152.661 168.292 152.612 168.321 152.612 168.391 cv
cp
.92549 .941176 .945098 rgb
f
153.195 168.728 mo
153.195 170.902 li
153.195 170.972 153.244 171.057 153.304 171.092 cv
153.365 171.127 153.414 171.098 153.414 171.028 cv
153.414 168.854 li
153.414 168.784 153.365 168.699 153.304 168.664 cv
153.244 168.629 153.195 168.658 153.195 168.728 cv
cp
f
153.778 169.065 mo
153.778 171.239 li
153.778 171.309 153.827 171.394 153.888 171.429 cv
153.948 171.464 153.997 171.435 153.997 171.365 cv
153.997 169.191 li
153.997 169.121 153.948 169.036 153.888 169.001 cv
153.827 168.966 153.778 168.995 153.778 169.065 cv
cp
f
154.361 169.401 mo
154.361 171.576 li
154.362 171.646 154.411 171.731 154.471 171.766 cv
154.531 171.801 154.58 171.772 154.58 171.702 cv
154.58 169.528 li
154.58 169.458 154.531 169.372 154.471 169.337 cv
154.41 169.303 154.361 169.331 154.361 169.401 cv
cp
f
171.473 165.822 mo
154.289 155.833 li
154.268 148.453 li
154.265 147.318 li
154.212 128.581 li
170.414 137.995 li
171.396 138.566 li
171.473 165.822 li
cp
.858824 .858824 .858824 rgb
f
171.393 137.43 mo
170.414 137.995 li
154.265 147.318 li
147.672 151.125 li
146.683 150.55 li
130.491 141.14 li
146.63 131.82 li
147.616 131.252 li
154.209 127.445 li
171.393 137.43 li
cp
.917647 .917647 .917647 rgb
f
171.393 137.43 mo
154.209 127.445 li
154.188 120.062 li
154.185 118.93 li
154.132 100.189 li
170.334 109.603 li
171.316 110.174 li
171.393 137.43 li
cp
.858824 .858824 .858824 rgb
f
150.621 118.857 mo
150.668 135.43 li
153.372 133.869 li
153.325 117.295 li
150.621 118.857 li
cp
.92549 .941176 .945098 rgb
f
153.325 117.295 mo
153.372 133.869 li
162.903 139.408 li
162.856 122.834 li
153.325 117.295 li
cp
f
160.062 124.621 mo
160.109 141.195 li
163.293 139.356 li
163.246 122.783 li
160.062 124.621 li
cp
.52549 .85098 .964706 rgb
f
150.23 118.908 mo
150.277 135.481 li
160.109 141.195 li
160.062 124.621 li
150.23 118.908 li
cp
.329412 .737255 .85098 rgb
f
153.172 117.209 mo
153.172 117.517 li
153.439 117.363 li
153.172 117.209 li
cp
.741176 .764706 .780392 rgb
f
150.621 118.856 mo
150.621 118.857 li
160.151 124.395 li
162.856 122.834 li
153.325 117.295 li
153.323 117.296 li
153.172 117.209 li
153.415 117.069 li
163.246 122.783 li
160.062 124.621 li
150.23 118.908 li
150.47 118.769 li
150.621 118.856 li
cp
.670588 .913725 1 rgb
f
150.896 119.015 mo
150.621 118.856 li
153.323 117.296 li
153.645 117.482 li
153.323 117.296 li
153.325 117.295 li
162.856 122.834 li
160.151 124.395 li
150.621 118.857 li
150.621 118.856 li
150.896 119.015 li
cp
1 1 1 rgb
f
160.797 127.339 mo
162.68 126.252 li
162.741 126.216 162.79 126.131 162.79 126.062 cv
162.79 125.992 162.741 125.964 162.68 125.999 cv
160.797 127.086 li
160.736 127.121 160.687 127.206 160.687 127.276 cv
160.687 127.346 160.736 127.374 160.797 127.339 cv
cp
.92549 .941176 .945098 rgb
f
160.797 126.665 mo
162.68 125.578 li
162.741 125.543 162.79 125.458 162.79 125.388 cv
162.79 125.318 162.741 125.29 162.68 125.325 cv
160.797 126.413 li
160.736 126.448 160.687 126.533 160.687 126.602 cv
160.687 126.672 160.736 126.7 160.797 126.665 cv
cp
f
160.797 125.992 mo
162.68 124.905 li
162.741 124.869 162.79 124.784 162.79 124.715 cv
162.79 124.645 162.741 124.617 162.68 124.652 cv
160.797 125.739 li
160.736 125.774 160.687 125.859 160.687 125.929 cv
160.687 125.999 160.736 126.027 160.797 125.992 cv
cp
f
160.797 125.318 mo
162.68 124.231 li
162.741 124.196 162.79 124.111 162.79 124.041 cv
162.79 123.972 162.741 123.943 162.68 123.979 cv
160.797 125.066 li
160.736 125.101 160.687 125.186 160.687 125.255 cv
160.687 125.325 160.736 125.353 160.797 125.318 cv
cp
f
146.465 121.057 mo
146.512 137.631 li
149.216 136.069 li
149.169 119.496 li
146.465 121.057 li
cp
f
149.169 119.496 mo
149.216 136.069 li
158.747 141.608 li
158.7 125.034 li
149.169 119.496 li
cp
f
155.906 126.822 mo
155.953 143.396 li
159.137 141.557 li
159.09 124.983 li
155.906 126.822 li
cp
.713726 .8 .211765 rgb
f
146.074 121.108 mo
146.121 137.682 li
155.953 143.396 li
155.906 126.822 li
146.074 121.108 li
cp
.627451 .678431 .152941 rgb
f
149.016 119.41 mo
149.016 119.718 li
149.283 119.564 li
149.016 119.41 li
cp
.741176 .764706 .780392 rgb
f
146.465 121.057 mo
146.465 121.057 li
155.995 126.596 li
158.7 125.034 li
149.169 119.496 li
149.167 119.497 li
149.016 119.41 li
149.259 119.27 li
159.09 124.983 li
155.906 126.822 li
146.074 121.108 li
146.314 120.97 li
146.465 121.057 li
cp
.784314 .898039 .317647 rgb
f
146.74 121.215 mo
146.465 121.057 li
149.167 119.497 li
149.489 119.683 li
149.167 119.497 li
149.169 119.496 li
158.7 125.034 li
155.995 126.596 li
146.465 121.057 li
146.465 121.057 li
146.74 121.215 li
cp
1 1 1 rgb
f
156.641 129.539 mo
158.524 128.452 li
158.585 128.417 158.634 128.332 158.634 128.262 cv
158.634 128.192 158.585 128.164 158.524 128.199 cv
156.641 129.287 li
156.58 129.322 156.531 129.407 156.531 129.476 cv
156.531 129.546 156.58 129.574 156.641 129.539 cv
cp
.92549 .941176 .945098 rgb
f
156.641 128.866 mo
158.524 127.779 li
158.585 127.744 158.634 127.658 158.634 127.589 cv
158.634 127.519 158.585 127.491 158.524 127.526 cv
156.641 128.613 li
156.58 128.648 156.531 128.733 156.531 128.803 cv
156.531 128.873 156.58 128.901 156.641 128.866 cv
cp
f
156.641 128.192 mo
158.524 127.105 li
158.585 127.07 158.634 126.985 158.634 126.915 cv
158.634 126.846 158.585 126.817 158.524 126.853 cv
156.641 127.94 li
156.58 127.975 156.531 128.06 156.531 128.129 cv
156.531 128.199 156.58 128.227 156.641 128.192 cv
cp
f
156.641 127.519 mo
158.524 126.432 li
158.585 126.396 158.634 126.311 158.634 126.242 cv
158.634 126.172 158.585 126.144 158.524 126.179 cv
156.641 127.266 li
156.58 127.301 156.531 127.386 156.531 127.456 cv
156.531 127.526 156.58 127.554 156.641 127.519 cv
cp
f
146.851 209.729 mo
146.847 208.595 li
146.77 181.222 li
146.767 180.205 li
146.689 152.829 li
146.686 151.695 li
146.606 123.305 li
129.423 113.32 li
129.504 141.71 li
129.507 142.844 li
129.584 170.22 li
129.587 171.236 li
129.665 198.61 li
129.668 199.744 li
129.749 228.134 li
146.931 238.119 li
146.851 209.729 li
cp
.858824 .858824 .858824 rgb
f
146.606 123.305 mo
129.423 113.32 li
155.117 98.4851 li
172.3 108.47 li
146.606 123.305 li
cp
1 1 1 rgb
f
148.236 236.23 mo
147.916 236.414 li
147.86 216.542 li
147.839 209.621 li
147.839 209.158 li
154.432 205.352 li
171.557 195.464 li
171.56 196.293 li
171.56 196.296 li
171.633 222.72 li
148.236 236.23 li
cp
147.78 188.15 mo
147.759 180.77 li
154.352 176.963 li
171.477 167.076 li
171.553 194.332 li
170.578 194.896 li
154.428 204.22 li
147.835 208.026 li
147.78 188.15 li
cp
147.696 159.64 mo
147.675 152.26 li
154.268 148.453 li
171.396 138.566 li
171.473 165.822 li
170.393 166.445 li
154.348 175.71 li
147.755 179.516 li
147.696 159.64 li
cp
147.616 131.252 mo
147.595 123.869 li
154.188 120.062 li
171.316 110.174 li
171.393 137.43 li
170.414 137.995 li
154.265 147.318 li
147.672 151.125 li
147.616 131.252 li
cp
172.549 195.725 mo
172.549 195.722 li
172.546 194.896 li
172.546 194.551 li
172.542 193.761 li
172.462 166.386 li
172.462 165.369 li
172.382 137.995 li
172.379 136.859 li
172.298 108.471 li
170.338 109.603 li
170.334 109.603 li
154.185 118.93 li
146.606 123.304 li
146.63 131.82 li
146.683 150.55 li
146.686 151.696 li
146.69 152.828 li
146.711 160.211 li
146.763 178.938 li
146.766 180.206 li
146.77 181.223 li
146.791 188.721 li
146.843 207.448 li
146.846 208.594 li
146.85 209.729 li
146.871 217.113 li
146.923 235.836 li
146.93 238.121 li
147.229 237.95 li
148.239 237.365 li
172.626 223.284 li
172.549 195.725 li
cp
.964706 .968627 .960784 rgb
f
148.241 239.067 mo
147.229 238.479 li
147.146 209.217 li
148.158 209.806 li
148.241 239.067 li
cp
.329412 .737255 .85098 rgb
f
148.158 209.806 mo
147.146 209.217 li
172.614 194.514 li
173.626 195.102 li
148.158 209.806 li
cp
.670588 .913725 1 rgb
f
173.626 195.102 mo
173.709 224.363 li
148.241 239.067 li
148.158 209.806 li
173.626 195.102 li
cp
.52549 .85098 .964706 rgb
f
164.315 203.032 mo
164.318 204.047 li
165.196 204.558 li
165.194 203.542 li
164.315 203.032 li
cp
.572549 .588235 .603922 rgb
f
159.2 207.682 mo
159.203 208.697 li
166.372 204.558 li
166.37 203.542 li
159.2 207.682 li
cp
.827451 .811765 .811765 rgb
f
157.736 206.83 mo
157.739 207.846 li
159.203 208.697 li
159.2 207.682 li
157.736 206.83 li
cp
.717647 .698039 .698039 rgb
f
157.736 206.83 mo
159.2 207.682 li
166.37 203.542 li
164.905 202.691 li
164.315 203.032 li
165.194 203.542 li
159.204 207 li
158.326 206.49 li
157.736 206.83 li
cp
1 1 1 rgb
f
128.423 199.159 mo
121.83 202.965 li
121.809 195.585 li
128.402 191.779 li
128.423 199.159 li
cp
.827451 .811765 .811765 rgb
f
128.339 170.649 mo
121.746 174.455 li
121.725 167.075 li
128.318 163.269 li
128.339 170.649 li
cp
f
128.259 142.26 mo
121.666 146.067 li
121.645 138.684 li
128.238 134.877 li
128.259 142.26 li
cp
f
121.965 251.23 mo
104.783 241.245 li
128.502 227.55 li
145.685 237.536 li
121.965 251.23 li
cp
.858824 .858824 .858824 rgb
f
145.685 237.536 mo
128.502 227.55 li
128.425 200.295 li
145.608 210.28 li
145.685 237.536 li
cp
.533333 .533333 .533333 rgb
f
145.603 209.147 mo
144.628 209.711 li
128.479 219.035 li
121.886 222.841 li
120.893 222.263 li
104.702 212.856 li
120.841 203.536 li
121.83 202.965 li
128.423 199.159 li
145.603 209.147 li
cp
.917647 .917647 .917647 rgb
f
145.603 209.147 mo
128.423 199.159 li
128.402 191.779 li
128.398 190.525 li
128.346 171.906 li
144.444 181.261 li
145.527 181.891 li
145.603 209.147 li
cp
.858824 .858824 .858824 rgb
f
121.797 193.299 mo
121.844 209.873 li
124.548 208.312 li
124.501 191.738 li
121.797 193.299 li
cp
.92549 .941176 .945098 rgb
f
124.501 191.738 mo
124.548 208.312 li
134.079 213.85 li
134.032 197.277 li
124.501 191.738 li
cp
f
131.238 199.064 mo
131.285 215.638 li
134.469 213.799 li
134.422 197.225 li
131.238 199.064 li
cp
.713726 .8 .211765 rgb
f
121.406 193.351 mo
121.453 209.924 li
131.285 215.638 li
131.238 199.064 li
121.406 193.351 li
cp
.627451 .678431 .152941 rgb
f
124.348 191.652 mo
124.348 191.96 li
124.615 191.806 li
124.348 191.652 li
cp
.741176 .764706 .780392 rgb
f
121.797 193.299 mo
121.797 193.299 li
131.327 198.838 li
134.032 197.277 li
124.501 191.738 li
124.499 191.739 li
124.348 191.652 li
124.591 191.512 li
134.422 197.225 li
131.238 199.064 li
121.406 193.351 li
121.646 193.212 li
121.797 193.299 li
cp
.784314 .898039 .317647 rgb
f
122.072 193.458 mo
121.797 193.299 li
124.499 191.739 li
124.821 191.925 li
124.499 191.739 li
124.501 191.738 li
134.032 197.277 li
131.327 198.838 li
121.797 193.299 li
121.797 193.299 li
122.072 193.458 li
cp
1 1 1 rgb
f
131.973 201.781 mo
133.856 200.694 li
133.917 200.659 133.966 200.574 133.966 200.505 cv
133.966 200.435 133.917 200.407 133.856 200.442 cv
131.973 201.529 li
131.912 201.564 131.863 201.649 131.863 201.719 cv
131.863 201.788 131.912 201.816 131.973 201.781 cv
cp
.92549 .941176 .945098 rgb
f
131.973 201.108 mo
133.856 200.021 li
133.917 199.986 133.966 199.901 133.966 199.831 cv
133.966 199.761 133.917 199.733 133.856 199.768 cv
131.973 200.855 li
131.912 200.89 131.863 200.975 131.863 201.045 cv
131.863 201.115 131.912 201.143 131.973 201.108 cv
cp
f
131.973 200.434 mo
133.856 199.347 li
133.917 199.312 133.966 199.227 133.966 199.158 cv
133.966 199.088 133.917 199.06 133.856 199.095 cv
131.973 200.182 li
131.912 200.217 131.863 200.302 131.863 200.372 cv
131.863 200.441 131.912 200.47 131.973 200.434 cv
cp
f
131.973 199.761 mo
133.856 198.674 li
133.917 198.639 133.966 198.554 133.966 198.484 cv
133.966 198.414 133.917 198.386 133.856 198.421 cv
131.973 199.508 li
131.912 199.544 131.863 199.629 131.863 199.698 cv
131.863 199.768 131.912 199.796 131.973 199.761 cv
cp
f
117.899 195.856 mo
117.946 212.43 li
120.65 210.868 li
120.603 194.295 li
117.899 195.856 li
cp
f
120.603 194.295 mo
120.65 210.868 li
130.181 216.407 li
130.134 199.833 li
120.603 194.295 li
cp
f
127.34 201.621 mo
127.387 218.194 li
130.572 216.356 li
130.525 199.782 li
127.34 201.621 li
cp
.713726 .8 .211765 rgb
f
117.508 195.907 mo
117.555 212.481 li
127.387 218.194 li
127.34 201.621 li
117.508 195.907 li
cp
.627451 .678431 .152941 rgb
f
120.45 194.209 mo
120.45 194.517 li
120.717 194.363 li
120.45 194.209 li
cp
.741176 .764706 .780392 rgb
f
117.9 195.856 mo
117.899 195.856 li
127.43 201.395 li
130.134 199.833 li
120.603 194.295 li
120.601 194.296 li
120.45 194.209 li
120.693 194.069 li
130.525 199.782 li
127.34 201.621 li
117.508 195.907 li
117.749 195.769 li
117.9 195.856 li
cp
.784314 .898039 .317647 rgb
f
118.174 196.014 mo
117.9 195.856 li
120.601 194.296 li
120.923 194.482 li
120.601 194.296 li
120.603 194.295 li
130.134 199.833 li
127.43 201.395 li
117.899 195.856 li
117.9 195.856 li
118.174 196.014 li
cp
1 1 1 rgb
f
128.075 204.338 mo
129.958 203.251 li
130.019 203.216 130.068 203.131 130.068 203.061 cv
130.068 202.991 130.019 202.963 129.958 202.998 cv
128.075 204.086 li
128.014 204.121 127.965 204.206 127.965 204.275 cv
127.965 204.345 128.014 204.373 128.075 204.338 cv
cp
.92549 .941176 .945098 rgb
f
128.075 203.665 mo
129.958 202.577 li
130.019 202.542 130.068 202.457 130.068 202.388 cv
130.068 202.318 130.019 202.29 129.958 202.325 cv
128.075 203.412 li
128.014 203.447 127.965 203.532 127.965 203.602 cv
127.965 203.672 128.014 203.7 128.075 203.665 cv
cp
f
128.075 202.991 mo
129.958 201.904 li
130.019 201.869 130.068 201.784 130.068 201.714 cv
130.068 201.644 130.019 201.616 129.958 201.651 cv
128.075 202.739 li
128.014 202.774 127.965 202.859 127.965 202.928 cv
127.965 202.998 128.014 203.026 128.075 202.991 cv
cp
f
128.075 202.318 mo
129.958 201.231 li
130.019 201.195 130.068 201.11 130.068 201.041 cv
130.068 200.971 130.019 200.943 129.958 200.978 cv
128.075 202.065 li
128.014 202.1 127.965 202.185 127.965 202.255 cv
127.965 202.325 128.014 202.353 128.075 202.318 cv
cp
f
145.523 180.637 mo
144.444 181.261 li
128.398 190.525 li
121.806 194.331 li
120.813 193.753 li
104.622 184.346 li
120.761 175.026 li
121.746 174.455 li
128.339 170.649 li
145.523 180.637 li
cp
.917647 .917647 .917647 rgb
f
139.096 178.634 mo
124.719 170.388 li
124.719 173.511 li
139.096 181.757 li
139.096 178.634 li
cp
.92549 .941176 .945098 rgb
f
139.096 181.757 mo
124.719 173.511 li
115.157 178.996 li
129.534 187.242 li
139.096 181.757 li
cp
f
129.383 183.928 mo
115.006 175.682 li
115.006 179.359 li
129.383 187.606 li
129.383 183.928 li
cp
.968627 .839216 .301961 rgb
f
139.247 178.271 mo
124.87 170.024 li
115.006 175.682 li
129.383 183.928 li
139.247 178.271 li
cp
.968627 .823529 .215686 rgb
f
139.247 181.668 mo
138.98 181.514 li
138.98 181.822 li
139.247 181.668 li
cp
.741176 .764706 .780392 rgb
f
139.096 178.635 mo
139.096 178.634 li
129.534 184.119 li
129.534 187.242 li
139.096 181.757 li
139.096 181.755 li
139.247 181.668 li
139.247 181.948 li
129.383 187.606 li
129.383 183.928 li
139.247 178.271 li
139.247 178.548 li
139.096 178.635 li
cp
.956863 .898039 .65098 rgb
f
138.821 178.794 mo
139.096 178.635 li
139.096 181.755 li
138.774 181.941 li
139.096 181.755 li
139.096 181.757 li
129.534 187.242 li
129.534 184.119 li
139.096 178.634 li
139.096 178.635 li
138.821 178.794 li
cp
1 1 1 rgb
f
126.662 183.206 mo
126.662 185.38 li
126.662 185.451 126.711 185.536 126.771 185.571 cv
126.832 185.605 126.881 185.577 126.881 185.507 cv
126.881 183.333 li
126.881 183.262 126.832 183.177 126.771 183.142 cv
126.711 183.107 126.662 183.136 126.662 183.206 cv
cp
.92549 .941176 .945098 rgb
f
127.245 183.543 mo
127.245 185.717 li
127.245 185.787 127.294 185.872 127.355 185.907 cv
127.415 185.942 127.464 185.914 127.464 185.843 cv
127.464 183.669 li
127.464 183.599 127.415 183.514 127.355 183.479 cv
127.294 183.444 127.245 183.473 127.245 183.543 cv
cp
f
127.828 183.88 mo
127.828 186.054 li
127.828 186.124 127.877 186.209 127.938 186.244 cv
127.998 186.279 128.047 186.25 128.047 186.18 cv
128.047 184.006 li
128.047 183.936 127.998 183.851 127.938 183.816 cv
127.878 183.781 127.828 183.81 127.828 183.88 cv
cp
f
128.412 184.217 mo
128.412 186.391 li
128.412 186.461 128.461 186.546 128.521 186.581 cv
128.581 186.616 128.63 186.587 128.63 186.517 cv
128.63 184.343 li
128.63 184.273 128.581 184.187 128.521 184.153 cv
128.461 184.118 128.412 184.146 128.412 184.217 cv
cp
f
145.523 180.637 mo
128.339 170.649 li
128.318 163.269 li
128.315 162.133 li
128.263 143.396 li
144.464 152.81 li
145.447 153.381 li
145.523 180.637 li
cp
.858824 .858824 .858824 rgb
f
145.443 152.246 mo
144.464 152.81 li
128.315 162.133 li
121.722 165.94 li
120.733 165.365 li
104.541 155.955 li
120.681 146.635 li
121.666 146.067 li
128.259 142.26 li
145.443 152.246 li
cp
.917647 .917647 .917647 rgb
f
145.443 152.246 mo
128.259 142.26 li
128.238 134.877 li
128.235 133.745 li
128.183 115.004 li
144.384 124.418 li
145.367 124.989 li
145.443 152.246 li
cp
.858824 .858824 .858824 rgb
f
124.671 133.672 mo
124.718 150.245 li
127.422 148.684 li
127.375 132.11 li
124.671 133.672 li
cp
.92549 .941176 .945098 rgb
f
127.375 132.11 mo
127.422 148.684 li
136.953 154.223 li
136.906 137.649 li
127.375 132.11 li
cp
f
134.112 139.436 mo
134.159 156.01 li
137.344 154.171 li
137.297 137.598 li
134.112 139.436 li
cp
.52549 .85098 .964706 rgb
f
124.28 133.723 mo
124.327 150.297 li
134.159 156.01 li
134.112 139.436 li
124.28 133.723 li
cp
.329412 .737255 .85098 rgb
f
127.222 132.024 mo
127.222 132.332 li
127.489 132.178 li
127.222 132.024 li
cp
.741176 .764706 .780392 rgb
f
124.672 133.671 mo
124.671 133.672 li
134.202 139.21 li
136.906 137.649 li
127.375 132.11 li
127.373 132.112 li
127.222 132.024 li
127.465 131.884 li
137.297 137.598 li
134.112 139.436 li
124.28 133.723 li
124.521 133.584 li
124.672 133.671 li
cp
.670588 .913725 1 rgb
f
124.946 133.83 mo
124.672 133.671 li
127.373 132.112 li
127.695 132.297 li
127.373 132.112 li
127.375 132.11 li
136.906 137.649 li
134.202 139.21 li
124.671 133.672 li
124.672 133.671 li
124.946 133.83 li
cp
1 1 1 rgb
f
134.847 142.154 mo
136.73 141.067 li
136.791 141.032 136.84 140.947 136.84 140.877 cv
136.84 140.807 136.791 140.779 136.73 140.814 cv
134.847 141.901 li
134.786 141.936 134.737 142.021 134.737 142.091 cv
134.737 142.161 134.786 142.189 134.847 142.154 cv
cp
.92549 .941176 .945098 rgb
f
134.847 141.48 mo
136.73 140.393 li
136.791 140.358 136.84 140.273 136.84 140.203 cv
136.84 140.134 136.791 140.105 136.73 140.141 cv
134.847 141.228 li
134.786 141.263 134.737 141.348 134.737 141.418 cv
134.737 141.487 134.786 141.515 134.847 141.48 cv
cp
f
134.847 140.807 mo
136.73 139.72 li
136.791 139.685 136.84 139.6 136.84 139.53 cv
136.84 139.46 136.791 139.432 136.73 139.467 cv
134.847 140.554 li
134.786 140.589 134.737 140.674 134.737 140.744 cv
134.737 140.814 134.786 140.842 134.847 140.807 cv
cp
f
134.847 140.133 mo
136.73 139.046 li
136.791 139.011 136.84 138.926 136.84 138.856 cv
136.84 138.787 136.791 138.759 136.73 138.794 cv
134.847 139.881 li
134.786 139.916 134.737 140.001 134.737 140.07 cv
134.737 140.14 134.786 140.168 134.847 140.133 cv
cp
f
120.515 135.872 mo
120.562 152.446 li
123.266 150.885 li
123.219 134.311 li
120.515 135.872 li
cp
f
123.219 134.311 mo
123.266 150.885 li
132.797 156.423 li
132.75 139.85 li
123.219 134.311 li
cp
f
129.956 141.637 mo
130.003 158.211 li
133.188 156.372 li
133.141 139.798 li
129.956 141.637 li
cp
.713726 .8 .211765 rgb
f
120.124 135.923 mo
120.171 152.497 li
130.003 158.211 li
129.956 141.637 li
120.124 135.923 li
cp
.627451 .678431 .152941 rgb
f
123.066 134.225 mo
123.066 134.533 li
123.333 134.379 li
123.066 134.225 li
cp
.741176 .764706 .780392 rgb
f
120.516 135.872 mo
120.515 135.872 li
130.046 141.411 li
132.75 139.85 li
123.219 134.311 li
123.217 134.312 li
123.066 134.225 li
123.309 134.085 li
133.141 139.798 li
129.956 141.637 li
120.124 135.923 li
120.365 135.785 li
120.516 135.872 li
cp
.784314 .898039 .317647 rgb
f
120.79 136.03 mo
120.516 135.872 li
123.217 134.312 li
123.539 134.498 li
123.217 134.312 li
123.219 134.311 li
132.75 139.85 li
130.046 141.411 li
120.515 135.872 li
120.516 135.872 li
120.79 136.03 li
cp
1 1 1 rgb
f
130.691 144.354 mo
132.574 143.267 li
132.635 143.232 132.684 143.147 132.684 143.077 cv
132.684 143.008 132.635 142.98 132.574 143.015 cv
130.691 144.102 li
130.63 144.137 130.581 144.222 130.581 144.292 cv
130.581 144.361 130.63 144.389 130.691 144.354 cv
cp
.92549 .941176 .945098 rgb
f
130.691 143.681 mo
132.574 142.594 li
132.635 142.559 132.684 142.474 132.684 142.404 cv
132.684 142.334 132.635 142.306 132.574 142.341 cv
130.691 143.428 li
130.63 143.463 130.581 143.548 130.581 143.618 cv
130.581 143.688 130.63 143.716 130.691 143.681 cv
cp
f
130.691 143.007 mo
132.574 141.92 li
132.635 141.885 132.684 141.8 132.684 141.73 cv
132.684 141.661 132.635 141.633 132.574 141.668 cv
130.691 142.755 li
130.63 142.79 130.581 142.875 130.581 142.944 cv
130.581 143.014 130.63 143.042 130.691 143.007 cv
cp
f
130.691 142.334 mo
132.574 141.247 li
132.635 141.212 132.684 141.127 132.684 141.057 cv
132.684 140.987 132.635 140.959 132.574 140.994 cv
130.691 142.081 li
130.63 142.116 130.581 142.201 130.581 142.271 cv
130.581 142.341 130.63 142.369 130.691 142.334 cv
cp
f
120.901 224.545 mo
120.898 223.41 li
120.82 196.037 li
120.817 195.02 li
120.74 167.644 li
120.736 166.51 li
120.656 138.12 li
103.473 128.135 li
103.554 156.525 li
103.557 157.659 li
103.635 185.035 li
103.637 186.052 li
103.715 213.425 li
103.718 214.559 li
103.799 242.949 li
120.981 252.934 li
120.901 224.545 li
cp
.858824 .858824 .858824 rgb
f
120.656 138.12 mo
103.473 128.135 li
129.167 113.3 li
146.35 123.286 li
120.656 138.12 li
cp
1 1 1 rgb
f
122.286 251.045 mo
121.966 251.229 li
121.91 231.357 li
121.889 224.437 li
121.889 223.973 li
128.482 220.167 li
145.607 210.279 li
145.61 211.108 li
145.61 211.111 li
145.683 237.535 li
122.286 251.045 li
cp
121.83 202.965 mo
121.809 195.585 li
128.402 191.779 li
145.527 181.891 li
145.603 209.147 li
144.628 209.711 li
128.479 219.035 li
121.886 222.841 li
121.83 202.965 li
cp
121.746 174.455 mo
121.725 167.075 li
128.318 163.269 li
145.447 153.381 li
145.523 180.637 li
144.444 181.261 li
128.398 190.525 li
121.806 194.331 li
121.746 174.455 li
cp
121.666 146.067 mo
121.645 138.684 li
128.238 134.877 li
145.367 124.989 li
145.443 152.246 li
144.464 152.81 li
128.315 162.133 li
121.722 165.94 li
121.666 146.067 li
cp
146.599 210.54 mo
146.599 210.537 li
146.596 209.711 li
146.596 209.367 li
146.592 208.576 li
146.512 181.201 li
146.512 180.184 li
146.432 152.81 li
146.429 151.674 li
146.349 123.286 li
144.388 124.418 li
144.384 124.418 li
128.235 133.745 li
120.656 138.119 li
120.681 146.635 li
120.733 165.365 li
120.736 166.511 li
120.74 167.643 li
120.761 175.026 li
120.813 193.753 li
120.816 195.021 li
120.82 196.038 li
120.841 203.536 li
120.893 222.263 li
120.897 223.409 li
120.9 224.544 li
120.921 231.928 li
120.973 250.651 li
120.98 252.936 li
121.28 252.765 li
122.29 252.18 li
146.676 238.099 li
146.599 210.54 li
cp
.964706 .968627 .960784 rgb
f
122.292 253.882 mo
121.28 253.294 li
121.197 224.033 li
122.209 224.621 li
122.292 253.882 li
cp
.329412 .737255 .85098 rgb
f
122.209 224.621 mo
121.197 224.033 li
146.664 209.329 li
147.676 209.917 li
122.209 224.621 li
cp
.670588 .913725 1 rgb
f
147.676 209.917 mo
147.759 239.178 li
122.292 253.882 li
122.209 224.621 li
147.676 209.917 li
cp
.52549 .85098 .964706 rgb
f
138.365 217.847 mo
138.368 218.863 li
139.247 219.373 li
139.244 218.357 li
138.365 217.847 li
cp
.572549 .588235 .603922 rgb
f
133.251 222.497 mo
133.253 223.512 li
140.423 219.373 li
140.42 218.357 li
133.251 222.497 li
cp
.827451 .811765 .811765 rgb
f
131.786 221.646 mo
131.789 222.661 li
133.253 223.512 li
133.251 222.497 li
131.786 221.646 li
cp
.717647 .698039 .698039 rgb
f
131.786 221.646 mo
133.251 222.497 li
140.42 218.357 li
138.955 217.506 li
138.365 217.847 li
139.244 218.357 li
133.254 221.815 li
132.376 221.305 li
131.786 221.646 li
cp
1 1 1 rgb
f
89.262 271.195 mo
71.2741 260.742 li
101.492 243.295 li
119.48 253.749 li
89.262 271.195 li
cp
.858824 .858824 .858824 rgb
f
89.2587 270.008 mo
71.2708 259.554 li
100.972 242.406 li
118.96 252.86 li
89.2587 270.008 li
cp
f
58.0082 289.239 mo
40.0204 278.786 li
71.2741 260.742 li
89.262 271.195 li
58.0082 289.239 li
cp
f
58.0153 291.741 mo
40.0275 281.287 li
40.0204 278.786 li
58.0082 289.239 li
58.0153 291.741 li
cp
.917647 .917647 .917647 rgb
f
88.2261 271.793 mo
70.2383 261.34 li
69.9147 147.213 li
87.9026 157.667 li
88.2261 271.793 li
cp
.533333 .533333 .533333 rgb
f
58.5217 287.753 mo
40.5338 277.3 li
70.2349 260.152 li
88.2228 270.605 li
58.5217 287.753 li
cp
.858824 .858824 .858824 rgb
f
118.96 252.86 mo
100.972 242.406 li
100.655 130.655 li
118.643 141.108 li
118.96 252.86 li
cp
.533333 .533333 .533333 rgb
f
89.2587 270.008 mo
88.9419 158.256 li
118.643 141.108 li
118.96 252.86 li
89.2587 270.008 li
cp
58.5217 287.753 mo
58.2049 176.002 li
87.906 158.854 li
88.2228 270.605 li
58.5217 287.753 li
cp
119.675 139.323 mo
87.9026 157.667 li
87.9026 157.667 li
57.1679 175.411 li
57.4915 289.538 li
58.0082 289.24 li
88.2262 271.793 li
88.2261 271.772 li
88.2262 271.793 li
89.2621 271.195 li
119.48 253.749 li
119.999 253.449 li
119.675 139.323 li
cp
.827451 .811765 .811765 rgb
f
119.48 253.749 mo
119.487 256.25 li
58.0153 291.741 li
58.0082 289.239 li
89.262 271.195 li
119.48 253.749 li
cp
.94902 .94902 .94902 rgb
f
119.675 139.323 mo
101.688 128.869 li
69.9149 147.213 li
69.9148 147.213 li
39.18 164.958 li
57.1679 175.411 li
87.9025 157.667 li
87.9026 157.667 li
119.675 139.323 li
cp
1 1 1 rgb
f
57.4915 289.538 mo
39.5036 279.085 li
39.1801 164.958 li
57.1679 175.411 li
57.4915 289.538 li
cp
.858824 .858824 .858824 rgb
f
90.5248 271.341 mo
89.4854 270.737 li
89.1644 157.495 li
90.2037 158.099 li
90.5248 271.341 li
cp
.329412 .737255 .85098 rgb
f
90.2037 158.099 mo
89.1644 157.495 li
120.285 139.527 li
121.324 140.131 li
90.2037 158.099 li
cp
.670588 .913725 1 rgb
f
121.324 140.131 mo
121.645 253.374 li
90.5248 271.341 li
90.2037 158.099 li
121.324 140.131 li
cp
.52549 .85098 .964706 rgb
f
59.0225 289.641 mo
57.9831 289.037 li
57.6621 175.795 li
58.7014 176.399 li
59.0225 289.641 li
cp
.329412 .737255 .85098 rgb
f
58.7014 176.399 mo
57.6621 175.795 li
88.785 157.826 li
89.8244 158.43 li
58.7014 176.399 li
cp
.670588 .913725 1 rgb
f
89.8244 158.43 mo
90.1454 271.672 li
59.0225 289.641 li
58.7014 176.399 li
89.8244 158.43 li
cp
.52549 .85098 .964706 rgb
f
86.6617 222.875 mo
87.5919 222.341 li
88.5226 222.875 li
87.5924 223.408 li
86.6617 222.875 li
cp
.572549 .588235 .603922 rgb
f
88.2133 215.742 mo
89.1435 215.209 li
89.1435 223.95 li
88.2133 224.484 li
88.2133 215.742 li
cp
.917647 .917647 .917647 rgb
f
86.6617 214.852 mo
87.5919 214.319 li
89.1435 215.209 li
88.2133 215.742 li
86.6617 214.852 li
cp
1 1 1 rgb
f
86.6617 214.852 mo
88.2133 215.742 li
88.2133 224.484 li
86.6617 223.594 li
86.6617 222.875 li
87.5924 223.408 li
87.5924 216.105 li
86.6617 215.572 li
86.6617 214.852 li
cp
.717647 .698039 .698039 rgb
f
91.6856 220.467 mo
92.6159 219.934 li
93.5465 220.467 li
92.6163 221.001 li
91.6856 220.467 li
cp
.572549 .588235 .603922 rgb
f
93.2372 213.335 mo
94.1674 212.801 li
94.1674 221.543 li
93.2372 222.076 li
93.2372 213.335 li
cp
.917647 .917647 .917647 rgb
f
91.6856 212.445 mo
92.6159 211.911 li
94.1674 212.801 li
93.2372 213.335 li
91.6856 212.445 li
cp
1 1 1 rgb
f
91.6856 212.445 mo
93.2372 213.335 li
93.2372 222.076 li
91.6856 221.186 li
91.6856 220.467 li
92.6163 221.001 li
92.6163 213.698 li
91.6856 213.164 li
91.6856 212.445 li
cp
.717647 .698039 .698039 rgb
f
187.021 169.162 mo
187.021 169.162 200.798 152.253 215.828 150.792 cv
215.828 150.792 227.727 153.819 232.215 161.856 cv
203.825 178.66 li
187.021 169.162 li
cp
.972549 .976471 .976471 rgb
f
187.021 169.162 mo
187.021 169.162 195.788 169.475 203.825 178.66 cv
203.825 178.66 193.909 176.573 187.021 169.162 cv
cp
.886275 .886275 .886275 rgb
f
232.215 161.856 mo
232.215 161.856 221.256 163.213 203.825 178.66 cv
203.825 178.66 218.229 172.606 232.215 161.856 cv
cp
f
200.52 330.725 mo
200.515 330.675 200.509 330.626 200.502 330.576 cv
200.494 330.522 200.484 330.467 200.474 330.412 cv
200.467 330.374 200.46 330.337 200.452 330.299 cv
200.444 330.264 200.435 330.229 200.426 330.194 cv
200.414 330.145 200.401 330.095 200.387 330.046 cv
200.379 330.018 200.37 329.99 200.361 329.962 cv
200.343 329.907 200.325 329.851 200.306 329.796 cv
200.297 329.774 200.289 329.751 200.281 329.728 cv
200.253 329.653 200.222 329.577 200.19 329.502 cv
200.186 329.493 200.182 329.484 200.178 329.475 cv
200.148 329.408 200.117 329.342 200.084 329.276 cv
200.073 329.255 200.063 329.235 200.052 329.214 cv
200.02 329.152 199.987 329.09 199.952 329.028 cv
199.945 329.016 199.939 329.004 199.932 328.993 cv
199.89 328.921 199.847 328.851 199.802 328.781 cv
199.789 328.761 199.775 328.742 199.762 328.722 cv
199.729 328.672 199.694 328.623 199.66 328.574 cv
199.641 328.548 199.622 328.523 199.603 328.497 cv
199.572 328.457 199.541 328.417 199.509 328.378 cv
199.483 328.345 199.456 328.312 199.429 328.28 cv
199.403 328.25 199.377 328.221 199.351 328.191 cv
199.306 328.141 199.26 328.092 199.213 328.045 cv
199.184 328.015 199.155 327.985 199.125 327.957 cv
199.102 327.935 199.079 327.913 199.055 327.892 cv
199.017 327.857 198.978 327.823 198.938 327.79 cv
198.915 327.77 198.892 327.75 198.868 327.731 cv
198.825 327.697 198.782 327.665 198.739 327.634 cv
198.717 327.619 198.697 327.603 198.676 327.588 cv
198.611 327.544 198.545 327.502 198.479 327.463 cv
198.391 327.412 198.305 327.371 198.22 327.334 cv
198.192 327.322 198.166 327.312 198.139 327.302 cv
198.09 327.283 198.041 327.266 197.993 327.252 cv
197.962 327.242 197.932 327.234 197.902 327.226 cv
197.873 327.219 197.845 327.213 197.817 327.208 cv
197.78 327.201 197.744 327.195 197.708 327.191 cv
197.687 327.189 197.666 327.187 197.646 327.185 cv
197.601 327.182 197.557 327.181 197.514 327.183 cv
197.483 327.183 li
197.431 327.186 197.381 327.192 197.331 327.202 cv
197.319 327.204 197.307 327.208 197.295 327.21 cv
197.256 327.219 197.218 327.23 197.181 327.243 cv
197.169 327.247 197.158 327.251 197.146 327.255 cv
197.1 327.274 197.054 327.295 197.011 327.32 cv
198.378 326.525 li
198.381 326.523 198.385 326.521 198.389 326.519 cv
198.423 326.5 198.457 326.483 198.493 326.468 cv
198.499 326.466 198.506 326.464 198.513 326.461 cv
198.524 326.457 198.536 326.453 198.548 326.449 cv
198.566 326.442 198.583 326.435 198.602 326.43 cv
198.621 326.424 198.641 326.421 198.661 326.416 cv
198.673 326.413 198.685 326.41 198.698 326.408 cv
198.704 326.406 198.711 326.404 198.711 326.404 cv
198.758 326.396 198.8 326.391 198.842 326.389 cv
198.85 326.388 li
198.85 326.388 198.87 326.389 198.881 326.388 cv
198.913 326.387 198.945 326.386 198.979 326.388 cv
198.99 326.388 199.001 326.39 199.012 326.391 cv
199.033 326.392 199.054 326.395 199.075 326.397 cv
199.094 326.399 199.113 326.4 199.132 326.403 cv
199.149 326.406 199.167 326.411 199.184 326.414 cv
199.212 326.419 199.24 326.425 199.268 326.432 cv
199.284 326.436 199.298 326.438 199.314 326.442 cv
199.329 326.446 199.345 326.453 199.36 326.457 cv
199.408 326.472 199.456 326.489 199.505 326.508 cv
199.523 326.514 199.539 326.518 199.557 326.525 cv
199.566 326.529 199.577 326.536 199.586 326.54 cv
199.671 326.577 199.757 326.618 199.845 326.669 cv
199.912 326.707 199.977 326.749 200.042 326.794 cv
200.063 326.809 200.084 326.824 200.105 326.84 cv
200.149 326.871 200.192 326.903 200.235 326.937 cv
200.258 326.956 200.282 326.976 200.305 326.996 cv
200.345 327.029 200.383 327.063 200.422 327.097 cv
200.445 327.119 200.469 327.141 200.492 327.163 cv
200.506 327.177 200.521 327.189 200.535 327.204 cv
200.551 327.218 200.565 327.235 200.58 327.25 cv
200.626 327.298 200.672 327.347 200.717 327.397 cv
200.732 327.413 200.747 327.428 200.761 327.444 cv
200.773 327.457 200.784 327.472 200.796 327.486 cv
200.823 327.518 200.85 327.551 200.876 327.584 cv
200.893 327.605 200.912 327.626 200.929 327.648 cv
200.943 327.666 200.956 327.685 200.969 327.703 cv
200.988 327.728 201.007 327.754 201.026 327.78 cv
201.039 327.798 201.053 327.816 201.066 327.834 cv
201.088 327.865 201.108 327.896 201.129 327.928 cv
201.142 327.947 201.156 327.967 201.169 327.987 cv
201.174 327.996 201.18 328.004 201.186 328.013 cv
201.222 328.07 201.258 328.128 201.292 328.187 cv
201.294 328.191 201.296 328.195 201.298 328.199 cv
201.305 328.21 201.312 328.222 201.318 328.234 cv
201.342 328.276 201.366 328.318 201.389 328.361 cv
201.399 328.38 201.409 328.4 201.419 328.42 cv
201.43 328.441 201.44 328.461 201.45 328.482 cv
201.459 328.5 201.469 328.518 201.478 328.536 cv
201.501 328.584 201.523 328.633 201.544 328.681 cv
201.548 328.69 201.553 328.699 201.556 328.708 cv
201.556 328.708 201.559 328.713 201.56 328.715 cv
201.586 328.777 201.612 328.838 201.635 328.901 cv
201.64 328.912 201.643 328.923 201.648 328.934 cv
201.656 328.957 201.664 328.979 201.672 329.002 cv
201.683 329.033 201.695 329.064 201.705 329.095 cv
201.713 329.119 201.72 329.143 201.727 329.168 cv
201.736 329.196 201.745 329.224 201.753 329.252 cv
201.758 329.27 201.765 329.288 201.77 329.305 cv
201.778 329.337 201.785 329.368 201.793 329.399 cv
201.802 329.435 201.811 329.47 201.818 329.505 cv
201.821 329.517 201.825 329.53 201.827 329.542 cv
201.833 329.567 201.836 329.592 201.841 329.617 cv
201.851 329.673 201.861 329.727 201.869 329.782 cv
201.871 329.797 201.875 329.813 201.877 329.828 cv
201.881 329.862 201.883 329.896 201.887 329.93 cv
201.889 329.955 201.892 329.979 201.894 330.003 cv
201.9 330.08 201.903 330.156 201.903 330.231 cv
201.901 330.801 201.725 331.223 201.433 331.464 cv
201.391 331.498 201.347 331.529 201.301 331.556 cv
199.934 332.35 li
200.305 332.134 200.535 331.676 200.536 331.025 cv
200.536 330.95 200.533 330.874 200.527 330.797 cv
200.525 330.773 200.523 330.749 200.52 330.725 cv
cp
.254902 .25098 .258824 rgb
f
198.479 327.463 mo
197.34 326.806 196.413 327.334 196.409 328.643 cv
196.405 329.953 197.326 331.548 198.465 332.206 cv
199.606 332.864 200.533 332.336 200.536 331.025 cv
200.54 329.717 199.619 328.122 198.479 327.463 cv
cp
.345098 .34902 .356863 rgb
f
198.375 332.065 mo
198.37 332.016 198.364 331.966 198.357 331.917 cv
198.349 331.862 198.339 331.808 198.329 331.752 cv
198.322 331.715 198.315 331.677 198.307 331.64 cv
198.299 331.605 198.29 331.569 198.281 331.534 cv
198.269 331.485 198.256 331.436 198.242 331.387 cv
198.234 331.359 198.225 331.331 198.216 331.302 cv
198.198 331.247 198.18 331.192 198.16 331.137 cv
198.152 331.114 198.144 331.092 198.136 331.069 cv
198.108 330.993 198.077 330.918 198.045 330.843 cv
198.041 330.834 198.037 330.825 198.033 330.816 cv
198.003 330.749 197.971 330.683 197.938 330.616 cv
197.928 330.596 197.918 330.575 197.907 330.555 cv
197.875 330.493 197.842 330.43 197.806 330.369 cv
197.8 330.357 197.794 330.345 197.787 330.333 cv
197.745 330.262 197.702 330.191 197.657 330.122 cv
197.644 330.102 197.63 330.082 197.617 330.063 cv
197.584 330.013 197.55 329.963 197.514 329.915 cv
197.496 329.889 197.477 329.863 197.457 329.838 cv
197.427 329.797 197.396 329.758 197.364 329.719 cv
197.338 329.686 197.311 329.653 197.284 329.621 cv
197.258 329.59 197.232 329.561 197.205 329.532 cv
197.16 329.482 197.115 329.433 197.068 329.385 cv
197.039 329.356 197.01 329.326 196.98 329.298 cv
196.957 329.275 196.934 329.254 196.91 329.232 cv
196.872 329.198 196.833 329.163 196.793 329.13 cv
196.77 329.111 196.747 329.091 196.723 329.072 cv
196.68 329.038 196.637 329.006 196.594 328.974 cv
196.572 328.959 196.552 328.943 196.531 328.929 cv
196.466 328.884 196.4 328.842 196.334 328.804 cv
196.246 328.753 196.16 328.712 196.075 328.675 cv
196.047 328.663 196.021 328.653 195.994 328.643 cv
195.945 328.623 195.896 328.607 195.848 328.592 cv
195.817 328.583 195.787 328.574 195.757 328.567 cv
195.728 328.56 195.7 328.554 195.672 328.549 cv
195.635 328.542 195.599 328.536 195.563 328.532 cv
195.542 328.53 195.521 328.527 195.501 328.526 cv
195.456 328.523 195.412 328.522 195.369 328.523 cv
195.338 328.523 li
195.286 328.526 195.235 328.533 195.186 328.542 cv
195.174 328.545 195.162 328.548 195.15 328.551 cv
195.111 328.56 195.073 328.571 195.036 328.584 cv
195.024 328.588 195.013 328.592 195.001 328.596 cv
194.955 328.614 194.909 328.635 194.866 328.66 cv
196.232 327.866 li
196.236 327.864 196.24 327.862 196.244 327.86 cv
196.277 327.841 196.312 327.824 196.348 327.809 cv
196.354 327.806 196.361 327.804 196.368 327.802 cv
196.379 327.797 196.391 327.794 196.403 327.79 cv
196.421 327.783 196.438 327.776 196.457 327.77 cv
196.476 327.765 196.496 327.761 196.516 327.757 cv
196.528 327.754 196.54 327.751 196.553 327.748 cv
196.559 327.747 196.566 327.745 196.572 327.744 cv
196.613 327.737 196.655 327.732 196.697 327.729 cv
196.702 327.729 li
196.736 327.729 li
196.768 327.728 196.8 327.727 196.833 327.728 cv
196.845 327.729 196.856 327.731 196.856 327.731 cv
196.888 327.733 196.909 327.735 196.93 327.738 cv
196.949 327.74 196.968 327.74 196.987 327.743 cv
197.004 327.746 197.022 327.751 197.039 327.754 cv
197.067 327.76 197.095 327.766 197.123 327.773 cv
197.139 327.776 197.153 327.778 197.169 327.782 cv
197.184 327.786 197.2 327.794 197.215 327.798 cv
197.263 327.812 197.311 327.829 197.36 327.848 cv
197.378 327.855 197.394 327.859 197.412 327.866 cv
197.421 327.87 197.432 327.877 197.441 327.881 cv
197.526 327.917 197.612 327.959 197.7 328.01 cv
197.767 328.048 197.832 328.09 197.897 328.135 cv
197.918 328.149 197.939 328.165 197.96 328.18 cv
198.004 328.212 198.047 328.244 198.09 328.278 cv
198.113 328.297 198.137 328.317 198.16 328.336 cv
198.199 328.369 198.238 328.403 198.277 328.438 cv
198.3 328.46 198.324 328.481 198.347 328.503 cv
198.361 328.517 198.376 328.53 198.39 328.544 cv
198.406 328.559 198.42 328.576 198.435 328.591 cv
198.481 328.639 198.527 328.688 198.572 328.738 cv
198.587 328.754 198.602 328.768 198.616 328.785 cv
198.628 328.798 198.639 328.813 198.65 328.826 cv
198.678 328.859 198.704 328.891 198.731 328.925 cv
198.748 328.946 198.767 328.967 198.784 328.989 cv
198.798 329.007 198.811 329.025 198.824 329.043 cv
198.843 329.069 198.862 329.095 198.881 329.121 cv
198.894 329.139 198.908 329.156 198.921 329.175 cv
198.943 329.205 198.963 329.237 198.983 329.268 cv
198.997 329.288 199.01 329.308 199.024 329.328 cv
199.029 329.337 199.035 329.345 199.04 329.353 cv
199.077 329.411 199.113 329.469 199.147 329.528 cv
199.149 329.532 199.151 329.535 199.153 329.539 cv
199.16 329.551 199.166 329.563 199.173 329.575 cv
199.197 329.617 199.221 329.659 199.244 329.701 cv
199.254 329.721 199.264 329.741 199.274 329.761 cv
199.285 329.781 199.295 329.802 199.305 329.823 cv
199.314 329.841 199.324 329.859 199.333 329.877 cv
199.356 329.925 199.378 329.973 199.399 330.022 cv
199.403 330.031 199.408 330.04 199.411 330.048 cv
199.412 330.051 199.414 330.053 199.415 330.056 cv
199.441 330.117 199.467 330.179 199.49 330.241 cv
199.495 330.252 199.498 330.263 199.503 330.275 cv
199.511 330.297 199.519 330.32 199.527 330.343 cv
199.538 330.374 199.55 330.405 199.56 330.436 cv
199.568 330.46 199.575 330.484 199.583 330.508 cv
199.591 330.536 199.6 330.565 199.608 330.593 cv
199.613 330.611 199.62 330.628 199.625 330.646 cv
199.633 330.677 199.64 330.709 199.647 330.74 cv
199.657 330.775 199.666 330.811 199.673 330.846 cv
199.676 330.858 199.68 330.87 199.682 330.883 cv
199.688 330.908 199.691 330.933 199.695 330.958 cv
199.706 331.013 199.716 331.068 199.724 331.123 cv
199.726 331.138 199.73 331.153 199.731 331.168 cv
199.736 331.203 199.738 331.237 199.742 331.271 cv
199.744 331.295 199.747 331.32 199.749 331.344 cv
199.755 331.421 199.758 331.497 199.758 331.572 cv
199.756 332.142 199.58 332.563 199.288 332.804 cv
199.246 332.839 199.202 332.869 199.156 332.896 cv
197.789 333.691 li
198.16 333.475 198.39 333.017 198.391 332.366 cv
198.391 332.291 198.388 332.215 198.382 332.138 cv
198.38 332.114 198.378 332.09 198.375 332.065 cv
cp
.254902 .25098 .258824 rgb
f
196.334 328.804 mo
195.195 328.146 194.268 328.674 194.264 329.983 cv
194.26 331.294 195.181 332.889 196.32 333.546 cv
197.461 334.205 198.388 333.677 198.391 332.366 cv
198.395 331.057 197.474 329.462 196.334 328.804 cv
cp
.345098 .34902 .356863 rgb
f
140.502 330.27 mo
140.507 330.221 140.513 330.172 140.52 330.122 cv
140.528 330.068 140.537 330.014 140.548 329.959 cv
140.555 329.922 140.561 329.885 140.57 329.848 cv
140.577 329.813 140.587 329.778 140.595 329.743 cv
140.608 329.695 140.62 329.646 140.634 329.597 cv
140.643 329.569 140.651 329.541 140.66 329.513 cv
140.677 329.458 140.695 329.404 140.715 329.349 cv
140.723 329.327 140.731 329.304 140.739 329.282 cv
140.767 329.207 140.797 329.132 140.83 329.057 cv
140.833 329.049 140.838 329.04 140.842 329.031 cv
140.871 328.965 140.902 328.899 140.935 328.833 cv
140.945 328.813 140.955 328.793 140.966 328.772 cv
140.998 328.71 141.031 328.648 141.066 328.588 cv
141.072 328.576 141.078 328.564 141.085 328.553 cv
141.127 328.481 141.17 328.412 141.214 328.343 cv
141.227 328.323 141.24 328.304 141.254 328.284 cv
141.287 328.235 141.321 328.186 141.355 328.138 cv
141.374 328.112 141.393 328.086 141.412 328.061 cv
141.442 328.021 141.473 327.982 141.504 327.943 cv
141.53 327.91 141.557 327.878 141.584 327.846 cv
141.609 327.816 141.635 327.787 141.662 327.758 cv
141.706 327.708 141.752 327.66 141.798 327.612 cv
141.827 327.583 141.856 327.554 141.885 327.525 cv
141.908 327.504 141.931 327.482 141.954 327.461 cv
141.993 327.426 142.031 327.393 142.07 327.36 cv
142.093 327.34 142.117 327.321 142.14 327.302 cv
142.182 327.268 142.225 327.236 142.269 327.205 cv
142.289 327.19 142.31 327.174 142.331 327.16 cv
142.395 327.116 142.46 327.074 142.526 327.036 cv
142.613 326.986 142.698 326.945 142.783 326.908 cv
142.81 326.897 142.836 326.887 142.863 326.876 cv
142.912 326.857 142.96 326.841 143.007 326.827 cv
143.038 326.817 143.068 326.808 143.098 326.801 cv
143.126 326.794 143.154 326.788 143.182 326.783 cv
143.218 326.776 143.255 326.771 143.29 326.767 cv
143.311 326.764 143.331 326.762 143.352 326.76 cv
143.396 326.757 143.44 326.757 143.482 326.758 cv
143.482 326.758 143.503 326.758 143.513 326.758 cv
143.565 326.761 143.615 326.768 143.664 326.777 cv
143.676 326.78 143.688 326.783 143.7 326.785 cv
143.738 326.794 143.776 326.805 143.813 326.818 cv
143.824 326.822 143.836 326.825 143.847 326.83 cv
143.893 326.848 143.938 326.869 143.981 326.894 cv
142.626 326.106 li
142.622 326.104 142.619 326.102 142.615 326.1 cv
142.582 326.081 142.548 326.065 142.512 326.05 cv
142.506 326.047 142.499 326.045 142.492 326.043 cv
142.481 326.038 142.469 326.034 142.458 326.03 cv
142.44 326.024 142.422 326.017 142.404 326.012 cv
142.385 326.006 142.365 326.003 142.345 325.998 cv
142.333 325.995 142.321 325.992 142.309 325.99 cv
142.302 325.988 142.296 325.986 142.296 325.986 cv
142.249 325.978 142.208 325.973 142.166 325.971 cv
142.158 325.971 li
142.128 325.97 li
142.096 325.97 142.063 325.968 142.03 325.97 cv
142.02 325.97 142.008 325.972 141.997 325.973 cv
141.977 325.974 141.956 325.977 141.935 325.979 cv
141.916 325.981 141.897 325.982 141.878 325.985 cv
141.861 325.987 141.844 325.992 141.827 325.996 cv
141.799 326.001 141.771 326.007 141.743 326.014 cv
141.728 326.017 141.713 326.019 141.698 326.023 cv
141.683 326.027 141.667 326.035 141.652 326.039 cv
141.605 326.053 141.557 326.07 141.508 326.089 cv
141.491 326.096 141.475 326.099 141.457 326.106 cv
141.448 326.11 141.437 326.117 141.428 326.121 cv
141.344 326.157 141.258 326.199 141.171 326.249 cv
141.105 326.287 141.04 326.329 140.976 326.373 cv
140.955 326.387 140.934 326.403 140.914 326.418 cv
140.87 326.449 140.828 326.481 140.785 326.515 cv
140.762 326.533 140.739 326.553 140.715 326.573 cv
140.676 326.605 140.638 326.639 140.6 326.674 cv
140.576 326.695 140.553 326.716 140.53 326.738 cv
140.516 326.752 140.501 326.765 140.487 326.779 cv
140.472 326.793 140.458 326.81 140.443 326.825 cv
140.397 326.872 140.351 326.921 140.307 326.971 cv
140.292 326.987 140.277 327.001 140.263 327.017 cv
140.251 327.03 140.241 327.045 140.229 327.059 cv
140.202 327.09 140.176 327.123 140.149 327.156 cv
140.132 327.177 140.114 327.197 140.097 327.219 cv
140.083 327.237 140.071 327.256 140.057 327.274 cv
140.038 327.299 140.019 327.325 140.001 327.35 cv
139.987 327.368 139.974 327.386 139.961 327.404 cv
139.94 327.434 139.919 327.466 139.899 327.497 cv
139.886 327.516 139.872 327.536 139.859 327.556 cv
139.854 327.564 139.848 327.572 139.842 327.581 cv
139.806 327.638 139.771 327.695 139.737 327.754 cv
139.734 327.758 139.733 327.761 139.73 327.765 cv
139.724 327.777 139.717 327.789 139.711 327.8 cv
139.687 327.842 139.663 327.884 139.641 327.926 cv
139.63 327.946 139.621 327.965 139.611 327.985 cv
139.6 328.005 139.59 328.026 139.58 328.046 cv
139.571 328.064 139.561 328.082 139.553 328.1 cv
139.53 328.148 139.508 328.196 139.487 328.244 cv
139.483 328.252 139.478 328.261 139.475 328.27 cv
139.475 328.27 139.472 328.275 139.471 328.278 cv
139.445 328.338 139.42 328.4 139.396 328.461 cv
139.392 328.472 139.388 328.483 139.384 328.494 cv
139.376 328.517 139.368 328.539 139.36 328.562 cv
139.349 328.593 139.337 328.623 139.327 328.654 cv
139.319 328.678 139.313 328.702 139.305 328.726 cv
139.296 328.754 139.288 328.782 139.279 328.81 cv
139.274 328.827 139.268 328.845 139.264 328.862 cv
139.255 328.893 139.248 328.925 139.241 328.956 cv
139.232 328.991 139.223 329.026 139.215 329.061 cv
139.212 329.073 139.208 329.085 139.206 329.097 cv
139.201 329.122 139.198 329.147 139.193 329.172 cv
139.183 329.227 139.173 329.281 139.165 329.335 cv
139.163 329.35 139.159 329.366 139.157 329.38 cv
139.153 329.414 139.15 329.448 139.147 329.482 cv
139.145 329.506 139.142 329.53 139.14 329.554 cv
139.135 329.63 139.131 329.706 139.131 329.78 cv
139.133 330.345 139.307 330.763 139.597 331.002 cv
139.638 331.036 139.682 331.067 139.728 331.093 cv
141.083 331.881 li
140.716 331.667 140.488 331.213 140.486 330.568 cv
140.486 330.493 140.489 330.418 140.495 330.342 cv
140.497 330.318 140.5 330.294 140.502 330.27 cv
cp
.254902 .25098 .258824 rgb
f
142.526 327.036 mo
143.655 326.384 144.574 326.908 144.578 328.205 cv
144.581 329.505 143.668 331.086 142.539 331.738 cv
141.409 332.391 140.49 331.867 140.486 330.568 cv
140.482 329.27 141.395 327.689 142.526 327.036 cv
cp
.345098 .34902 .356863 rgb
f
142.629 331.599 mo
142.634 331.55 142.639 331.501 142.647 331.452 cv
142.654 331.398 142.664 331.343 142.675 331.289 cv
142.682 331.251 142.688 331.214 142.696 331.177 cv
142.704 331.142 142.713 331.107 142.722 331.072 cv
142.734 331.024 142.747 330.975 142.761 330.926 cv
142.769 330.898 142.778 330.87 142.787 330.842 cv
142.804 330.788 142.822 330.733 142.842 330.678 cv
142.85 330.656 142.857 330.633 142.866 330.611 cv
142.894 330.536 142.924 330.461 142.956 330.387 cv
142.96 330.378 142.964 330.369 142.968 330.36 cv
142.998 330.294 143.029 330.228 143.062 330.162 cv
143.072 330.142 143.082 330.122 143.092 330.102 cv
143.124 330.039 143.158 329.978 143.192 329.917 cv
143.199 329.905 143.205 329.893 143.212 329.882 cv
143.253 329.811 143.296 329.741 143.341 329.672 cv
143.354 329.652 143.367 329.633 143.38 329.613 cv
143.413 329.564 143.447 329.515 143.482 329.467 cv
143.501 329.441 143.52 329.416 143.538 329.39 cv
143.569 329.35 143.6 329.311 143.631 329.272 cv
143.657 329.24 143.684 329.207 143.71 329.175 cv
143.736 329.145 143.762 329.116 143.788 329.087 cv
143.833 329.037 143.878 328.989 143.925 328.942 cv
143.954 328.912 143.982 328.883 144.012 328.855 cv
144.035 328.833 144.058 328.812 144.081 328.79 cv
144.119 328.756 144.158 328.722 144.197 328.689 cv
144.22 328.67 144.243 328.65 144.267 328.631 cv
144.309 328.598 144.352 328.566 144.395 328.534 cv
144.416 328.52 144.437 328.504 144.457 328.489 cv
144.522 328.445 144.587 328.403 144.653 328.365 cv
144.74 328.315 144.825 328.274 144.909 328.238 cv
144.936 328.226 144.963 328.216 144.99 328.205 cv
145.038 328.186 145.087 328.17 145.134 328.156 cv
145.164 328.146 145.195 328.138 145.225 328.13 cv
145.253 328.123 145.281 328.118 145.308 328.112 cv
145.345 328.105 145.381 328.1 145.417 328.096 cv
145.437 328.093 145.458 328.091 145.478 328.089 cv
145.523 328.086 145.566 328.086 145.609 328.087 cv
145.639 328.087 li
145.691 328.09 145.742 328.097 145.791 328.106 cv
145.803 328.109 145.815 328.112 145.826 328.115 cv
145.865 328.123 145.903 328.134 145.939 328.147 cv
145.951 328.151 145.962 328.155 145.974 328.159 cv
146.02 328.178 146.065 328.198 146.108 328.223 cv
144.753 327.436 li
144.749 327.434 144.745 327.431 144.742 327.429 cv
144.709 327.411 144.674 327.394 144.639 327.379 cv
144.632 327.376 144.625 327.374 144.619 327.372 cv
144.607 327.367 144.596 327.364 144.584 327.36 cv
144.566 327.353 144.549 327.346 144.531 327.341 cv
144.512 327.335 144.491 327.332 144.472 327.327 cv
144.46 327.325 144.448 327.321 144.435 327.319 cv
144.429 327.318 144.423 327.316 144.416 327.314 cv
144.376 327.307 144.334 327.303 144.292 327.3 cv
144.285 327.3 li
144.285 327.3 144.264 327.3 144.254 327.3 cv
144.222 327.299 144.19 327.297 144.157 327.299 cv
144.123 327.302 li
144.103 327.303 144.082 327.306 144.062 327.308 cv
144.042 327.311 144.024 327.311 144.005 327.314 cv
143.988 327.317 143.97 327.322 143.954 327.325 cv
143.926 327.33 143.898 327.336 143.87 327.343 cv
143.854 327.346 143.84 327.348 143.824 327.352 cv
143.81 327.356 143.794 327.364 143.779 327.368 cv
143.731 327.382 143.683 327.399 143.635 327.418 cv
143.618 327.425 143.601 327.428 143.584 327.435 cv
143.574 327.439 143.564 327.446 143.555 327.45 cv
143.47 327.487 143.385 327.528 143.298 327.578 cv
143.232 327.616 143.167 327.658 143.103 327.702 cv
143.082 327.716 143.061 327.732 143.04 327.747 cv
142.997 327.778 142.954 327.81 142.912 327.844 cv
142.888 327.863 142.865 327.882 142.842 327.902 cv
142.803 327.934 142.764 327.968 142.726 328.003 cv
142.703 328.024 142.68 328.045 142.657 328.068 cv
142.642 328.081 142.628 328.094 142.614 328.108 cv
142.598 328.123 142.585 328.139 142.57 328.154 cv
142.523 328.202 142.478 328.25 142.433 328.3 cv
142.419 328.316 142.404 328.33 142.39 328.346 cv
142.378 328.359 142.367 328.374 142.356 328.388 cv
142.329 328.42 142.302 328.452 142.276 328.485 cv
142.259 328.506 142.24 328.527 142.224 328.548 cv
142.21 328.566 142.197 328.585 142.184 328.603 cv
142.164 328.628 142.146 328.654 142.127 328.679 cv
142.114 328.697 142.1 328.715 142.087 328.733 cv
142.066 328.763 142.046 328.795 142.025 328.826 cv
142.012 328.845 141.999 328.865 141.986 328.885 cv
141.98 328.893 141.974 328.902 141.969 328.91 cv
141.932 328.967 141.897 329.025 141.863 329.083 cv
141.861 329.087 141.859 329.091 141.857 329.094 cv
141.85 329.106 141.844 329.118 141.837 329.129 cv
141.814 329.171 141.79 329.213 141.767 329.255 cv
141.757 329.275 141.748 329.294 141.738 329.314 cv
141.727 329.334 141.717 329.355 141.706 329.375 cv
141.698 329.393 141.688 329.411 141.679 329.429 cv
141.656 329.477 141.635 329.525 141.613 329.573 cv
141.609 329.582 141.605 329.59 141.601 329.599 cv
141.6 329.602 141.599 329.604 141.598 329.607 cv
141.572 329.667 141.546 329.729 141.523 329.79 cv
141.519 329.801 141.515 329.812 141.511 329.823 cv
141.502 329.846 141.495 329.869 141.487 329.891 cv
141.476 329.922 141.464 329.952 141.454 329.983 cv
141.446 330.007 141.439 330.031 141.432 330.055 cv
141.423 330.083 141.414 330.111 141.406 330.139 cv
141.401 330.157 141.395 330.174 141.39 330.191 cv
141.382 330.223 141.375 330.254 141.367 330.285 cv
141.358 330.32 141.349 330.355 141.341 330.39 cv
141.339 330.402 141.335 330.414 141.333 330.426 cv
141.327 330.451 141.324 330.476 141.32 330.501 cv
141.309 330.556 141.299 330.61 141.292 330.664 cv
141.29 330.679 141.286 330.695 141.284 330.709 cv
141.279 330.744 141.277 330.777 141.274 330.811 cv
141.271 330.835 141.268 330.859 141.267 330.884 cv
141.261 330.96 141.257 331.035 141.258 331.11 cv
141.259 331.674 141.434 332.093 141.723 332.331 cv
141.765 332.365 141.809 332.396 141.855 332.422 cv
143.209 333.21 li
142.842 332.996 142.614 332.542 142.613 331.897 cv
142.612 331.823 142.616 331.747 142.622 331.671 cv
142.624 331.647 142.626 331.623 142.629 331.599 cv
cp
.254902 .25098 .258824 rgb
f
144.653 328.365 mo
145.782 327.713 146.701 328.237 146.704 329.534 cv
146.708 330.834 145.795 332.415 144.666 333.067 cv
143.535 333.72 142.616 333.196 142.613 331.897 cv
142.609 330.599 143.522 329.018 144.653 328.365 cv
cp
.345098 .34902 .356863 rgb
f
167.813 345.13 mo
167.818 345.081 167.824 345.032 167.831 344.983 cv
167.839 344.929 167.849 344.874 167.859 344.82 cv
167.866 344.783 167.873 344.746 167.881 344.708 cv
167.889 344.674 167.898 344.639 167.907 344.604 cv
167.919 344.555 167.931 344.506 167.946 344.458 cv
167.954 344.43 167.963 344.402 167.971 344.374 cv
167.989 344.319 168.007 344.264 168.026 344.21 cv
168.034 344.187 168.042 344.165 168.05 344.143 cv
168.079 344.067 168.109 343.992 168.141 343.918 cv
168.145 343.909 168.149 343.901 168.153 343.892 cv
168.182 343.825 168.214 343.759 168.246 343.694 cv
168.256 343.673 168.266 343.653 168.277 343.633 cv
168.309 343.571 168.342 343.509 168.377 343.448 cv
168.384 343.437 168.39 343.425 168.396 343.413 cv
168.438 343.342 168.481 343.272 168.525 343.204 cv
168.538 343.184 168.552 343.164 168.565 343.145 cv
168.598 343.095 168.632 343.046 168.667 342.998 cv
168.685 342.972 168.704 342.947 168.723 342.922 cv
168.753 342.882 168.784 342.842 168.816 342.803 cv
168.842 342.771 168.868 342.738 168.895 342.707 cv
168.921 342.677 168.947 342.648 168.973 342.618 cv
169.018 342.569 169.063 342.52 169.109 342.473 cv
169.138 342.444 169.167 342.414 169.196 342.386 cv
169.219 342.364 169.242 342.343 169.266 342.322 cv
169.304 342.287 169.342 342.253 169.382 342.22 cv
169.405 342.201 169.428 342.181 169.451 342.163 cv
169.494 342.129 169.537 342.097 169.58 342.066 cv
169.601 342.051 169.621 342.035 169.642 342.021 cv
169.706 341.976 169.771 341.935 169.837 341.897 cv
169.925 341.846 170.01 341.805 170.094 341.769 cv
170.121 341.757 170.148 341.747 170.174 341.737 cv
170.223 341.718 170.271 341.701 170.318 341.687 cv
170.349 341.678 170.379 341.669 170.409 341.662 cv
170.437 341.655 170.466 341.649 170.493 341.644 cv
170.53 341.637 170.566 341.631 170.601 341.627 cv
170.622 341.625 170.643 341.622 170.663 341.621 cv
170.708 341.618 170.751 341.617 170.794 341.618 cv
170.794 341.618 170.814 341.618 170.824 341.619 cv
170.876 341.621 170.926 341.628 170.975 341.638 cv
170.987 341.64 170.999 341.643 171.011 341.646 cv
171.05 341.655 171.087 341.665 171.124 341.678 cv
171.135 341.683 171.147 341.686 171.158 341.691 cv
171.204 341.709 171.25 341.73 171.292 341.754 cv
169.938 340.967 li
169.934 340.965 169.93 340.963 169.926 340.961 cv
169.893 340.942 169.859 340.925 169.823 340.91 cv
169.817 340.908 169.81 340.906 169.803 340.903 cv
169.792 340.899 169.78 340.895 169.769 340.891 cv
169.751 340.885 169.734 340.878 169.716 340.872 cv
169.696 340.867 169.676 340.863 169.656 340.859 cv
169.644 340.856 169.633 340.853 169.62 340.85 cv
169.614 340.849 169.607 340.847 169.607 340.847 cv
169.56 340.839 169.519 340.834 169.477 340.831 cv
169.469 340.831 li
169.439 340.831 li
169.407 340.83 169.375 340.829 169.342 340.83 cv
169.331 340.831 169.319 340.833 169.308 340.834 cv
169.288 340.835 169.267 340.837 169.246 340.84 cv
169.227 340.842 169.209 340.843 169.189 340.845 cv
169.173 340.848 169.155 340.853 169.138 340.856 cv
169.111 340.861 169.083 340.867 169.055 340.874 cv
169.039 340.878 169.025 340.88 169.009 340.884 cv
168.994 340.888 168.979 340.895 168.964 340.9 cv
168.916 340.914 168.868 340.931 168.819 340.949 cv
168.802 340.956 168.786 340.96 168.769 340.967 cv
168.759 340.971 168.749 340.977 168.739 340.981 cv
168.655 341.018 168.57 341.059 168.482 341.109 cv
168.417 341.147 168.352 341.189 168.287 341.233 cv
168.266 341.248 168.246 341.263 168.225 341.279 cv
168.182 341.31 168.139 341.342 168.096 341.375 cv
168.073 341.394 168.05 341.414 168.026 341.433 cv
167.987 341.466 167.949 341.499 167.911 341.534 cv
167.888 341.555 167.864 341.577 167.841 341.599 cv
167.827 341.613 167.812 341.625 167.798 341.639 cv
167.783 341.654 167.769 341.671 167.755 341.686 cv
167.708 341.733 167.662 341.781 167.618 341.831 cv
167.604 341.847 167.588 341.862 167.574 341.878 cv
167.563 341.891 167.552 341.906 167.54 341.919 cv
167.513 341.951 167.487 341.983 167.461 342.016 cv
167.443 342.038 167.425 342.058 167.408 342.08 cv
167.395 342.098 167.382 342.116 167.368 342.134 cv
167.349 342.159 167.33 342.185 167.312 342.211 cv
167.299 342.229 167.285 342.246 167.272 342.265 cv
167.251 342.295 167.231 342.326 167.21 342.357 cv
167.197 342.377 167.183 342.396 167.17 342.416 cv
167.165 342.425 167.159 342.433 167.154 342.441 cv
167.117 342.498 167.082 342.556 167.048 342.614 cv
167.046 342.618 167.044 342.622 167.042 342.626 cv
167.035 342.637 167.029 342.649 167.022 342.661 cv
166.998 342.703 166.974 342.745 166.952 342.787 cv
166.942 342.806 166.932 342.826 166.922 342.845 cv
166.912 342.866 166.901 342.886 166.891 342.906 cv
166.882 342.925 166.872 342.942 166.864 342.961 cv
166.841 343.008 166.819 343.056 166.798 343.104 cv
166.794 343.113 166.79 343.122 166.786 343.131 cv
166.786 343.131 166.784 343.136 166.782 343.138 cv
166.756 343.199 166.731 343.26 166.708 343.322 cv
166.703 343.333 166.7 343.344 166.696 343.355 cv
166.687 343.377 166.679 343.4 166.671 343.423 cv
166.66 343.453 166.649 343.484 166.638 343.514 cv
166.63 343.539 166.624 343.563 166.616 343.586 cv
166.608 343.615 166.599 343.642 166.591 343.67 cv
166.586 343.688 166.58 343.705 166.575 343.723 cv
166.566 343.754 166.56 343.785 166.552 343.816 cv
166.543 343.851 166.534 343.886 166.526 343.921 cv
166.523 343.933 166.52 343.945 166.517 343.958 cv
166.512 343.983 166.509 344.007 166.504 344.033 cv
166.494 344.087 166.484 344.141 166.476 344.196 cv
166.474 344.211 166.47 344.226 166.469 344.241 cv
166.464 344.275 166.462 344.309 166.459 344.343 cv
166.456 344.367 166.453 344.391 166.452 344.415 cv
166.446 344.491 166.442 344.566 166.442 344.641 cv
166.444 345.206 166.619 345.624 166.908 345.863 cv
166.95 345.897 166.993 345.927 167.039 345.954 cv
168.394 346.741 li
168.027 346.528 167.799 346.074 167.797 345.428 cv
167.797 345.354 167.801 345.278 167.806 345.202 cv
167.808 345.178 167.811 345.154 167.813 345.13 cv
cp
.254902 .25098 .258824 rgb
f
169.837 341.897 mo
170.967 341.245 171.885 341.768 171.889 343.066 cv
171.893 344.365 170.98 345.946 169.85 346.598 cv
168.72 347.251 167.801 346.728 167.797 345.428 cv
167.794 344.131 168.707 342.55 169.837 341.897 cv
cp
.345098 .34902 .356863 rgb
f
169.94 346.459 mo
169.945 346.411 169.951 346.361 169.958 346.312 cv
169.966 346.258 169.975 346.204 169.986 346.149 cv
169.993 346.112 169.999 346.075 170.008 346.037 cv
170.015 346.003 170.025 345.968 170.033 345.933 cv
170.046 345.884 170.058 345.836 170.072 345.787 cv
170.081 345.759 170.089 345.731 170.098 345.703 cv
170.115 345.648 170.133 345.594 170.153 345.539 cv
170.161 345.516 170.169 345.494 170.177 345.472 cv
170.205 345.396 170.235 345.322 170.268 345.247 cv
170.271 345.238 170.276 345.23 170.28 345.221 cv
170.309 345.154 170.34 345.088 170.373 345.023 cv
170.383 345.003 170.393 344.982 170.404 344.962 cv
170.436 344.9 170.469 344.838 170.504 344.777 cv
170.51 344.766 170.516 344.754 170.523 344.742 cv
170.564 344.671 170.607 344.601 170.652 344.533 cv
170.665 344.513 170.678 344.493 170.692 344.474 cv
170.725 344.424 170.759 344.375 170.793 344.327 cv
170.812 344.301 170.831 344.276 170.85 344.251 cv
170.88 344.211 170.911 344.171 170.942 344.133 cv
170.968 344.1 170.995 344.068 171.022 344.036 cv
171.047 344.006 171.073 343.977 171.1 343.948 cv
171.144 343.898 171.19 343.849 171.236 343.802 cv
171.265 343.773 171.294 343.743 171.323 343.715 cv
171.346 343.693 171.369 343.672 171.392 343.651 cv
171.43 343.616 171.469 343.582 171.508 343.55 cv
171.531 343.53 171.555 343.51 171.578 343.492 cv
171.62 343.458 171.663 343.426 171.706 343.395 cv
171.727 343.38 171.748 343.364 171.769 343.35 cv
171.833 343.306 171.898 343.264 171.964 343.226 cv
172.051 343.175 172.136 343.135 172.221 343.098 cv
172.248 343.087 172.274 343.076 172.301 343.066 cv
172.35 343.047 172.398 343.031 172.445 343.016 cv
172.476 343.007 172.506 342.998 172.536 342.991 cv
172.564 342.984 172.592 342.978 172.62 342.973 cv
172.656 342.966 172.692 342.96 172.728 342.956 cv
172.749 342.954 172.769 342.952 172.79 342.95 cv
172.834 342.947 172.878 342.946 172.92 342.948 cv
172.951 342.948 li
173.003 342.951 173.053 342.957 173.102 342.967 cv
173.114 342.969 173.126 342.972 173.138 342.975 cv
173.176 342.984 173.214 342.995 173.251 343.008 cv
173.262 343.012 173.273 343.015 173.285 343.02 cv
173.331 343.038 173.376 343.059 173.419 343.084 cv
172.064 342.296 li
172.06 342.294 172.057 342.292 172.053 342.29 cv
172.02 342.271 171.986 342.254 171.95 342.239 cv
171.944 342.237 171.937 342.235 171.93 342.232 cv
171.919 342.228 171.907 342.224 171.895 342.22 cv
171.878 342.214 171.86 342.207 171.842 342.201 cv
171.823 342.196 171.803 342.192 171.783 342.188 cv
171.771 342.185 171.759 342.182 171.747 342.179 cv
171.74 342.178 171.734 342.176 171.727 342.175 cv
171.687 342.168 171.646 342.163 171.604 342.161 cv
171.596 342.161 li
171.596 342.161 171.576 342.161 171.566 342.16 cv
171.533 342.159 171.501 342.158 171.468 342.159 cv
171.435 342.163 li
171.415 342.164 171.394 342.166 171.373 342.169 cv
171.354 342.171 171.335 342.172 171.316 342.175 cv
171.299 342.177 171.282 342.182 171.265 342.185 cv
171.237 342.191 171.209 342.196 171.181 342.204 cv
171.166 342.207 171.151 342.209 171.136 342.213 cv
171.121 342.217 171.105 342.224 171.09 342.229 cv
171.043 342.243 170.995 342.26 170.946 342.279 cv
170.929 342.285 170.912 342.289 170.895 342.296 cv
170.886 342.3 170.875 342.307 170.866 342.311 cv
170.782 342.347 170.696 342.388 170.609 342.438 cv
170.543 342.477 170.478 342.518 170.414 342.562 cv
170.393 342.577 170.372 342.593 170.351 342.608 cv
170.308 342.639 170.265 342.671 170.223 342.704 cv
170.2 342.723 170.177 342.743 170.153 342.762 cv
170.114 342.795 170.076 342.829 170.038 342.863 cv
170.014 342.885 169.991 342.906 169.968 342.928 cv
169.954 342.942 169.939 342.954 169.925 342.968 cv
169.91 342.983 169.896 343 169.881 343.015 cv
169.835 343.062 169.789 343.111 169.745 343.161 cv
169.73 343.176 169.715 343.191 169.701 343.207 cv
169.689 343.22 169.679 343.235 169.667 343.248 cv
169.64 343.28 169.614 343.313 169.587 343.346 cv
169.57 343.367 169.552 343.387 169.535 343.409 cv
169.521 343.427 169.508 343.446 169.495 343.463 cv
169.476 343.489 169.457 343.514 169.438 343.54 cv
169.425 343.558 169.412 343.575 169.399 343.594 cv
169.378 343.624 169.357 343.655 169.337 343.686 cv
169.324 343.706 169.31 343.725 169.297 343.745 cv
169.292 343.754 169.286 343.762 169.28 343.771 cv
169.244 343.828 169.209 343.885 169.175 343.944 cv
169.172 343.947 169.171 343.951 169.168 343.955 cv
169.162 343.967 169.155 343.978 169.149 343.99 cv
169.125 344.032 169.101 344.074 169.079 344.116 cv
169.068 344.135 169.059 344.155 169.049 344.175 cv
169.038 344.195 169.028 344.215 169.018 344.236 cv
169.009 344.254 168.999 344.271 168.99 344.29 cv
168.967 344.337 168.946 344.385 168.925 344.433 cv
168.921 344.442 168.916 344.451 168.913 344.46 cv
168.912 344.462 168.91 344.465 168.909 344.467 cv
168.883 344.528 168.858 344.589 168.834 344.651 cv
168.83 344.662 168.826 344.673 168.822 344.684 cv
168.814 344.706 168.806 344.729 168.798 344.752 cv
168.787 344.782 168.775 344.813 168.765 344.844 cv
168.757 344.868 168.751 344.892 168.743 344.915 cv
168.734 344.944 168.726 344.971 168.717 345 cv
168.712 345.017 168.706 345.035 168.701 345.052 cv
168.693 345.083 168.686 345.114 168.678 345.145 cv
168.67 345.18 168.661 345.215 168.653 345.25 cv
168.65 345.262 168.646 345.275 168.644 345.287 cv
168.638 345.312 168.636 345.336 168.631 345.362 cv
168.621 345.416 168.611 345.471 168.603 345.525 cv
168.601 345.54 168.597 345.555 168.595 345.57 cv
168.591 345.604 168.588 345.638 168.585 345.672 cv
168.583 345.696 168.58 345.72 168.578 345.744 cv
168.572 345.82 168.569 345.896 168.569 345.97 cv
168.571 346.535 168.745 346.953 169.035 347.192 cv
169.076 347.226 169.12 347.256 169.166 347.283 cv
170.521 348.07 li
170.154 347.857 169.926 347.403 169.924 346.757 cv
169.924 346.683 169.927 346.607 169.933 346.531 cv
169.935 346.507 169.938 346.483 169.94 346.459 cv
cp
.254902 .25098 .258824 rgb
f
171.964 343.226 mo
173.093 342.574 174.012 343.098 174.016 344.395 cv
174.019 345.694 173.106 347.276 171.977 347.928 cv
170.846 348.58 169.928 348.057 169.924 346.757 cv
169.92 345.46 170.833 343.879 171.964 343.226 cv
cp
.345098 .34902 .356863 rgb
f
201.903 305.103 mo
201.841 326.93 li
170.587 345.093 li
170.648 323.266 li
201.903 305.103 li
cp
.811765 .823529 .827451 rgb
f
170.648 323.266 mo
170.587 345.093 li
139.131 326.932 li
139.193 305.105 li
170.648 323.266 li
cp
.917647 .917647 .917647 rgb
f
201.903 305.103 mo
170.648 323.266 li
139.193 305.105 li
170.447 286.942 li
201.903 305.103 li
cp
.576471 .788235 .862745 rgb
f
203.368 297.593 mo
203.348 304.451 li
170.613 323.475 li
170.632 316.617 li
203.368 297.593 li
cp
.52549 .85098 .964706 rgb
f
170.632 316.617 mo
170.613 323.475 li
137.666 304.454 li
137.686 297.596 li
170.632 316.617 li
cp
f
203.368 297.593 mo
170.632 316.617 li
137.686 297.596 li
170.421 278.572 li
203.368 297.593 li
cp
.670588 .913725 1 rgb
f
172.259 297.876 mo
171.297 298.431 169.732 298.428 168.764 297.869 cv
167.796 297.311 167.792 296.407 168.754 295.852 cv
169.715 295.297 171.28 295.299 172.248 295.858 cv
173.216 296.417 173.221 297.32 172.259 297.876 cv
cp
.52549 .85098 .964706 rgb
f
172.126 288.576 mo
171.165 289.132 169.6 289.129 168.632 288.57 cv
167.664 288.011 167.659 287.108 168.621 286.552 cv
169.583 285.997 171.148 286 172.116 286.559 cv
173.083 287.118 173.088 288.021 172.126 288.576 cv
cp
f
187.995 297.872 mo
187.033 298.427 185.469 298.425 184.501 297.866 cv
183.533 297.307 183.528 296.404 184.49 295.848 cv
185.452 295.293 187.016 295.296 187.984 295.855 cv
188.952 296.413 188.957 297.317 187.995 297.872 cv
cp
f
172.309 307.128 mo
171.347 307.683 169.783 307.681 168.815 307.122 cv
167.847 306.563 167.842 305.66 168.804 305.104 cv
169.766 304.549 171.33 304.552 172.298 305.111 cv
173.266 305.669 173.271 306.573 172.309 307.128 cv
cp
f
156.268 297.732 mo
155.306 298.288 153.741 298.285 152.773 297.726 cv
151.805 297.167 151.8 296.264 152.762 295.709 cv
153.724 295.153 155.289 295.156 156.257 295.715 cv
157.225 296.274 157.229 297.177 156.268 297.732 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (Serpa) ()
%%Title: (Untitled-2.eps)
%%CreationDate: 8/11/2016 3:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CL>i+ni6Vu]V!NaL\)&[;G4H/)e_l284uS`"a]'lL;Z>LDTua:HQN)kqgW3'3O[sul*_n[2eUIi'?7VCk+\9k8@il?fH.D7
%p"!i^rU4LHb,mY?b2NB%5QA67k@o?/kZq;be?0:M6*%cPD-)?rDmS85GC-C$c0poumR?4O^/T.AK1;X7:Ti?K<6q75@9X_:l]%Rm
%mPZToSBP1?[#_0VlQ4Q-#4ORfh4s?aJ.@0[*sMa_;nr3*MU=%r@//'ba8Or'hWoA9rHc*KBb?7=[\[a8+QueS#A@p2a5EQnpm<Q8
%-^?umYPQHP9>SsR@Lel0b3a?`d\BtY3b%`BV>jDB0eWZsIo[EcG?A\R(]NPW46NPkp@_,2#?M'Sc89q2\cNi8!$M_,8=[N6T\4$Y
%q>l_9F-.9L(%m((5>5LY!>Sk%<aNYXD3gMp:,)U(H2*.I3@&Y7G<P_62>8r+e:Oj#AYIjCW;dBAVAVaRpBQ\Nqmoer_k]kUq2,S6
%g9mRS8.M\e)\jQ5"@r<t/ob"XSd'W$`-,X@<*7CjQML5pd+kUJ&!5tAmUWd?Zjti/BV6m"F7N$$?B42sgLWXG]^U!dG+G.=$UZZ[
%-CDjm&lprPD.-)7%i;4P#OJtTXe40KX",5&=E:9!oguW!)_rn<eh"]fGq\_Qhu$7\)Q'1b%pB/F`fE#b6s/<g^Gs$3[p$2aFq\T;
%_`s'pln+<O7f-/7*WA@^TSYs)j$J9kQYiZtDdgP5rp`m7o8`M_"8MYegE(IF>:8f&s&^]!g;cMI9i15d]0P1UDYNoVr3;Vn+E>UG
%Ft6R+"9&eRj=BoKi[#$8T%tNe^-Z-%'E8"7s$'/)OB#*r_ZgfsX7^\`BQkX0LQG-/Q?uj#G-Ws=f;Q&+h&LhKgYSq0%::S=A]*)S
%YY<:ClZ?NtW"P@eFE'TtaJV^;<Vg@$BS0?f(UgLG9FP5.ZSZss]m8CNe9fHE_'gT,ST/cMT\J1;WF9rT]sHL&]A4<!KIWWZ%>im-
%X#^pC8Q[sS"8FjdNGhi9NV[@udQ+@0e(RUn*d0B;DC.!9d]BA>)#k:n2HjURqCt[N<NCcC)^EoMQ9"`<d]]6nH9(Co](Oto=[_hP
%e6B0BjphUgIP@R!]@fIP/U)/7ko^g9Q6R]2m><,j+JK7Zb0$?+Y["FJ>p,_\/%%F>0<;X;QbbmHo4Lf/\(^7tcUhg=U9CfTnQ`?m
%k8tfGr+#]O5:lILAoZ#&*)"(3ddesH._n8;CXXb9>?:RG59<6dWu@uJf/9h96ac#HBiT=Y;YB':=kE5CZpb_PjmlH_<8K/BbD!6/
%p<%8UQCY<ek%.T%[`VfY>G\Gre%@:R/[&mpWhX?h.6VK3<h;oF\N<=#0$TKCLI#*OIH3!J8:afmAM_@CA2O'd3+OEsN4G+##Rg$f
%**?FhZEP?+%?CEt1IWuGioVe?MR9#L&Si+S6gc]<EN.'r/G8PkbnKRMqIiPd#_2#<iNIGYG$]cs8A@gj.N3c$me9@<XlU>tD)PSe
%E<V$!><a2$"'>krTjXSKXX)(hcg$Kn2eZ%pSpR[NX;l]-J+^RO9YnaQR%la$\H`AdB^7K]kjM,RTM,5^YP$5]'Pg^;WY>k,QWp%p
%ABof'kug4Q2Q#DTTi9T-.Ps2!Pp:H4;Y=2tKWrgG+d7U8s(9(*hoS@HHNk1u?QTVlnoc4NO397=+l,R.D[,!+V3eN^12/eS5Nj/@
%Qf"eIQd:\lFm68dNF*VkQ_Vt<H@n[&]k@aZ(HS\l6,*nQg#XXTW#S9[ZLDb5oQ;=t0?:(MB^SpuQ+o*u'eOfMMDK1-bL&ARoR_*B
%pbi,obG%H>jYJBUE>Yp<0Xt@Z#)ANoNQBI"VS`P;LjEhVHcF8</9P72G0h:PX2,J2c"Fj@'11<+ce&7fOD&iiD?YFX%&aSm?F.;+
%KARo?5D-KDU/@#WEqo\VP_,+Sg>%s_3+So4Q#l)jgt\0a]5kZ%P"rS'0Rarog\'FYR7ft\m`bVrj>(EG.<O]-KHoZogt\6cqf6ab
%DXP^HT_mcnOtW..R;)6RMS\19j5@":C]?1(Rr^*-#(4!u87_J[VU=9]D@FPL^hIm#PQ=%3P8RL%1O'#8I]X=^?)KgP9MS?ipbc7V
%:F_!'Y?koXa7J5"gWf,LP?uVN@//2!65c/nQ:8(1Y#2N<_'+_CY?bYJ/t6IeM@R6n=l1N&R7\oHT_4+DU/a6_o?Z*7^EobE^GiI:
%#'IKBi\F3-h]7Y#bV\UgT.`.Tir`k#0qd?q;<_u,>J5K^Q%_2m<NZcq.m&>es*!+ui(=7bX'?Hm)%p%tKC2=-)B;^,fi1DAplmfZ
%i,leb/t\X5AXJSZ?)-j:11;p%*\bc,N1]D<s!estY?c)>GHqC+Q@I^E%^ZSsd<<E,)Eh/DUaLV(@.rrWbSX'eWAEGnQp_CF@9GQ3
%k@[<,JVBsd7ODGo2<oTNBg"g5/.7Aqo7LL'`i]i-=kduBi-1dI=_M8?2@`mNrVRSQ^!a%Wc^I-a$WI"r?6#lj$,4R%_6cUT?Nf36
%!,$=%Xe"gZlYP#0Q]>OHjn#eo2E&nP)2HH>AGL&MgPoZ$#l^0!Iq\COHpe2(9R;(B'8t,]D+su?N@[rL8XHpq3)#<I5?itH/>(mc
%4^Rq?a<GQ"i,rI,X5i$'ZftN)BQlONGkGPNV*9HJ8=!a&PHMo;l*/iGH-MW+>^9lqr)l#4O9LK?;-th0OU+$10tAaYJt9`1n])Nu
%`Q?_5=VgaGd8u`:O@cpjB)7+2$sB]2GX4V")4Fo/E1N<V\;Z&Ce'q<XLQmK.;mYCm^nmAT4$QE^T.ca"MSssu*N./g8ui[`%Y=nu
%[ut;)C8B!piE++))0L*"7]TecC/_/,3fQ`h_"W+\<'!sgj>8C6>_]Ahl0re,i>06\85.:FPKBPeFEK`oIP!MLPJquWN\(.Qi\?gP
%f<"#^'5eU8M94=e`u."Ma]AcdOI.)SO@;`:\k:%aD#$"p=Ya^>G*4R1m%iKOABWV>>T\qUNING8a/S@6jRk%ZN2!4B?5H3X"$3h@
%\(%?Sf7la!HaTE`>&@WA;3?DDa2)I:9rQ60YVJ?*[[UD&Sr-ei*o2A%\]_7We7s,RU,)m@_kPb:<JGWEMONf-,p@7gIe!!\Kk.7?
%b!NRPFjM+5OB<+4/5l8Sct_'75paG-R;/Qq`HRV(TJ\9HXe%tX<GuKD_t'uL_$jSm<h4q<PUo@!NH;Gcbqi4[%ba#YjTg45REJ!t
%c9`jM(*obH?Y*D,-9W2%e!VUe/s)R><0[3rLD.E"<+d?j-.@H%q7.nVBJDA;:'M)O8odd@@e#uOU<I[U-=k5dWEb\Q/EEO96"4RE
%SkKpEUoWfS&l@`$-ki]>Wj@eFOp-^,;$li!PZ58@<hI^+`giJk>%:1An^Do3?D^uE3@1Qk^5D.u`%N.MFcKk,mOp,-+-l'hNh`3d
%7%M?jCY!B`c4Z&+h_K9O&[<kC1,INt=4(f(Y1I8[Y@Sj@>d)EFg5P=)XY)m$k1]1$[959:!bB`i<h!m4X(euPYr6Z,D3g-g\Q528
%[4>t!k`4$;:JS6`7cfqE$N<h<!7&RIl=/i"`@/V<bf+6J7S,>gX8a+qp)94b8$d.Qo=)KOF$1=1=?2Ke5u*D^5?!SIV!O?2^M_D7
%O1j"MIX0,E?f&Z*>T#:#\$sT0bpPN[`iU3on8Bf^s'(-5nGd:n+noabE3BGkHE.gOe6Ct*Z&M=S-`HZ1RJ8I6p:=(ibtDCr>IilT
%^8,0q!B7ab3dBi2jbV1TNA$K-)BEI;_KsXiqeTq>:%nR&4h`ld5>8Kq\FLE`j<#mj2`pCJ(j3HC$kL3NNEXE%X=%9qN#gi@mtkm"
%Y+&$8O<J@\5&NS38e*C/-0s\ml*4C&9J-^VNPd]pCMYb>1BU60"+-T"b;bEB`1CcbZH2t>22ZdX>OS1AK74S/m/Q]%3K4si=4HF)
%PCE+eIM9!d3t&N%cM)hOqnMb$h_]`CqnMb$hc)aj42BWTbG\A%HbT)7hd;#dI*Yk=2f3oUo2e+.RJKM37[S:MI_Ou,_;W?.T'p4U
%J6Mp4A<>pKNJU^=R5(*J9e[gH]GUd@RWb1f(3lLS/@6:oEF%4F%iUH$5F8.tW1T[STtj88ms**-@C!`QP>;M-6,l"RA#6BRYKa:(
%%D!qF6Y/\:?9I8Z1hk.L4@1sb&[E:"hfa_uA82-I47*5<CCQTr@'/:cePFq8J(NG7TYK%eC2<3SV)<ElC*#F*LX(?9"=Acs0oqsO
%j(IuY=n]hebHMp`q-Ufqk`:)$0?.\&jE5I1b^`I8JA3j/C*I5m3D<AOPF&e39(6#*;bG2Lh9jr$.bVPf$*'X/]CVQh#n47m[5lF8
%L^Y3EYicaQ8Y]:gcbIY`i7>X`Y]d1&i3:?l,<-4HbQBNi^rnk0EbPp`_^m;,U8'CVJ!gOJk(/kEi+3sSR0R&12"8r'^lP+bP_FA_
%Bc]ONi]n!\-TBQfUffdN4e!%g.q(=*J[,#^'9f@$B&U%Plm\0_YK7^Ura)Eb2PrHnC+RP>!0_lP`2l,iO[\UarK<!g36X%DQnOL"
%[hm(8)Ndt)5gF:VR]I5Z]AYO8MrX^>VYT42<K#lom^HOhO3_`ORbti$?#3]s4ut[(eCsrHTAKC+X-]\\1X1ue:U"]%i<$C^EV=/^
%T(^8t0BhHc]0S"ndnPfMAU"Bb2GU*g'%$WKC`G2m,tirp$\t@H.XmpD^IodBJ'eMr&S3[K<5"_V0PQdIL&2n>6^5-:2@U]GF0%Hi
%F6Gj]>,Dud?1,:)2J-Sfjt+T>"r.od/p)j)o.4-O]Y[&@iaabDYL3?mL-udbn/;bOGoU<8a-c9SL7H:=-JAHkkr=DV"*'8N36^D"
%o/Oac.Z8#7l9((]ogG4g0r?+SJ\H0>Ot#'qi]ZD6J!ON+::c^*^X@A[Y%Kc,T^#fD0k'\*Jl6_,_E:t_Ql8o<qNLNOY3Bd"6,29[
%Nf2f7HtFpR=Dq`]9-RF5\rb*UV,D*Ug]_!RG:'DcKs(k5/"bdhU#S`u.!L;^K:l5hii4<I:T<'??Slkm_S"``L1]P=TmVT]5Pjau
%-:N9uouK_6h97&l<:%1MRGSr?AbQC?=e4^,#,P`d^Gb9l#(NdrD:#Hnr#?3Xa+FT;`A@f'BBSuP9O@Ihqfq_u6%5NGc;^I$=gO@^
%PmNjm9)';W%S,Oha\Gbk0FN.Q4QS($$M/qSl/,>$?Y5TugNEWB1dePCR1<_>aN'^c.(1uf@I1NXpOC&HbGOjmhV?nURsT3tDsk)\
%EuC:\\MlGb.*TB8l1a=P0Kj7?cV9HbQf4Nl.J2dY?o</kk3h$[SVs6tGN\,V>Xf5pb`Y&S$(5LJkMEZ%[F9">M`aeJ0=Sf1^miN%
%`8$uSIXa!1@GaYC\s^32@WigdaPc"#n!1EVUZ+)&#A3gaN;5o7o*[=&^@M+\(M$cH0Y.:FK6fh/osdkuT!.5iW84FPli$:QR6k]&
%rqAmJ.(([O?!N`dU$.>7d2DKL&ZpGO@T5h:Rn>-pd9VQt1W!H_G3dDkLMUVWYfWp!-Jcq7#G`_E^L_nNFjbD:Ak]'knpeA&I6AbL
%$snpfh.F8f:W@$eEKW2^$bLo617\qokdT_V/lLk0"HsQIR!MA"%]YdfSjKONF^^OY0s3J!SlD^U<j^l*1Tj<5[Mf_+c,,02bg&K4
%b5^bO6)IB$YiKrc,;\+7'K"aON"P&?fkWL<8p+%i44uN&Q[e*^BLUV%H?Uj@\LY?54L]t*QGRRK'F]It_9a.'Ec(S_d(s>$>Q8m#
%Xl)eW%]dg5U5;dJN=2&L\P4oiM.YBe3mbHPWf<`U92M3S,O\6,9t[Se%sCaC-HNE!S<)D<O-0SQ>o.-b&(j[l->V-.H^4G0.sW&`
%=9^/:HsE'VMm;Tc@Fc&BZ\\RiH`pm8YpUKG/Fn7=NT+:/f)'+)+ObZTo>P\^3Gd+[a"&'jo*'.ifkf(QaR!H*ppDi7]e\hf@hp'H
%CZCATNRJ_1Sj,+mWCG4;dH&bDO'ar*WT8jQ]Yip\$V%#@Nh!5\`Fo$RU7$B]D19gtUhfO5"e*VRYJF3%n0_&EG<sg!1og&GX@j51
%_-,(3s.oT#+dZ\25I5#h;t/L(]10F0iZ_NpCc*rBa2V`75+:Ak1"en#43K!*=(^E/M3SM3lGR$^0q0>n.DB?P8*#++p>%E+NCY)8
%f'ULZE$?Xc,+*#q9qjh-$;Q=sKMs*U=&TA<00Cf/)r5RfqO.TPh+>sFf=S@'o(b^)cnoVIpFF9eVI:sKP<>0T`(pZRaVrumQ+gjI
%;BE3FqbsI`Ar4Y#DU-DL3h&:#Ze9K-)4Q%c<kR#E&9;d[W:OH,dd!B6GtDEGH2bsa,c2dNTs0t?X7L)GoYc)po?bN'l2sY(.l80Z
%7W,*N_mud2R?i*r[&$n(U(LZ#&YqLBD.Xf*[;+Z18-BS33dTIsm6N7ENQm?8(PC1_/,JAR5@/M^\;mc,'tX>G]W/OJN:OX3rhi27
%+h'"MKRm/hhECs804Fds9F(6&V\+T9XP>H-bG9@?5OU'-fnY(=V=."d?:nP8Ju^!%-X6[:>h^(3LEF``\NgG\9LsbSiV9s-"`21h
%N4f%JIm&Ek?NKjrN`in/\W<Aa>jY>^\<""LSng#F8mfU6ND?jA',3b*ni>I*1kL0@:rr#E,;u^/3$Vs]l.P^HiZ)5%]PfOhk`IKF
%gkYa>I[:+c0R&>k]Dpi;`]sCsa'SGb5DmL[2&9L&s5^t;Wn"ombT6U[kuZ2OeTU,&:+f!_GF1`r4N3EtMpUeo<E0i^`?E)A>$'aE
%*>j!Z,=Z<G(&:.-"@8]A#N)#km05KAs$[):!?KdE*d"Ae*Ah1[8sMTEiglhL#(R,?J&]u$!$Z2Eb3/;`'af`-oli:bPBn+E!q.+7
%\:iZu>.E>P*W9:.p=:j%^S!90\C;T/8(3Cr3V?<n>]8S2;O?RV6!9T'K:r7-js7id7>ifp"L9WK@'_!0BNNN49<X)EOdMk-P:?M.
%6sOCOgc<MHlT,581.aqNl<ZRBYHAR?s3@b_Yj>mS3T=0^o_Rt;"K9(Bb+brM$6"6#L4Z/AcDeQGD@S9p%f5#AR4V;(Sbt8Er&k4P
%][s)`B1IqC_TG$o%k<PH0[B=W/WF36nEk=*QL,,d)FWX$h!;ui\@C1/?\I*P]+6FC:2nY=mFG&dO"/Ob7Oq19[[5J5d_oYGqh3n6
%P(bbH9gbcYI%MPYJJ=l:FjcbjP@6_l\i(/\BEnE-%4nQP0GsgS&*?neLIX*S=ep/6K>KNV\M2M72US1].lVt\K3$@Dm<+%fd*G-D
%etfD#dKi1;;QC6S>A:QQVqiH[!!TD[l@uP]M@n*$X]*On$T9NKF0cSE@b#Xs4%--RSLY-FmG*/ef+5IcrrpL[$JU$4;s=9/]m=bH
%(hWFMq#QCQ])CZ4V-D+PmiI5cde<%3OI;if9'bq<mi^2J6GM.YJf8C\2\A)B+`&mAV]<m&6WZ9'BHW-T=RNg*rcEM6c^f76K2/^N
%D"C*B3t%s::sA;3]lmls_0/N4FXU;T#<=Jn.HmHu$gqtPr2;W7,m\eld_a%+R#Yjt4ArDEHgI:q(Jb`4Tm@.R3_BH)\NB#!@(%\U
%O%T]j)>'a2%Va!ndnJ3=rB&(@#64C<>IAdlEa3P4qqm1her>^4i(g+k3iJPQ\\3/6,eF^-KbdQ#i`Ca>[[PqWrXKhkm*5=Q!D&nF
%i7P2l($*:WEtC1"<r+L"BI;q\Q[89aI6e4`m^0$[#&9&ul"Go@FM4no1V$g_]tL(s2kTd/Ig8c"_FH"I>Q=DP>3gdGqe4^&$84(\
%Drm`S0^"/Wnt=Aa'E&-(!;tekMMtZJP>DR;n29L5+P-iJ?;e/aW-<bDcj0Ref]!V!mu7rA>,+`<](.f<!k`V[BiO:=nH_'BlZ<PB
%[Jp`J*K6li18<.]GMD:H>%nj'?"rut3FJhD.4EEI5A@K5M#0JNd-/H591/pr.AAjWrqWeS)?6s4k%jU9F:R*]_4ZG%pMt3B'oLeL
%_*;HeBWTqUeq.'4PNO""D"luIj"l5/$)1`ke;)a33WtIsG4fYmN1J3qZ,7aB7&?'(>XUiFgY+_+2km#*^d8jGUPk(k-H#1H2\1WI
%l%?2,j#lNg>W!9M0%C,BeEmFlSrp7N/1(aK5h1FC57J5BNg)mV.ug?j9,?iaf/q"q9'7(]1Fg(^ks.tbk[<"/I?0kbce?FoXcmo\
%U?##B4!<knh8"1_C'0ms9+ri2)6C2[H@8Sl@($fP7bkA'oS*"<(9KSA[2(s?#\s#u1\0YV@_s&%!F0.:ZE_%W(PpIZS#@Ae[<gVh
%WCL#8H!7?.&)J_Z=H$t63:a(s#4,LB/o7qNqD22kOkSB33uOrR-9^Zg;;hm0+O10j3Wg0dViBtH1i#<"n"=Uj.X$8l-t/g<g13)l
%L+i,Qi0,]1NA5\gb=cbYa]QVrTbO!sNGH)bn$u=4<rQdd7^?XEs0:!UY9jK0^/Sn[Blc\=a?mR>IDgmug/=]8D[pWkoJ(K(q0)Kh
%J+:<s+gVEkXKfb.+A:A@V$6n5B_YQ,e#7`1J6>jFC9)R;PX;'-fZN09Qcbeqc1Cl&an?)L*M[Uo=eTT>h76qK-`qj3eqd6P[8:d\
%*9(S.Fk4_p;CqK/OlJLFks]+Mj]fQ8"\mp593'`K5&Kmt<2dW0s&HpUVm?C<`2CP+DH+`U(.2lC"dW=i:IU3?gW>Kn]P3)HWkMm5
%:nldF[P'/Y]4_DI6uA#[od;4q,1BpM^iTugeI.WEQ)_2pmElKi8?kh\EO?\7+q)*_-cOm7etuulPUelB`o$pK3o0L$4d7=chDQpP
%5s6N['J7o%2jAG"F<gBu6.o!BLYQR^<mQobZ)CuCTZ3h1WgOckA7O5eH4qi+ONWj7AomN:?<k&`l3lS(j-Mi-\/SR=4RV@N-08,P
%s7.J;Xfl$?C_9=+9=9Oj6*GakMMB7$=<Ou@O*-QZ_D\B(PcHDf=QpjXqp!8Pnr@9]Tl*Ji.s4Pi'aWqg+/=r7%2XqW2Bhi+ean\+
%dh7T4=llq$5fj\d@;"uqs+VS;C,*"Z;`sB.Na\038gf6'TF5)5Ct%YcZnO7VYt1j*P%6%/cO7ksWVZ;eORdZL;RmjlJlnc]Og)sU
%#MY7!A6r:P?->8gA1$k+Fo]cZpUg`?'%I'JX'fU=N0[5fQR6%fm[o39E11%J>11k#%XM]mIEALEELKK^16;OKIX<>t4<D%Ai=%;F
%Y-R&H-d/D,027ms8Efd<JTNP"fTdo;l(58;&X-0M/2l9L0.=6/'W:5-8+NsjTLfmj'B[^[Jnm4Z#t,7^:_H2m7s#uDFD41URFEWf
%*cWJ\c<Si@Q@],RR>K'Adf+=V,!n\NW7q/uO]GL4$=ho4Q*+gVQ5#s+q6V*#J:-CDg$K;]h5&&@$Dp9L$5AKAM.+&HYPrIefF,8<
%5rHb3R5Y>e5XR:ZIaEs)V5F-Bb2:#C5b[%K"GK8-lTqdn!X+40c0]@DP_(B&[Gt?Ona>4o9C$L<hHR%n>CL2Ah-DIIFItD9<_lpY
%Ss=4F0AP<`=7X&Zo(CH`H#%Q_oohm!SB%ZlJ),IVd2c3BneQ`6h-l=bbHcGjYGK]Zlh8?PkPY:<p#SqeU\C9CJ8R9rG&DCrWFu1h
%l-i]q)s^7<YZZJNW*7@,n"#L2[8VD_*P/*<SQ5F%PCDc^VkWckA\$0(n+6V?rn5^EH#$5/3Odl]^GbMnKl0L1f!FDdeo&,!M>QGc
%a1ht:S,##'H]==qrNrhY?N.=:g<2FA9$;D_jb5(i'Bk25X8M'mG>L?ro[YTP2B)$b:Prf`bqo(rMp9>0];7"3q6mR-ptf6*&.H.Z
%q>'Z()h-WA<na]nh^GXP?Z-_j<c5=p+Pp+5"6dc)]!,/iWesjcRqL$og3V_<I<V[cEr!o,`oatdjiq1Ps3[<K\'ER)e]KoOW\84[
%m$t&XRJ!64G3cWPXO]U#WtcRt*oC2d0)[XUll=gZL'T>JX?AYOTc:Q9k0len<P@!hHMCt:J_U+g@GQ&JoM4a>\%9hMc<"0$A@;'2
%pBG6T]be1sD6(*KhgA6$,-r'r(KQiS@`.#;.NI=6gtC?8?GH/VCY9MKe>'DL;;QW[DRMb_XhUi`>ij#85#JqQ>'BtC8+QX2,g/^R
%<k`>-<';_&0?P$STPnR,(Ai4>7Hm*LrGMGNdYBGu,OrZaC5%O12qINDD28*mH;n5&^Xh:[4]g`(Qaa]-f(aU+%35;k>'fgSCRLM1
%T0Ca6]m[E)<r;aa1JoqJ0snDo'W)ft<I>PliR;`OCuO>:Q3nU`M&XF^&P[HukWO+M#Pkc23%TJ`.\/\Hrb\]6\TbY6O'fZmp[5\@
%?.dsamZgNWlJFM6I9JdfDMla:_]q%4+(XcVee),4;fpk2G0?_cDiZgB?fcpJPNJFbo&e&B#'9S'MsKf_g;=E6K5]#tL#&<scc`0(
%g2f,5B!.C)+:Ig'q,^4Mhc.<=PTEE"ZE\T*^KEODefThpQ^HRL9Gh6OleX<i*In:[DW7@SXUhg$Vu4a7j-!FACVqJ_=T>[5/ch$g
%?X>4jrQe&]`@!T:>XJq=5*+$9".CUU-9>/QG+KD.Sh]5ooqfsfQh&#8o6eAX5Q&;5Dgu(p,Dja&*:3PgH/WXREUullT5Q=KjNBo>
%"Z^hb-=q8&<C973!9n7T"lsPQDP!G:p"Zt?lhuG4J\Oq-@IIpj9s!lS:UX;iO8Uo@pufKb:$AHnpnG2"b3"gn.djr6:E(r%NKee\
%hE:nug#<csik-+>TDi/BENcWJ/r:*dl-Y\JG\h#K)W4UY.;tK)>EgYMDb0W`g!_n'e8+<bQd5Qhf7'i)Cp`'+$\rB`DF5AhQbiqf
%>KcE#]R4qBrE.]:3P,OH52@g5V4BEE3YtF:pRXtoDu35-`2tueSf3Ru4ZradBU:YQ+21*js.si(S@pMe^/OF<bM=c:++A$N?Q1N]
%Utpdk!d6@Nd!fT/(XEmYp%%qm[Lc=/+85/)U=00Z913nYlZfYAnF52eiQ@AZM@@2FG>DXt_8/YCn&s/5G4,S+GP.7MZ9dM\iS_nc
%:&WTqI+_VO\s\<t?f$;sfXY3s*sP5hK>F6;r(;Z?VZEU(dB0S.<@!J0l@\isO*<NeY5>kPbBhb>\7%O-BPtZ$C.7GKWtj-fBC?r=
%nE\mTJ5nM%0QpWq)V@ckBLUO#^2UYtC4:kDMuK<JUoTt+<(![n:)V2;hM5HF9<*e#gsOr2"2n*bL8^SR.G71$pgK.pkI$HoNZ&Rk
%N`q!":cA_[C(c<0=?KD6h&>6@h-fp:/;8^Op:@T5B*[-hfR/&dWW'!6]+1ZD5DFZ9/4=-7qHs$1@4$$n<Fc`lP^^.:d^8SU0UuD7
%-;L[bqHfF(#tbW<iA[?qq1>=*nfJsAWJ\rV.Q@9(0b(AuG!.mBES+eF$fRb-R3qUYfUp5(7%5ptE<1!*\?Q^dCWJ0(o0jb"S$_uh
%kgF"/)2Va\Ki@0"(aO^@T#9N_,nYo)]#1b3pi%G*WY#1).+ToWVg<dc8BK,<A9$%tl,+iJH'jOIOjT>KePHaMX@dnhe[3-o=.SbP
%R>,>PSO+sGBd*/)Q'=D&DZ12'&m7'.C=5YMZ1g\tCOQjfLkrq@hHt8ln:'?cc1=t]j'H[1I_Z8NXri+d"fphN:AN(kpT*Bpp[bnr
%=i'X.B.SRugL/?lc8XV:H@<A-s*V2Y<B^A*=06<O)aj8l`k+<0>@ctM\NB#W`B>7\C?]hOnZfA+pU1n<)D6=jJ'>L3n`J\[^Nh`i
%s%n%@r*(n5;Xl.`m'fU!)[E"Ia(X6d2OZ2Rbn@Q&X"UTpdJD"PE]a*i_9Kr[i2FBSCfQf4*u*fl?\u:YXE]+r$LVgq*L^5D5Wp(]
%_n"1GfjETR`4Lq2(>us%"7.thm1X'>NAU.MJSH_&#;>fN.cA+hJ-&q]I/#A?9*W^r%&j3i]O^M:N&__1l3\`5*:&uIr:ta(_0Cre
%pSk%-lT=:`CjPiW8/CW4WeO6mSDup7[dgl!r`+8NPkUi+`T,sYNK<glYO6f'PGr@]Hc"R&WJ\8:`;PbXo6b9LX'6Ie*',-#H("ki
%el2<;A*:)#qt`=W4c$)sdG[X9q&F-A+%^`BP_1@&L-5E*^&`=3F:Uir)XNc]SDOW<c<dV_pnJ22QMXH=2iiB:C!Co@Dg,iQ&$p^\
%/"7o?K>tnD<'U?$Wr%j$q8V_>^34-"mftORkKYBi!WM'Uf&kXm2caA*7n8:;532h(4DKH,q26P<<;'(W:f(3?DtmR"k7;J>5D2.;
%Xk&pM$VC"Bk"3a*H%#"^I+X<\rqu$[Xn#M.JE"]>pe=QSfCJ;6+$I*Eo;q_%De"h]^2La86QNhS;gA!+i!m9Yk/5rW[[uXT?->AQ
%*:I#lSUBHhD`?l,\i/Q9kl#.<%Gc]-=l/@ccX&]60A\mi*nIF5CL>EhgpBiSc0\'^]:Is1U,+3$D#&5B7Z7g!58X7*k:>MH6g%[f
%?;TM4f()<)k-LuIqhrW-W33Vf!%lf+Y[$R^b=@ILc4F'(A,Z1DCZFf_V7Wd@9*]TA%K3KKmL`_f''a_Q;L6p-s$_"_.,Wh4HDHFQ
%OrS6hRi$3L\4]I=`G@/jA:#/k]NC+;,=+$gDm=_r=msleKca>ZJl/fGD)9RML1iiJh,cOC0fNQXZR;6g)cU@5GrK'((0Gt!f.T79
%cYA?'&"gV<Q"j$Cfs'DO9lT8;>G]TB\('EEd_>6"Y6"nXg@k66=:N""%J3U_h0Vt7jS'NKHI*j?"M.HY^3o<rg,f(Xk9CE8oZ"n[
%ioc#7#s/O*%s5%gI0V+:ho7P;FR/_<LO.a]+oVA%>^X5<n!p*Qjh?/j3Jam%Wi3OIDZs@;GE7g#@Tc(SF0`;U?*aGZ3",^9:k`gN
%AKU.8m9:OqO'gcrD)^c&MrN!nI,WWS^!jjtiDLQTk0B/dDXj7I\krQ!/MI\WPdWgEgd_`_T8J0%?9^t"^3=hrp-JN<f%p(s':?(7
%_n3TeHFC&f5UOfR$]oXRHKQ8-_nWa*Er4cGV,mnfec"@UdX?BR?13k]SYP3-NAn?DrNPT.+S4h,g#"6R;cj`hq3BUAHT/%nO&+>L
%)rZrQESVF<:JOsVpKkN5>Aq&K0"la\57P/*3O&_CXF4i5r9L(TDsk4jX)#>(,&>$X`H-pKXhHo'X)BT!5;5otJe\b`q9tO>s8G/4
%pGGo.,J8-!#A_M@1M,E*QLCD]^>+,-35H_`n"Y6i,FI!<p4:X2h]c[-DT^,>%)9d)FD1\"KarA>eE9^n/:W#X?>Ah_Tn09Oq>&U$
%d`K=lp1F9cD#sS%lkWcc[bGMT7'o8:gML"RrelsFXK]=JomC8OfSQ'YH>MmT)r26YJ/Wa/i-q]>/=lQC*c-61qKETOl@83X3s8dG
%oD:lOD"g+g>+B.j.uO?(CH-\Yf&Q-'X#t\Vm5-HccO3s4"kVWZHh++Wnu@J'[*fk=]MEI22[c6QbF9HKqbM,pAD7:f_0I3;8E'R"
%NAlXIQ1B7#*uPRPj]aZ&<o4+Z)d]Fh7%qhhDRT?"IA.PIdb\,->a>7(De8l=j$e%ROo+2gXuG6%XM#.DAV8Rhl=#MK(%B;r],PZ`
%%L8-9+3A/J;LZBhZEa8slZpEhLOU>eS)r4uhRX$Tp03+.<^a2!lX>_TpDORfK$RfJF9bQ_7\9#X8l%\GHDT``o%*Zsm5qM&,N!u$
%2Kp7";5SV]':,ur%qIr-Ym!sMc5j.J%Ngp1%_LX0=sqRN-uScCI<fk2I,k#lpX\MVl(m.[Vspf!lfdRWD@X?1Dk9)"LLOfl)mgGe
%%,WP`X*jg#f=Jr?q,ut(UH8M/*PPL8gZk7=]s->#o"oS;/NTPSTsf2I$J%G:,;E:=qM=)gOaV^fd1b?D[pUaMq-)E^72ro0a6+E-
%O#jbE6><MGpf2YPR7OBfr'<Mmm;*NUb4A]510@.-</QG,\]bR_(TEncS^phA[%Q`Mr*mfrh(,u?0?QP8pNqU;iFH@j2_b-T]l@m?
%J5KmKY.e#D@;S0?HR"`q`jfC)At/jSEI4_sidBB.=T!17'sQ7*CTI<G.nUaV45W`jjYe$';K:0LpDXRqIP`Cld_f]>Sjat3QD%*n
%L:_Gp4:StI.WK+<]g"d4Z+mkjZJH%1NQ*GS4C,=ONCN)(_U"9^>%B'HhE&*rmmZVjh5"!l$B7Z.HQ'A4Zc=Q^[s.\FjkXi4@mHRq
%_I:L9)sZSR<qW?f"J3nuDL'F[J"!`0^-1<0+a88"Uj;\eGkYS,cpUL2$=88^hT?MJZ'u+0NO?6"9=sqa?k,E)>ZC.=$]rEl\"W,.
%5-8Va-LC]u`d4Dm(cB[(XW<?:5a:AKRkM8K0=8MG4mIIbLPc^E-XuafiRQq7oO(uhW8Ccaf=%h2<Bb.[OJ":=A&E_=\lJ6ko_Q([
%^/A9^[dn$o]l*PpK%7J-^j:Jbg@_4Z9en@n6U.^XERd&tGfQB(a9k5upVX&S;_S:-f%S4gkU%$aqgRcqUdhl79Up`4Nc3-+!+Yr"
%>i%FDAj7+Peh1TF8Y.Z]"F:A-J;<!%0N-J/'FpEfJ2X>">Hr(%8%5LNRn!X#-%?S&7@@O==J&b_d5eD\jI=bnhK\JKc)7%D+)<g_
%"hV=MrlY4FHN&<jB"7<"XG1n%\T2n0A*q`\YXmSO9,:n6<X#?"i>e0BP>5Q$+l:4<Eol+HDt2Z.ddq*0E<!%L-V_4A,_3Q=mbuQd
%KjhTG>FQ-rVaB6F?QT,FQ]Jl:hZ>b$rjVHE\Z2&Qe5`321?qHs[%?tOp?jOrgi.1t-lE%TnnHQ9W3t7)<:AWA]J>G%Y1@@<_c:$R
%^K56QYeqjW5.kY3D>M4[r(e&Qq>#83rpjcBL)D!*aE^s'/K[#AN$uLo])>H&jQ+/">G1u]KgP,#Zkr#<=HfA&P?,XnhF=U&2dk6d
%*l&c0^B5tReR8/PF5#BciG81,3.:f%`n)4r^A0Z&k/<\eneTfXNn#X^lRt>^5Ut#[n_X+Nl$iRsFaa)ao4#O?hT#9Wee&jag<`S5
%2uA=pg@X,$)lm'mloooVqlZjcE@,pH9Wr?N=qQ-eX1W;!72P^7f%3"F/\bTKqY]dJ2<^WspF54=aOe$G^M7>d;uUQKj5n8Z>'m;"
%(Idl5iaU_\D806uLHQNpIKd0qMt0$hlJ!Dh<o/2$7H^ed&n-@fkN110@B"HXIX>CHr")!S"n97W=hMYVQ2;(hDN7fE+-o+@hqs<q
%>M'Lts0)\ba0f?jg-",gXd$75Rr8sPJAkmoFfW1E]]^MUp-(%:,?#/3TZ^/%eBpc$>K;M'@]1V`?%5+Lib=Arh'SN[_5Hc1H.'-$
%MoTI2[jkb!/f.]PDsWb(/:?G*'RuC>h)MZo"#PuZI9t[bIC_(5hn;2XCkAt$*J*1VhKWX@J/I[g7Hi^6BUiG4hYNHcCJ":k93X'8
%I#u(=AWWb+hH'<s;eYIhh9Km;p"%1<romYZUg\(80rCTC>W=jHp2Q>sn'NfsOQ.5*ghmAg$%'2q>oBA3_79%,HI62a.jYr<[J"U%
%gFJQ^R6o,mDQ@g"'8Y$_`a.&UEn$0AZj_'#2hYLukcTG6qk'1c:2V!],SZ9niBa6g'O4R>4f2?L[[Vtgs.=K/Hp<bpS"?fuWoCW_
%_eqsS4/V1Yi\XKHFRd7\]2bU7qX%J5lIShs@>:Yl%,oH>Wq#\,l_5ZVm&0iR$h8YmDRD-bjsqE=1+`uSKi":\8NNo?4,lJem3;CR
%m7'6$_mf,T]?qHl[XGcWqiO;#0iL>#+*K0*c7l"Q2+Q=BG;)!Gc>'ibqj@2/;%C%6&mi^iddG(CCk2G-=Dn?4lWl.*Rc6$GpnG'_
%0Sbd;9J33#P,6)##8bYGlWuiua+r&PP7*.Y^]lg_0\8MsE]S>'#LeJf0_]VfS-?$"YOXUbZI6l=V&-,&Tf8S7aAmQ]EN#/HrA"*f
%FG^OF^O)teXPrX86*A[eWpNh>5d>uKE#>V&dn7<=X1)'A>_L4bF3npZ5RT!-laO-mC65LF=m\ha;,R##j4--)6GThjWgDS8HA2OY
%DO'E>e$(RWZgJ>@AcSTDT*ts(n)XbUF1b415@2KGWhJNh\)']e9dl:-:e=X__;X(?H/,FL)],(eLiMkAKdTbC_h"d5oOF&2+[9"R
%rO9W5RsOR"k0_*]q#tUcTrWsX03fiEl&,50dI.=<0CZ29L;>.dZ=jJQ:*Z0qLY[7iH[0tkq/92?&+oVin>+HsQE)Qa'O)S2?_TCR
%C2RH3c8;U.03t`s("VXi"O>NUn-ZL['eL#/<7>0jJ&TUV$XJ4$cc*ukX8]kH>W!&gPub$8c,-]>QOLp3SI:LA$j[EV.Vd0]*$Ue7
%P]ZFL0"g*iEqr,9>.32)Y%A26QK*m8<s]/h51SreWFO%@Q^EM#4][#c)j\pu6q,A,l5:!m\A0N+fV2)RT<oP/Y1.kflGjmlc[H,Q
%A\'4_QLt\s5=Fq,e7Pq^e*j<JLf6-SCq$EP66mA`Wss6^i&[8SPJ2-MdJP5JSUi9Q6FfFjgHMe4G:ML&d.k9+UPl;r,G)oO$g:]!
%a>2P,Bt'q?^s,JA?%l>j#n3sme59PqB';Z/FB\6[>Ch7kJOog-4)Vi3C%V8tC3pN&8PC/=gMWSFn-P;cgRM*g&r6'>0T\cV`+\V%
%GARu]S_V$t;m;6G,Hn6]J^l82d>)7;5KC:#UBc$a!hh]rJ,Z]<V/pH-\'q(>!1$BlX8;L4$"cYl5(_2i<U0pJ^CDon_LWce@l<nM
%cb"[G&;AC50*c';ncq<e\j!T["mOX!C2ugm%"FX_-\)+M0`SQ1..W\MIGs;G#Bt%IcjsR^1lAs/4,i,g.-*(.lGrEH:*\lEc.aiN
%=)@Y?9+T&t">Z>*?08XR#*(9SR9SXAQP\H>$Hhp+\-s:[Gi"_"!kN[/iB@tKrB/!<OqLT_GAK2JAAZMoK'JDW9&UeGHd\V8E\La<
%!3l+VV+[Qj@GDOC'=[!eT0Y7s[0k__=1ANXncG[A%eQES-[C)9biO-489]0S3$^@\$daWZj&8d?[(.HN33I$IP1\!uT6\cU*1P@A
%9>5%!$(<hs?<XLqUktT84X%\qQ^3WK(GP`V`M#s,VOk]b,;m`7O]o3T#oXrX>t7;3i4t$<Un.(/L'eU5W?Yj7?(j`&@)OD9Z'1C7
%j_a8Y@tunhVAeT4,o-2;QHUp3k2*d/iWlgS6;'!fgNBcuQ%t3^&m67mT1Ol(5^Ig230Gd3*B!MG##1J']9-fD7]4YB=C+$t/AD:8
%o=bS6\7,hRB3VW!6(trG1.S$NF!(eI^B1^.QVrYPZVb6rM.LPf<JEbs)kb6]R3/<YfE#eN0/dP"\+@&g7"@#qb-8JE)5%^"4Hir(
%3Kn?n9b1B2\0:kAWD`B9$5"[uUV,OnB\]q6U2>u9:[rl.:7;lga-#J6PrP^tO:#u>DQ<Ma!\9;m^rRL6m)Y9V4:;:O,fHs9J%UH)
%N*?l0BZfj03V+I.r$W<g<EQ+.c@Uo[UFoZI$AIr0(>EcJY!UNOaQmhOlgMPrmQl`%#F5E[!CHt-*Cp&N[N<^>r4r?B_]L/&*m8WV
%=%X+4K!-F7PV_U''q!Uc%pYQ=BIFL0L"T4-g(".g50Phb7GbogD5=R#?<.<)\AI5M*#p%S+"/'(iAmL\OLC.m"&+sYK923L>37!)
%*=dZ+@)PN,TYH73`dq.5;90:[;um"[E3=e%"0SZmGi5&M;HqCt%HB(G]B-Z7Zn`#d8J/ls4J)I*`$%0pk1J&_6%iW6&0%8+$g1hg
%VC;SAOQi-D_#]L+$c`L(_hkEZC\mf.h`,`B-,\+PL92)@BI]rrfeemV$qDbg<+\_\X.=7+8B!/l"QM3X.so1G[DBr'.q[$8ZS-q0
%=hC!,!n#<RTli<JM6d06\.TCYhYg5J*OdiT"Ht,7/!$o[7*&671G87,-07tE8QdeQM@OqAV&W)-'\3:((7[j/]>%RoR1DrUbn=L2
%4BUK,>2jSJE,kAm>T07`QqS\IkGHqi,3NPDc*=#aauKP>E/1d')&t'dJ=2O[g$b)F1PiQ2"(QlSiXP!3aY#$D[53gYWQ:nE@<r&>
%-LR0&?]C0bpc^(/9lNb=]o%&-P+(Hm1jO<9^(Ok7n$sq6Rt-Hj?rM[uY?20<%:UonLHp6A5b]=tOEppFC%PI6a2eOTj2T6XqEm]]
%!_+h&9e6F!D%8g5(W#lBa!q/m,9D7/gnlql3X@M3_9(ZoA$:F_krQObWj5Ffmq#lW$Nl1>CKZf%%$%-mO"D;OH0m+sc%,m#=4.WM
%\nFRL`UglfbcSBgaE+1D&EoeAj+G'37iNl_[LY>j3-d\!>q\nXo[-YAk?A:j(gs/a/BmtN(aOm`*&guhTp)=_eWmQKJ^OTBGehPP
%JiV7kVPP$GR]-<l0MG\bE1t>?BhoOiblpLLk[;Lo_SM'1K++Ld9b"I7S:&]4:s"ZZF,\/tcl';[TEL%-L2M?1;iJ)OA`tfK'^r9A
%a(7s/$K`hoB:J[\CYV<21AME_0X`15ZrNb+JMpWPa?H3_3oRS<d7OnWOk+-A79$e29oCA)2Q%W0]MTDZEt.$:C@[Lf/_fG#okhVZ
%8InS,9r&RjHc&T%cniQB$dAjoJhS"N`;nr+)`jDi(^XD@.,&fiDP_+TO19dhE22Q[!&5]`4;>r6<8du6dd_#Q?(mVR&XM8k_pSm*
%gD\-R",u8J8m4n$cnV(=q/9mSs.tkmJX.O.!ZHGU0Fspes$=I%*scW/7cHAIF>IMaB\?>5k1ST[-.=2#Pn^2c9-nNQ30P3H7)I7V
%@g$%8i(Y&f#D7VB;&TWSE&.::GdH1eQnCg/!@Y_pbn5V%5nF9&fJj#XeQc*U1dKdr=#/?kc%$A1*c31RAn#STX*6DEUD95-\1i[<
%%hoQU"KY!GJ@(`B`Xi0&>9e0nL0P3]rTI3srmZbQaq'/qI`6=E72(nF92HT8gJ3@Y\/F9$;=XdAfa.pD_(7lk<+(`MM_ue$ORlS0
%dK@BG:2hU74cuBsR[(=;;A^OJ-fYcBd[^u=>I`,r,rmMe/2oU+ZVGP(5WM/ON[cGKF)X5.3/*c13H9k/l6T#Cb@2'HPFCZ`SE-!t
%-=n/t97N2cbdLWD^7:$*"DlHg`CZ!/>c]ANc>INA/nU[8,_L)oA&Q75iOpY1KO@ZF#)ImTW#3HB?SP#i"JUqnCPr"<<6DJ)X]0%O
%BF\ZMK'!'ONKa]'@7hOeiXi=\m0([*OlTt'\X(Q_,BGSj'Rq.V6+DBa133`n8(f\,KK-Jq9X^]!ZU&js#d_lOoQf9uY?b;W(^`^c
%q@&?W3s7Ss-Zd<A9UAF0q.i.;j9V47`bOOGQ7p>$n^.Hg5`]X8C&?HuXKl5AgCfc"NZ?cH?!iXd9lb9=$NWmZL8kgpTll%oie7"L
%XFaie.3B"L6BX"gTa`Kq88T1@&K3jnXoSTQSf5>FrLB!.1HEMrHo%)jS1`er*iJ+F'M-:C?UcZ1hKrl:*D]B1%kU2Pa=SEM=NL1>
%V\"o#HY-M3BI*o<88IejHC5s1LjNA87>R&%1f2!1X5ain":_:,!h];:!9;Ts2\YO!WFL<\E)4$41o1oJo5R1^e.9H`>*cNDEAnTX
%LjUoj4qenuG@cL`mE?idHY3b2/"gg2gbZ`*-5sr[4U$D"lReqF526H9lPe4:l7&Mt+GKdpAof!*:1F4[SP9od86Rhr3)PW)jtbN2
%fX\dk+[pn8o.DRS3kqYY8>TH=F]4'``9/=GdfiNMi(EAbVmWMDjMQoWd&*J@*iG'Z)o>ik3l8s$>tTE\'#HcuGXR&`pT.gu!Lap9
%3YXnoa!3>r)+H8aW!co5!<L@`5s/GsPro*;0S,su.iP&kDFH2/PclXljCCrW;=ZNecj6)11H@dCAt/^e#c0*0(NC'lR#i#5J5+r]
%DM%'hH4s/E"2L%JPi`t/-:i$l9'hU8*/kCDVm#4X#meH$>a"*:HQl4):f)%IF=LmniZs-_Jof;J/4"33(]&.:g5_GKd)Kg`hQX:H
%EIp!j3f%q"/MAR62Rk,Hd0SuI_kLRr."Q6^F2CX:4HU=udNc;)9>\#F19RK`ed7B-k9NJ9HpZ.I&48JZ:iIdS?jq\!$&J*,Ukf,7
%C\8c-jnKNUN:\N7'1%S9:$Us+OA6XIF^lW?0r[#2nJF7)EJgM,@53pdbQO3AdE.b@RfD:=22.$($n=^iIANP9`\?4l`<SkRZs>7;
%f+bk0gem)QB*Kco`"3.j5,_R%.8Be>?ZT`\c#I69-t=6)5+)24)o@!%<1r93_(!k.D3$2;#7r#M%<GFW7Y&pZ&-gu#6O^cmn`=`]
%b4Tc;h*W^D#rc*oFR)sE-LG9:O<1R?E%^,MI^:jrBkaut0Rpg!en?re>X<_>$sZFqq*.R:IG#bV+E?JbEJ>plRLH^H_K9<]Vn?KI
%Y=g#HJ_Bp<33X+8P/D.4[/!oH:<LFDeo3@OM2-Hn!l8c^6c!0Kmpu>X"rOO]*)=\N4`=_Qmb*h+`e6$K1F>%DF?=&ed8?pZ@b5'8
%bS2EnNTS[+<+.V[/\Pq]AFuEIN37]&!U:-(&Ss;NYq[I6o9;Cd3+7IXGK)=H)KcX(j5pT`QtQ7e,6"4J:;QO:kKjH4b8X2eU6Dj'
%_(@fci2KsdEcccZ#a%`a1t&7^160T_*[gSiU#EE=\JX]'_TWOWTu/Csk&?'Eh[K6k&P0Nb\9flO0nDpk0o,q[7RfZPB]4\;Zmcq-
%l=)o.k=iTrCi#J8AgW7`GS!]EB1*<b$MH1*+(ORj#eD9]?-rXXoL`Re\JXZTSW*r_9n#jS;M_43H?Oo(BI5L++M'gui_^<r[AtC)
%i5Tc,kT]KLbg"+qE\1MX@Qh:\Le=3$'#SX*K'3hGWP'^:nL0:ai^C8[E0BFN-gWh?)7\8.dFjn0U8&PdrWpo&9&9j$3UI)AWQENK
%LdTPH8.s_k*fgujU8Uho7nX1Q6?FQu\e-)H_i19+d5g;i6m4Jb-#oZS11;n/Qg4Lmk\SI(d7Fb1P)c4u-Rn9[[!WW8Yli',$&A[%
%5='Ar:ZQf3=Aq*]G+q.RQiOgf(n9Q3?@qAb0.;<Z854V2N^XX+dG0ZoSWl]>dW%cKMVRE39H_`\`:Ze4F3N=?T:?W+WlF1G[_N*@
%FZcM;8-*-'*M[\Uk%#'C-(V=BVK$bT,f/us+ZM6&BtO3U_FU_1S;JE6$Qg6RF3J;XMMfo]6):9>fEpj-o+eDc(:+E/UniaC:2jt.
%.0It%-&tJlb6Rjn4%r_DiX*^;+338'Gf]EiSVCV%"q?F$EHK&kW'`%.!k4hdV%5Sd;`+iGPibYp*4[^:'HD&HO]&+)KF/$][$tb?
%qS/VO@]mMK+A\V]_iqfj%slUf^cWWYjD*`YF_l,>;!"CO(*%4Pb\>j&g\li3S2,i]f^VQjS<T>VHrT@"q6r&Q<?Lb;q&%mBKfOVS
%#ZSqpRMlOVZ8q3KG5TcK-AB'T`_ds$]9G$DMMh2bLE4nZ46DbFDO#pm:=D[f*I1'**R>^KZm*BTQkO1=7YEqUmdCp74:-dl?<l.I
%YbMP\7>-GV%m"#`+R%IJ3[0d9mdCa21PY&EnIC6nO#tMCr+d(G@t$<TKA5i-Fu,#cYg[kf'kU,%Qk\uB)+T[.lr(hW4i71k9Nrik
%9[Rg<Kqo1r&<tYo,%TDrV%7W)#tj?S*<IfG1t&mC\^>#=WJHLlTfH_pS:eBe_Uu;3h,?T,(mC-[@kdclgNLdLV`(,%&;440)3UY'
%gT%LAQ)8d-D;1\.%as@DeO>=Ikdi]1b[mS$kgZ0o@OsY,.b.*s-M4\V#c-L+Qm\^@K.!/dV>H"h!AqiVPi4VbWK2$lch@k_S:?4O
%W0oj?R;=_/RX=-pO::T0_2(=^n0/<GAKW`jX@]!&Vji=UdC[,.ld;K)2Gc]+'>`laII&S_h(7UdiM2JM_`NU#7;fc[X/UZAj_GWp
%3_OT(DBn1YUc&$R[gaq5N>%0Q*+((<7=hW14,-gMK,B0fd?cnQ<&`Qd=#pg_JqU+[^-62^9U@B#=!;B;K9XioPKMWAl+F-+dK"Dh
%DZg:SoU2UPZeCdZ]T^Km46+sIQ)k7EWNZ\BR8uh^s3LRrd%]o+3e<X\+K`QW9QW(&6GPp02"d\d;8JJG:+&LliR18e50P9=(Mk"A
%h.Kq;OV[?g>"[>_YaB&:OT]RHRB^d;'FEu2^kb6tcPD*$`i_;B2M^@&:emqL@a+p[4;[IPRr`VT+kl(O*#bo=JiRpJ%KO:)Sd&UA
%I2jMO(Se!F%\]$uX<NWq3\!'L/JAt.rX%n$"A]%?oL^!pK7fY8,P4K$`Z;Pp=[C\k%LJ4R#Nk#BbOT]Dk(JY>;mCeJja'Mp$TtHS
%a6>8H5cYtO2J.Dr,fC[lMa;bWX>k%>a3;/[C&'tYIVpcXN)G4pPB/I!1#,Td'@fG,3!o`Sm^l'M!t`)$[Y?Lnhi89jmjN2B;;tgB
%r*4n_@$i32c(#C2F)uja%eWq_pbluTND.L=e"/sJ7.`2l0WOtd\s"m8BcBiF-U?H.&Uca%(VV5pcg_]B]O*:V_MsV=:=I7^O1UX"
%N7)h$A-*rkSQHh`dRjIP;pklN,\:"'OSVn]Z1r*T>/?o,CdfT]*IT-6`R%(bA61NKXf(1j(*3TXiB)UVWFqmPjiZ;!ofZ"uc2LlW
%2*$ERf\p<#;-;O:npJUeTpAR)2Uc;.8".\S`/bq7Zs9iJPjKs:/Tar]!^[&rTuQU(.G$M2Q&`F.Mt1DHJI8#9Y'=lb1g\U$]9sZ+
%+$E>TKGP=U[HO9NMJ;r)!u@>pUuR+Q)oZZ9]T':!J$5W)C5/*@qE3gj!r8NtGZ$O8T$GDO<!o2FWun'8_M#u%ZnQJUWA,"6*Z_'[
%g=f5AoqaF=m(G30]bSmL5b2/I5XpB29QEUq&7IL((>K3f.RK;u=EbZT&a1rFA'0M:0f0(6s6?JUK&_ln-P'<b%];/:dF]?,I6Deg
%'Gm)US`MR/8L%P&U!q&NK%C1oWo`2.AjcaZ>L'V'K%&tI"QI\WqMZF]4UU?R<%8iNDKjY8-(V?"JLL3!Wp1(fNf0l5Z0!$;AjlN=
%4I'Fq+/=php=*N!U/Mj67@/lS[OI!NiXj]][u3O83c>gMbTdL?FCllHE;:C;Ae\%<O5.\[@A3?R_>k@B\r4oMP>*V^!V4IF]/Z#b
%hF3ls+;VC+@fX+0eO_Lr-':8\#,'u[,!g->FA79J_+.WN//N=,UB>`c1GeV25bdKg3C)TSochKY(msB-K%ukkiPe%j2:)U60GPpl
%2J:E']NDqmSA^>FOmAce0a>F8kU9S>Q1Gn!+o4e,PG3&;n^[g``uCS;RHFR5bp3AsZromuJ3`ER0(50]C6*nTM-3<ANmN^'YW7J;
%bVInU,?6(*I#)l(5J[@5:X.$!]qrl%NIrYZ28K?M[-Qo7c'd/B1GaRj0I>$1Dp!aP9kW(!.BNZ"MD/8M"hQgnmme.%@Y!X)GKBI=
%E$83:A;qE)lGU#kB!\uhrukSh0ne]!iSoSSn;s^>8CkD!"D$Y@@bVrV=9]aCZNWfG348/$@?Ajq3<OE8%D55L1'Ou/mK=jDr3ms(
%E>ce*YQ%uk=k,l8J^h!PRoYcjM?iDXA36#1![)Hr3.V5#N@PRS-<!oe"muO,PkH"-Uu$VFOOE:ndnZ878^CB/kXlWog)e9u@*'1e
%Y%h1$+:uT6<X;+F$;k(_'ptnMbY_AWfAtnB_kKC+pG<Kkfj%SnXr/:e)5Dd9GB?+Y'7USS\X%]V`,b4KXtQT%dQO94bZ9M%8[g.;
%Y!@s6Td(,?8#<dL?Mr_qW1ZC&J:*W$7,`5f(XS6^KMN*B\rOpe;<b06$4=U+"Rc=\#gc(Corts/Wl%gBFkiL5hT"!IJD^N-$KV&0
%`8DjH;\]LJqB5A55q50Q5\+5K2uspNBLKm\4cJ1^\ursbBae?gP'SB+?G_I?f9$t)(U$Q]F^<tr&?<m`B#pYF*!I7HiP);UX!E/*
%@F)r"I@,1J(_?k8I1nW6])&EJKM!!iO5(4=4L,E2FSZS8C29>)qI36N\oao66%uK-;=I%L!,btZ>`#tY'44a.TPK<JT8J2j_Ta'A
%"gNcT+X[6TRPrt6VW`g:J'?1,6IK=B!'q693)L+'oc[1cqNg)D]^Qh*i%Gs[UrtG'j@[=q;DM1;=AT;)nGk*]QC]Lh(7ZcQ0s2.s
%!2Ot\F%NNh0dHdO31!fu0RUZf5a5/3+ODsBY3fFsCq57/M_?hgNiic6itFs=Ts]Sk`!;uL#q2a3@a"#T#n<$^D^VXMl&-^A-OauG
%YQgB/$;`heWLs`<Dtp$+TpsjPVgr2ll>e+J5!JD3JP:-L/Nc`7FiP#hFK04=0XMQqjd^A-&S`-s*(aLgkc,eh!'6p+OO-Z*W2j>V
%U>k-+$rV^/VI\*;Y3sg43=fn/bWn=gl?Y)7blKi8!]c,a\B5[EEicZ*hDal%Js&.*TQFHCEp-O0!ni#Na]^DAcr/[\[a:BZL#Q3p
%*h0OlYbnOf.RNgtCtB+(Ehts9C$H&PBr3L2Fkm:W+%a(Y_K&>]f?."DHGGPR2D&4)!bn=-R-gAPFB]Q4\1f$cXD*CMF:YNe]*?2Q
%<EE@M]T+hY\qm'Ee594s2bd;Tof`%c9a6@j_P2N19N?g[71mIdNP/idk-u-9cJmg"^g,?DY/u?bF2tSs?3JNC3u/bfT\Qb!ONC@X
%06;5@>;<D$)toXJAaBRoAobf#;Q\@W?>Et76A(XIK&!T5(KP\/RZI::#,E3%c4K!&RbS\;1c]*jpqCZ3C.Ant4Bdc=N\??Bj4\*C
%>[*UrY#aom;QWMlL9u+kgIR4+6'#_!MOOW.*c6h1nKeWeI'_hm;9k8[/YQu>8#mYj\'DP,_@oC]#WoEU\29X@?reEgLRoB?E:j?9
%T&FLirkc5iVb#!0W?S!4N$NFND*NYj2*rk<jtdk>7QRB@C:`3m+AkrH,i):uI=8@@66.;/&sF1=`!g.fMQt!*ofR+WAr[nEF&?GE
%XsfrkE2/=Rb>J/p/<jq3qlm6b>G:'<WY<RA)@]Ki#?FRFn?J%Dfi/dV&/;^YY;Y\9WCAc6\B[Wsf[?iBbgDcs,?+pN,QY=G?&K%8
%R0M>Q<IJ8Ad<<8/dTVJ=bEsN5@c]KdD;*:.9gi:9P.'eD9:_.&3Q=\!V6;fPAS>^;Y/-CP<Fc6N(Gl]]pm1>IW8K9W.U>uG]4hlY
%>[nZRA[,;@r+&'a:!LMsmb4A69dcJL*FMt;pYjD\MDPD<L1TVE<#3q!Ik\1IWD1Sgd7u%ZJ`USoUFWm:>D*#[-F:k&N$mT[B'"(&
%!/S'/n=!`oHDSmVLJWsVr332IqpGYSfquo:e-M=Udm2%5^gfs'lUN)<dNHm@Xp,Ku,=jKd"BBIp0niEe\h87_OtHnL$KT[MR<1+l
%9:3<KKXi#DJ[l')BGMn+#C@A`CV#h[RKU!SI3jcGV0Z,XJ0IO7fqLa=fnU]*WN\QP?'70t_IVk^*iWD$:*=KsK'7@k!l=`lR_"M?
%N@E6dKscq+C@=dK'WY1UBg<`B@&C(sp9^Xi@TC1'H>*[N'!HXKOC5X2(kfW&.[6q<W6KEaM3"C6W5CfZlIJr_GpF;'b(D%>X]cuu
%V>>.&+93T?0M)gIWs!s+V^r(+Jf&G1[8BC"6pW8Y:CCA6IpX3&O:4:pOL2_ll;Zc,"g0JVNX6j7h/EFpV%,fFL':?k0CI1=$<5!'
%h?J)G6bu+!"QI:K)"Y;;b?^_hW.egtJo&$&Le19Tn>$,J#"&YKHFg-D/)5*=h.'CobTgC.&%`rPW%#ab?e74ol#'f/Eo3X$;JhXj
%4>Op0!nk"7`@tFe=*8As6MPdi[R,qc/HX<i"SiO1M#\0SOJXW]-B<Z2WaB*]-%mDD+XAK>;;Mf##72*"$G:!WHH!o74K]X0E"`=>
%[\_"+WSj>M9'="r$6CZq"^Nmg!(=H=#gtmjJh4=%Jl&.G8qDSI@S8Z74,sA^bl:.obF&Qss.eo>PJ%6EeL!2*4B31b$-6ZL:'\=o
%!:mc6>@72=!2LSKL(>jahbN)n5700[X$CG,5aW7s.R(9`FB->BC$>p?W<Zn+bs3D,`!8TN:1A<B,6d'1*XY0+`Ch:EhZ6,Qb`JeO
%4raa3*A+T'<AKJ/1HGrR.M.pb#>[c2&VNGCWlr5)U.5Lnk,i)7pboXN3A^qW7Nb4C0n@%RpInS\Nh6ZchL&'%KeN[I"tW+a\mudH
%Y[6(]Y32b8YT6E:`UVp#[`%\;bpY"I"?r-P5dmF*fq[n"?'h=OKcnD_$NNK0<coEA"Bh=q.[;:b5k(Rs.d),lI[;!t:D)Te80D51
%jr1D<R"M<[8SRF@Smr*g%"#r1KORF;b1>BXWhPY4*%7tWGSc6@C]n&AAJ7V5,tXbhj-Zj`UW"""(m@:JjGM(Kl@4jF&1n<4pQq"G
%]M"ZYFb%oBcj]C8;+miQB)teai;G0pg`1BZoc0aWmcYFSU9-[dVRm"Ad8_=@20Dc3lFNQdVo2/JkK!eS1PubV.1"uo;AZXdi3"P6
%$*5=P6R?FSoUqGATe<6gQ[*"Sg<;H44g$%4+%gNmMHprn,nnI#H3X=F<=07F1Hf,>ddf4k&/fIHPT,]Oo7Yks$<ITG$bE48a2mhK
%>Q:oI*NK_Y_XVkZMQM)R>prZq#!qKO=.3^'T!S-11XXR3bRMToO5K5Zf@d/0Kb][V1('*eKF85d%r!6/(:N0:cd?#(%#HKP,c(Pb
%f4Bh*\ZI6uZ:)cFSCnff<+_$BQ--!9UOl%W9RpYCTKMIS>&Xm#+\8R1+1s'6BufEi@RkY-\pc'JoEq$2X[V9hX73V?#;S,%/B)bA
%@q2<dUX/BZ7KNBUBe=$99JWHNCuopb^DbiATum[.W2"J]SO"HU,S&jJJ(bh%l#kaU*+9;!/]Nd=eZHA#+:V\1hr,+=Z]PNclfH%U
%M/c)O>Qo/9YJle(DR_=/QC8F+Pu%ho>q)a<(euH?Uu32D"D=U7Y`*6'b_0EeGqoH3pgOr>MnZ%RH62ZP>pb!U07G7(<c'hpW\MMQ
%2XuJAY+NpYN?WH:,&!t.0S7Y%+HXdRmKCQVZnsnB<^Cg[M4`#bW(J!Jj+H#ganh%6(-0_iG@*+:)JJRQ6*@CWP!T6VnqWM8="ZM8
%.?:]o3*-lKK=ee-Y!jrPJm9t9E6N>gg$3*u\TAIB<^DflD&k+G5f_.f>*6P"qs\U9+HU6Iol5%=JM_lf/*\u1QX8:mAh)8&0C>\L
%86]*PPqa01T=,@Io\Pu#':@48##^r6QF:#eoZbbJ[2]9kC$A%t2g&D75aJiAgsDMkqb8Q-7fl>tJZT1?@2$eeckRdSOJbFp@.AbE
%WLP$o8e&'\2G`1mD%&(Kf9[<r8qd9WlKU"c;DJDBRt3hj2TI'Q/bIhc[bE(i#:^NcW?R1&6+KIFm;&KAj[3ZZ`C0djCT#[d'%i)U
%p>m,3'grW-L5m4ZUb6>%m9!P`Z%6o8L*2XpHe10%_Blfs6QL'F4tKEB>T>>L.o8lCXcBI6*4uBk;At'<2+?e<]U7r8^-aNKM`QRs
%k@(6nW@F`a%2]HLNe&Z3K2?:Jg9,9Xj9d)%$3S^+^r9SMW=(a&q.)I4Y!Lu"#m/f&BgtSr)qK.G01J6U>BOCrdtpm"#D,WLhf63+
%b'f8)p)&oGC'r<NZIGtSBG!R9k*ha_1Hl[_'M[\V$>0b%`SmhsToU:%qG'j%SAAD8*8QCh[!*o]MG$LqK%-p5BJi[fRJ0F&0"qst
%+Nf_\eXd\Cpb&+W/2:X'=7qg<-ZQ]k*@g9Q50/(N]t2AQ5Y'IO3!;+122:!&K^5'._k[WMBtkH@B/j;1M*XGtIN8P_V>h)P>uasP
%^?HCL%:*%lT#:ea+s3%WV5"Kc9o_8(j;f7Xi6htEV+b2!ol[`imi+V%kXuIXE*_(]NZ6PL>BgFmKQ77%1s!N1d0QNf(Bc`F*.k/F
%-D]Tua@Vi6Gmp/j*lG)[$>=D&%1IUF[Ul+0&!&4n7ZbZ-%C1+I#Oi'JMHaC(^N!7Z\sJpP%L/"#j=qZ5&hL-,U]ILjKuAM&m_WO5
%iQB"LHd!lL9UBtrn6d88F[=L@epLi2Kf4SIqNrEJ>KUK>F@3_okbs:IL6!@/X_#@b[V*H9#ZQG]EK<XlV3g`Y`#Z!H'H]T%j+QKu
%310sVosgn->.Q_Fk:[+ZKWZhY[ME-'Y&SP2Y"ah1^pFO+S<'?m!_HUO+t[[(,#J+-(h8dUh?^E0J<=nS[jEXHlf=E7A*VdNL'gBo
%%j:<)OJRk>%iV75o5R-<;klu5cLH.mjlu@D'L644`>ph^!4d-*,VlHI6:jO]"gsSSJ05j:"sW;c/fnf2R\]p)\eAR!P290-eoZZj
%D0D$.61<S:-d7so/S,'q[&2M?.N*A=.E?d"8@uHT>$1^<1be%6TR-0FjXn!60i29f&S%?MoSnFfbTBJLE;\[1W=o#doKW_")WPDh
%N]C_:k,$a+OH+d%*eC[<@m&1;&(:t4BuI3hHIb6UeP+#aIM=.@7URE^dIEQ"-f%T";(MfJ"9fiZBc&6J:JPX'._QF01TF0HLGslU
%g<>kVBfkU2!?WuXa8a2a3i-N<.CYN`PQa'.NQj164pJ4OB[^\ebGemuX*(d.VpA&"/ghUUVo0h7+Q4`4f;Fua1J"J6/T!W029(W_
%Aq)BYBV,8^%gHT!T<"rT#TVagrQ#P*;9VL!gIQ0<e!Wd'@]CE&lYVk5r#sG\ZtNNt%Nl+"[nlS8"`0I@fdS\\UYTe0!2(9=I._f4
%3]<sJ8tkIo3;%5:G5[D8pZF#2S6gbJ`NH.M!3VTPU\$+ZKBk8:@?*sX+D&N/rT"C]eGUga.XI5OOkT6,'U+bI1rg'XAel`-@9K).
%;Y<c,Gb>_F!uuqH(bn]Smap_TQVNbfKA)^_WLh;@),men(!9e#qdgZQ.PSte7D54l?SQTk:3G"*(gA\t\;n#pCWV]Aoqpc81>](4
%hYTN7FX7MkVrF%(a!pZ50mr'o?dVl7(MLL%=L26]Q#2utC1D4-"eV1@Q9N]d.[0*JT$hL;<#tkMs#T2>Jk7r&'<th9s7tfgUcObj
%-\LuQ/DiAo*5-ngR7,7+/L3or5&u2@=SfZ<L)=TUn[OioasL?;UkGmi9,rY+[;ADq:?lk%gmXS:s+Ykg>X.J=N_XVNNRUubfbmk7
%psNf'A1DfqO=9IK5+=(P;7lIO?=hi?^B*hf(`"u_oX(K7E9G?A1:lfk<>cf,%$`Tf9i.,NGdWuH3,O%j$(r!^jWQJ;ma(#uj?nZg
%Z'%.XGS+.YWAC$kRZH-L69i:E#,./F2H&<.2-`4Tl:7^MY5oC[HR38.lbtU*d?.aLl6etGV]MK.\X"j!TpTZU.7_q):"6%pdLHh"
%^?SAgM-\3KYV@LT_F'iD*-3[Q,Y;]-$a]d+H-jr91rkQA[`+&8BV-@+Op:1`'R(Ll4U/A;3BW]n`Mm^P$tDfJfpL:R"0PW&fp1]E
%65]R^+8rT%rL9CE7%]E`lHr+Tg9qYa/pIjL^rI9[oPqJCbXn9:JS@L'a8>t'%7*f_\3M2)8gD9Lbm]9`'s%NMWd,BBSD0E=059SN
%TWY(s.D\Z$+n<,_"?@t1(dZs,'KdoN3hD38Q';\"JPgasJH@\OjC)?G<@@bWb$<JtD`bP'K*c]ZUYQ"-X+U9m<#7JBUooX1OpL#]
%F3qrQ,gb-KZ>J<n8!#pCLeuIc\uLbcml$^D1%T+#h6$1VSos7^RCZ;X')@n8aAjUj1^3+N+U!(*;\DBV(\[1LQDP25o5HUZn5R5G
%"C[gj5jI/G"BgbV.Zc*%(r=6D%8#[FrAFhqKKbmNh3]'f*]Gqs[Fp3u9Pm4[bK\i$\Kce&6C>bp=OWUF&"&>B+I2hY+A6qDqh?O"
%UrhZU4.9SD$[W&dKGi'F(=<AJD#'+U61)`)PjD6N-+<=6CA3kqCj?A^:-&s-nOuqI,WN]d5Zi?KaUO@I6lo#D2Il>09cY<SGXA?J
%W1;+#31lcH3?__Cm@1]JkUN%[U4seid^P#_*1&p^OEs+,9b.'n/Q:9`[]8XT[[nr&p,'jSVNao4V//3<)7G?m4G#P:L=5&nL`4Yr
%-,[=&k8Gah'W3<c4X5tR<HV7j)1l[I=pgtO@\J=aWh:;+Plr%[5b?[TpZXqRfWD&(JO1c*+ftsmn@"8NC2/;2H75HNB\u34"so0&
%<aO\0:I'%O)ZjkHZ^%Zh^l.0)JoG=:1;OF/W6:M>BJIJ=6Me9`m5)_i6J\Vl+BN,W&2UAGDI;4I7KmX@l>f!UW2+q_&@96bbVNZ@
%3W_eoFTg%"<$EK:CffZ9>VBW,O@02iD-[;/`"2uaiNRuNRM1Fnl(&SQ/^/7"ZLPH"Vgu(i8NBlW?]3*((J%0[66IoE"B!57&VPGR
%"B#m#q.aEh<)o?5"LV37?lN1"4CW9B>`H<@OK_+6V%0pY'JhI8aUtiZ`5BLud[2L-&OB<32A/t[cTn<FT-Xn2s/h;"&VPL>7HU*%
%@%=%=IGa`b&5s^ZZUZ,c>a7FWh[,2;ca7.0eVYKh<*dO'34Q[M_duDVM@igfFi:Ob+<3\5)N(;5,8#T-VsC@qHigmZ>?bZn'$-DO
%2%2e-E$85\Q3bGsK!Ye^ge34JP"s'RFB(D-qd#IfW1[n!G:b0^M1I?6KJ6=>[(ro9:c8A\OKLi8FfP[PJO6]ZT`CjZ-smiB<_,$L
%N$_o&_C#,HWd$*[$OQ(pWh;E(*<g^&:Y)$K>$%:(>Emhso@.1]"C\O!5ZYsLU"J@u6dIJlbEQ]f*D`F<UfFjk:eA#"inQG7*RDsC
%D\Go,l2j9U&gWJS+>j!e)$mf+B82!,ZjdnDl;f-mA>-#,67o$Y$'WlpdZkJ8jN2M^*)!%V\0QU&/n.)-la`l:fp)p08QF7"Trq4n
%NAhJp7R^HlNbo>n:ds>c.gQdQ*&<-8=KbFh'rA(V*@i,6D-9?]$;Yf]ePU5fiJgqF@VY0>jP*l30_\ll,ql5?mZUc3@`&Kr>ct=C
%g^U:k.J8c+Aqqgs!H=n9_@AlO=M_n[@=&L+!+t1lVP"L#Y2bpq(Xb$<\SL>!$DBMgKPA]M`=jKdSo*]O8R'LS>52^F*c?cG8=RA=
%-jgc%N(i!'PV7DmlIqi7YNRkX"KC])aF^7gd&]8eUTA?)8ItSI0r9,gcY&YM-1P,V9ZLF9GAaDsCl(\42qQ*f%dF&uKKAB8-pRsM
%L/.Z@f5!K8XdN/Ea6@)cPR)P4kEmGm:fU#V02`p1.Ci56A1DAK]6)I$K/MFbamr..`>+h_NbZPTEL!1F'Zd%2#RKMF)T7m>,:I-"
%+B5'g5Ti\o7?E."J07-Zb9DbS<`iG]6n9ZLk=6Xe_*JXMg_'e]FXbMhC55W3Wss!D+Sd@Gn<j?'GU/D:F@qY_Y42)lg^(l02$HFf
%O.cNF]JnN/jN+dKIYC/J!C^,JN(_'Y$1@tL$NV/V!eLEcn!C4iRn(DR_]k:T?5>%=)7e2?gt^V#]30J+ff-2m[KBtQ(-+3dRSe7X
%k->FS$UP9[-3"18';=+X'T'Z$ln3`@1TkrM4gbSgR-]K`hOCbB[jX<u(J-Rf=UWTNLE@s>i9L\_T<c#RoA7aU:(jPmTo[s$QP;hg
%*C,f_JW)d81_tDr(8DO%5X63\WJ#TVO@'XklYuaR%W%GH;4s,6dGuMP&dtDWNX(eqNfo@7pkMs3Q<mGO0SBjRL$m,og-->OKP8lj
%"CeAI3_3$_,`<$A>/L?-Fp0MN=geFRWurSd6n3C9qJ^+=\l4=,<E9g)N56*e:t&LJ9Vj/6bG!W*j*A^<1tQI0DGdjZe[E9H]W76h
%6j:=L,=a9OCiFL`U?<4o%k?0B#*8'"6ZGJI6(uP"e)]BJ)$6%(9GBJFB>5f1/kEM;X-:XeeHkCL,*iJ?$m7rg&M3"E+tWeH5WM'N
%G/Zbc_-d-P,J@@S3_E[deRjG4IKWX>'oSZs78Oj3]SFDNUk1=FF/(LX68O=s#t3L?d?,oW.+kJA+GO#*W7,$>Ja?)Wqa`?mP,&\_
%F=JZ,kL>,X0_,`7`IS'l!?pl@;D`++J_I,OmJ5DdM]t[Xqn]lMTrjBXnDTG&b!7)DJutc)6_iBAifT/YCLh"DhYRW1)(;YqKOAL?
%`.3Z\5gHnKF`V+F*lpf$-o),SLUs0IIP=/h%bgi##[=nEF>.T8(1M7Y!,Bqtj(QH>!483<p8oaO_IuVc$QPAHjFCo;P+DY'.Z5NP
%[]h<t>F#FO_mX.QP.FUNPP9qG659J8T)"&&8ZioP8W*u[!/+&]L4Etc9?P?]BW;<?M:A;nZBu6AjTa)3!S-FdCCZ\AYS52<O];re
%A@PcA3R\'@(G77%6r_S>),QqOMNS`K@,nU_asml[o)^Pp-DsU(D.gVls3-B3^k20BiXNHZ!$tIo!?)O%rW-?N3R*0XPgT"hU"9H)
%'3?6Jg/Zt13Qbs_e1CATo4o"Ur8;g&#T_3FY'!tU%@@b7V<5-T5R/YcWC/`Oi*n@g.DeBdK<aWrn+S/!ejE&&-/#8;61k>Y2H;]p
%[F0PN,Kp%;gt0IA72k$b6(0'^Thtf!J;061!:6Yr`jdnKq#D:'!2qM&U;S1-/-pPH60/N#lJ/@(s,<G:js-46!n#BEdV+TA#?6>.
%B$lUNa4G0&ah#e'1RedqgbT'je#?dS;/HY^J9h@!FR$YqT.'D=D?],!+HPhB'fj.=BD73i5_uf4@4U"M9?SVn5oV,-k1X)4R_.8r
%(!b!J`N39_QEsd8B'tP9O)ufPbL4D^HhO72D/--6NCV?OR0N%%AHJN?2".ouAM[J&(3Pa/**]PI3`Zh[@0+b'_$eTpc6b1MT]&.)
%U*P'eHAQr3?$<=4$'uStF8NYWh?R!/[r\'RROR7o<QUPa2k\3DZnaUs-mf=q0!?87-[%e7,M)#=KJYf2\'%gS?19J2G`^%GkTa5?
%bOeM3a*OC78`Z6p`NG.Vb`kFd2cQp&P7U))(+:Sp!&\VTJ4>ePdH:/];O7nOTKNd@#(ANu/buKZjCJX(\u?;4`KMJ]K8Xm%ANcE$
%NWV"=HsA[lgu9/ZU5<Xuka!'t0ZZ:]\L0\;gulW#jbTjV*`U`Jm_$Ha9G2P^D,K+86q,dHi>sgS9k>sagun_&Y-.OK0(^C.(G\e5
%QB)2H7(-UQk*i@$Jpb&<3mW+9[kLF]87/%qZ^_,ke^3]Af*=OZ(neBbd!uD/NO\P\B]("Q3A*d<\okW]F2aVJ&P=#F3K``0Y&9G)
%%$7W:<"e$=d_T<.dT&"t!Uk(7!pPDVI3iF>eG"ACm1pkKiROJ-NdQEs</H.*.i[N_*7i?g.k-[NDNTWm:5#8f+J__rZ>DdliA0C-
%V!f\\GR.0Uf@Am?re(J0jE=c`f\d6Pb3LeGM"MTQDb_%%fD2,s/Hlf!KE0D"rEqf"?E<@@`IfT\N&5p<Sf?GQR@D*PUR_[#R6$Ho
%WimKj,Z:;L+q;au(%&@;OlR9m5!ihl]'G:pVlU[WfPmlph#a9EKub7J#doEuDCN1P!uj1lWe1CtYf&\We0_>9a/0?RBj$U)Aa$t)
%Z%V+dWlZRS\GN,T1OpfZ&p#WSHem_>+mDR;OjggkHI-;lU=P8]GA36+0nWOe7A2*d^?I7#e:gZ,Df%D#$?]]b\$Q]sapc?H.F?l+
%j@rf>5gf]'3h6@&I_uZ3&qN_fq8+bMi^l(<6`k=BJ`9sN(G&I^kZA'XBHEl#6>rO_F9aIUT:/8k!%D"H2)a0fD]>9\fVH-@itK)N
%"Vs:,Rc%D<PN;II[76]m8Fm8B\cK?TCS;@YIAhFnL*C4`TaDt1[h'8%?.SGQ)s;aCo>MDfn"CLu?Q,WChl"G9*gI<3s+'=!7q4)/
%S,P3<K0W%d>o=>;4?*`Ac>)/]i`&4/3BSpmClU&F+o=_6PVIl&-mp5^TVI;]1[DG;&imLFdp9C&"k`Ou/)",6=VfKf7C"lDF61#M
%XfcZ'4oJc.fq!ku@g3'&Xe"o4N*mH+n'ENqPmA+RC$IL[,=OA8\kb!BRB5oDh9V)-'oqW8].U>=1QH_k:i>f`NT3IS:XY3Q'L:kg
%YJF/_%X'TLlq=uK?[OPMGt?B7Zi[pA'5ITId!btK[I+^0;F2h*1HC6EP9Th;IRdZ()a4!Ufnc!)I2:nJT.1a97O[=PP6fjR"o]j$
%SA[YtO!1_^3qM'Dm=I0(A&9Z`/VmC;$$sFt-;qjUU4W@,B.Er]As]_t4W#,o82(mgPJg\4BQ=F^Bej0-_LW<kTTs6T'(mL<;B!tZ
%T=6E7,O:K?YS>o"^lYH>F;QY]2%cSjEl*G=L\6hJj6PHG^\gtrOFN)PB>;Ojni[:c^,);_&nSQ#I7pIQi*2l-$3pui^(>T'atHQ(
%d1lc^e/N>krK4d5h$r<Wa*`1UB7T+73lMh]1W*F96oI4.:kq;NiAZ?%8eJGK,"`M4/mgj/UGq*/ohD8IZ7jXKkMk4*Y.>b+\pn+?
%6aqI<qt#hm2l^e.^_a,9Sgg9Y;BDD4F<;:?Rg&I2?7&*CQPPH,=P'?T`9j;k80%2Q48?#>.f3lHQIdD_gBE93geGEC!Ds(b0tJEi
%]]"`9/R[70BH:'l8-Jil/VoJ<r]=q^+O-(T\'ccnRjCmcHPRl+JS<@_6l^d%S<(>a9kgU\^%&AaJ!8-_P>7Kr'a6WOog^g3+MO^7
%^A<7*IJiT<mqVfFfIl'*`Og\L1C:d/8`WA<%HFO*J03CbRl0jb\sUg,#sK;^T7m=P5T<sTTKg#GrurEEDbn5lc],!#[MHrQXm$'D
%$<S("i8n:&5P+mE-5`FgH-?,<bU/?UWn0Fs)='lrWN<=DU=CMR_kDX_^_B?ohMlR&kA#KHkgafsCC9?ti%i?6"XaW[?-LG*e^p)I
%r=@_C&8o\B9J-Xj#0B#l<%^)@IgoB7Z_="6(c,o7'Z3W(Hi*ZJhHq(BrEYoiRl5Zk[(Y,?]@j;%G[0)'@k8-_"u4R':]".cI,>mO
%oqiJ]K\E=<l=geJIedfs]U<#34r]IT?h^E,s8D]8h^D"nThE(f1U=oQF-_,0s"T?9cVdi]LF#j/Zdp!E_.`K:Yh#H3rR#Dofbj4k
%ef/_A\cY-tSa4'8&a/b;^u8<_Z1+XI+1'On%Gs?dmoerkf%ug%ep?.E!;$3=IahP^<]mR.n95E!VVY+92j<RNB7oaRle]#-he0(+
%0)@d`g(;q,C?2p5;Nu*N%Pr+T&SDE@It5hEU`]o=1\h/,@.gQ";"($e8j9]BgLonBfX)(\QlMmbn.XMc7BK`Xq6oaLQ[Rc5D_$=d
%&3@hH;a]>Z#i,$)rXF;R@jgn%;1j7r55j?^ch%3=e5\r1QIXgAlp"kcc:uM<Q.kA0HKW"oRg/+'818cVDM$^7lapn]bmaUNO8.(V
%DkFHs+_3<s[Pd6U&%WWQdYdDRn%\8AHq(4_;$1lFTG*C;NBlIhRl9LKXsF?^,;X0M^ELG]c[\\o*9#QEc"K2l<oDBFeg>ASM(BJ%
%=[lJ%*(iTPVPZ09A%fWLKXfSG=H)1#$Q<AiQO+?c=/Qhr?A+GW2=bPD%Pj#"TpDE!.mm0,bc%M2I[F!ESu03s\.9&JqR5*bFm/P0
%WQrT:kE*M.O+A^/%Rj'f.JjY(T0Pd;L<N0h(ePHqS9X;BYX">0DtUG3ZI3D0UIdP+=t_a\jTeU*"4n(Oe:j%BC`WA<HZc8tl?s4X
%I49Xuf%6G>b>506-TX<<Rs%_Ll^,(:rl\q1SuAAiLs?b!b82$:Q,,<o3g]X)hTX4tB;k\Fl5;l:+,?:N9<7oIRJH*jgOAqW?N!#K
%@Wq#jKLh/EGO=^S54=l9d(,$io"';Gff'rNIW4-SjSM7CUqIkam7S9hs1]*(c1SZb0H8)g$(SQ`e24^Gif$;/LYH%>KLWOfm%49C
%&^N$goKGW`3c=I*A^p$EFT_UGc``m1;>/?!-A#c4Bu>KO`u-1*K[g)@n_@_mnM@PjErLki"oLR62T;cqVITW$96rHl/+Lq]n`-Br
%mJlsrs0)Ios0]N/^\rckh>?&YOKS2%=2Io)1<J:+#uD1'pL+7?cs]$ICkf.`1R,[rnmM`uqD/$V=4l]FVE-pO5Lc=/URr-PofU_-
%g=Ku9Aoi,XUPQF*WXXCKe!j\>gQ+PMjm1j6T0j4_0O3!$Vrsn:7.^?Z'N+?qBLQO*kNXNF\=[,4_1_F+f+q[E+"uXb)^<?P*eosJ
%;=ar0&b#RL5-OpfjD5objZd/B'0Phl7\@e2qWmY2J=>k>XDsVo=(q<u@Hgk4W]sQD^hNH=hLT4G0>e=gT(t/<mH4Yfo>a-cHC4L8
%mGZ.SVpT.#O/MMDE:&#$0n7"Gn9@n0n%[6KC2N;ZVjJW+_3DZL^iKCu-j.m:8RY,.PH?j9fkWpi$rlI*OC\i?jBpeFqkr^j5.';'
%BC.#.BVie/M!3^dNUhu8NIpbcDu2`3bhG=1>PXbC=>*U<VajU@<m:Jr:B$/"B&;ei^Mi-aRkd1q%LE1-9:ct>";'WqJk%MHi\8)W
%?QsKH'#1W&.QMJ-?/<hUW;"WfaLl6*[nds%"D]</o$2!QBr512`W0=0M!'0cEPG,8nXFeO&J7OJc&>c1mdq>)Sg0.d\HJHY:AYEI
%f$XK%9^W3dH'-MR/1nZ,H@JZd^R*"5qCafmDiK(BAjQXSaA)fOenj11-Qi)V_-c*Nq]iL'KnN`7PG!Q'inFjNRe1npS/TZDAbWNM
%T$&3Ub\uH@jcUg#Q^1U2V>>2*3Hh^/)lMldRlUK0ZT/N&"LMo/c^tfGQ),mkJh(1"1)[iS2AtD5/^Wf;*r[]lqlpBTYP&-"nrm3f
%D7Xf&J'm"'3QGW=2QQBVIJ9V&h[dg*_0\DnT="7.=+.5q@Jh['3c""plcD+]q)7^bpg?PO]X!MOi-Hh)FNV7Ti6G2,Tt9QHiI=*)
%lLnIg+jn6WHRkWbs7t*]Aeu^>$J'2,#K>tiF#qEUR$ZD41/\6l5+rWED,6Ek7CU!Sb?n*8rW>p@o9flSonNE!#Rd>!qfVBEW3Y"'
%8:q7[It3D$$_PcX,S>6C",Z]Bh`F*6n^!O;:3-V'$lI@%qr;'3EdiuaB\-9LNdjZD^PkD*3IU+X^]3NL;Eq723*)O$qJ!SL."e*]
%2<XK:dA$Lnr);*WO4AfWB0EGHOHa&ZpiZA\9`*l>kO^gbH06!>N!P>k7'@'^C%2;jC]*h0?iKK2O7i3-q"*Z4b(mA8;Q=,/3Fgd]
%T^`<<+B!MT;f+1?cU:.Hn#]X#5;fZ35'e+E,qbb/;)RUc$aaMk*I_l\5<[UVTQ#DJQG;A1s4_9n^2Ka[81Y_@W$HgbTFI%\)c6f]
%B1+J7iYrk)1qBr2,n(2]M&J#JBn<h]le?acge6sg7XY*?_-iI(U?(XKFPU\TTW?"+?,ua,j*o6cI$YcQPU_;j%lcO)KW]5[];S^;
%W*<klelE!"i#<Hk8<#NI.,l29)sLk?^Zs\S]j:gYq'IRe`!8/tliEPG@h&I1Cus7r+8;JJ?f0H3@kY"@Ho.2sZfN&\/5X>^oU%K]
%imb%q@+s5A215@O2ZbQbRcUrmk#o2)bAQK>f9)b*&m1R9)h"+D?TstL6Mj%`OS\*tN#",ZV]rG,0CS&cQS[(_N3k*[2psra@ch'G
%)@/C=]^:I2Iug-EojsC/PQ0BM0D`=g')=C>.DUK3MiYU:me9*?IMgrQq'XGcn7fXZR0AQP=!?3XV'9%bl_Aq4=DOSIG&oUa#)GkO
%]tRmnK@^@@6@H=1*qk+"'!sf&f17dpo\PVdRt&/ZE9(SmL;_rl.#;IAD*Ktu4njK.A?Le;E3>h)WtLoL9:u+cjdA>"Q@8PN%+gFK
%6_C[k=J!M^O[%i66k]iGl75iX`peXJp%^H:fF,lK)L=M'pWLord4Dp=4`Z0;%s&Zf)9AZrIKE/WrFOmpa\k=pakqO1\JegFSf*l$
%#<qBcIicq)a"'R@r!rn%kA2dRTA-M%".u7oINA2=iuE=aq"cbo=ZM;1O>_-))11d%5<W(:.c:hcnol1$0#mE:o["&,cs<6Z,*Uf.
%>2`k_C\8G-%ucP[W&-u)e[<MgjPtU/ch>\O-MG,ZLE>lA0n_9"AmVZ3&CisrMkm^UF^;<@e$=2$qum?*5PkYs^iN!\s)j*!H]IU0
%cAHpV8sJ,J6.mYW]4WX6h[oZq`qU:HQMt"TQX:YWd#,<Dqg\>irpVMs55T5\qX]`.9M)rb??0QCP[,f'Y3f#2kXY>8>t%i)X#"uJ
%7JKl&B/%mIfQD,Uk`+nC!5?(T,kXRCBZ6sAeJjV+e/@mf5Fpd*%7jc.bTZOR5t@B%q22c;+5.aAe**@+96eqa0R"JUn*VUbEe9%>
%?eDJh+?:aFFKb??.O8B1(SWA!6[q4Bd[LdIqR5*"fH#Io"^bWQoaV'o3pINY,9]+ADZBQd@Qf6aqWllS^Aa8n^^s?(X+i3j;51Vq
%E3d>7f10\oGdf2B03^<JmGe]N\-!FAS`X#'qne]Gp4\9JJVK0S6g$S,Q--?&ZBnScjg.t]Ie#Y9D(*`WQabf?LJH@Vis&T92?u)4
%T@Co/(o!?4J'u/hM5hU)1@>%g=M,N[pI"k-3kV(GT="=0Qi3VkDOKJp&gunoWdK%+f*(91HpGNN?]Xr';&J_T::R#Sr*tb;p6&K.
%1GBAD2&t28WhUNP(/9V/kCd"=c'=9-T"S!I6`t)q'ZM`$]>!/#?u'r3cWS*4=TOk,99r&[_Hf+"m+i+n7g-VKcht&RE2J9^*rk'q
%e(;muW2Zr@ADeT)#8Gj4;N'2+5iH7;i-1-\8JQ7tU`lP^"pS`fpGjZSMpRV(-j-l(/b'r]s#i_@&IV(7R^d,mF5P<,fA&557k%om
%-QT-ajB2Q68r;,@Gn*hdZVfDf+!qDEDn>*"3Wi8m!]_5W0ZSWh7ZkT7k32HeQNsuD(5WS_C&p2&l7<l7/7V`QUkg=iCG!l(%K]]u
%FU+/)]R5<7;ZHtuDouX-CWPrlEBnEnk>rdq4k-\HD(/"AY[[`>N?1P(BQJYA*\?WT2a-bVS,hasAJr9rP5"q01YSL(hU1SIUocml
%Ya\O=<Y/si8\kRe<re%35nZiHdtG:%!#=T`"U+*t6S:E^2Sl.1%i/c#q=4mdg/VQUh*]7;Rtmj`97epN4Z415HrA@I5(GZb9t1&n
%7fV@6(\6"uc[Pm`,-7j(s3I,34nhi&M]sC4m'j+N7CL0Pq:q'Tii2W@,!sEUSmT\Y,fAefY^n?m$0.+J6-?\BZt$L(<qoWZ^7lgp
%h8a8[;(DM82/<`f.J=s+g42Y`1-@[<';_[k/^2t,s8%?q8>!sl7#m1No7qn)TMWT-`qO#\/ara^qDiUmQaN;?A7Yn;SUDRO\_^\'
%"&C-P%X*F8\Fa:cb'Z+aVn^PZ4La;(VsVH:Np7l&BpkFkBdo9=%L0<"&=nmTri30s?,JBY[CDdL[dt@HdYN"PIH;<*>kmNa56o(>
%)Q\;17%Vj(1L=hpZNoO$%Gs?b0(Z+l[4Th/[2=dlQqVQEPJYV;I+d]?&GsUmK;%k0,(h#T(Fg(,;GgL%Zqs&1dkLJ#Q3j@k+b`&b
%o5[k;5ZRY9Zu/16nA^#i>h-Ae#=MC,*)*]4$jq/fX@W14_F12[X1f<'MbrJh>q+qUV$B!n2[-/nd)A*6T[3RN_b5&H&,ep,P$`W.
%r$f\(22RG]Opm_6`]*9GEpl"C*8&`b7<MFs";?I\?QO!uY',Z!q&)?grf%DD"Z'_2Rdu^`Uq>hZA$5YKoHQnCkI`Ma_kr5Z`.]li
%3YJ\s>Woj9XnU/sP<QG6gLop8E%2H3@31FP'KkJ$i>m,QkJqoKj9#J>2T:H-GiZ<m6\6Ge*_/L*&t`IN;(FOAerZ/*SF0*1qHWK]
%4<-"kq"@j;0cXE6cl4<:d@au/H=<t5`13+YPAg>bLBK^C2p[0)[*+Df=Fg%BTRQj5F07S*)l`44l1h,s.b/?M]5GotcZX-cQTjW!
%Y-*<d4V=5UHS,ep#)_ufI+lXOZV8?Ygg&+rTrFJ2!N8cq\1fs*o>gR)F8cD'h#Eq9EUBI\EkK\)h#6[`(dAl`55odoAV:1p:*dsr
%8gCdu$dD/C(WVjsiQ/D[elKf,PWXpXFE\gg8lM,mErDi+d:kRf)E(<DpLiRaSfp^ce3q#9+5QuDKtodCSL<\"a*-j_cR?HuJbhI%
%Y<NW3+boFM'_Z[;>kOk2qW0NloM`Sq@[3;cY!&L'^#ZZ3_H'Y,6.gK:7_Yj'07:)o^O<OYhet`\JZ4Co/TS"A;ld\%P:`BH9R/g6
%=:$Pj"X_2@^IN54o3mRWndA\"s1kLPFi1V*E5g&T1Nu(e3S6bYfNhj6]G"%"Ms%u/rq8u@rfbn&@3#fqirjLPRKq)4LJX]=>;nU6
%:gq\Xs5e,TT@_l5Tre(E2&C7K1aWN`b-"?H=.%knh$UacL>2Yq@F;lCWbeSPqqL*hJ4?7^YH6,)O!p9>NmG=QG`P&>n?5XZn,&sd
%?RTbZ?t1_`M?_BSV5t4"b9KUlCp1H!rsjB,rAd6_02\j$-T=KsO4fCAUt'(#TOh1P*UQQR3/rrqgR4KhZ:c-2\Mub87&%5qDsR?Z
%K6&&8M$D]c%d@bEYP&u=&`p52UN(bH1HmYTgLgtuTGq'-CVANU=E,+PZ0Nd0p+&>D;u\3>poKP6<W8j=7-DmSHK0hj@oCVNVCqk+
%Cfu87XF3*/fFc#HK3O[\]]O/YO9XV;RD[=RLL5>_"'qJaG3;ck3W)kFT0J+')Y*4$#&=]eM/=hDQ^g.K\6#MiI/e'@5D_UJo"3'%
%1uq>>Jk6Ya?[cK,s8==M<qF6el?+2?8<DJ2pL/;d93(huT2>:6?h[u/qkLT.\)H(Sm=!WA+meXf\dp#Yo'W,tg@*jQ+1h5Qh/D$;
%ZjdP!iTL0N%KEIMrqfK!XlKMTL&/@gK.h>JQX(Fuf6lDQ&EaOYM6CiurBZol1ud7;m=!W>1[NH`FUuc<%s\+g^NU3;m,E5S^M1d<
%*^#N=6Sc]#lJfSY'\60:d3=q/9c+[@C[CI`%0tKkY7`(Y,TI*fVVWE%$V)GUIFd>3>o9Or`#/3Xqa(1bk9o0\H["Gh:4?:?Rta%D
%_r0Z*q/mYUQ[Se(15Qs7b56;oK0jgs8eMG:p:\*K2"QWTO<e*"O.+")`4+&2Hr&bf>i'2-M@p^dp+?<Z<;V"inREr]X8G[ZSgX%r
%HKu*I`4t[!s-uZNd!IF0(t<;7^J<bhgWG;&L*QQK+"&f/rDAd2NVN3MK:aJFl#9uV1">6UI+dt\_KQg2X8G=@SgX%&\W0QP:>gWL
%^],_r(^B_qpULX]hg1j/f?lI&HQD7LpJ'E<VVWCPJ_c-#T/HCP!aiu'ia?(>0VUSJqW-C[mhC6;jEHm(Buolk#0"+mGCNO5s(>#7
%jIr_V.3@qL%((XBojncR+_Z9@BEW\Lr&fg3]g$6E]+NpaC[f4eY##V3f1B5`eFm;mG.#)'&jLU2]?9"fjEV@_?]L+T^SR"k;^V%B
%kOqn_-ZMRA^?7MH2p?sR7?Tpqp797i'R$TCAdV$I^4"SfHNn\54H3E&i^38&Ke=kR^%;!'J)AcSYn^'@[s)gmJ,,)[qtH_rN!0=>
%ct_TDX-OX`f5CI*[8\##^$S[Bat+*sE44NNRsKRC>4"0+gLgu0okI#U=4;dA6$:b4ero_ShtHs>C<rIKY4=L\H.&bdlan`hr2)[W
%:RT-,b^>tu<UN9$;g9H3:n',U]LXAT?DfJmrBV)VRdf^Nk2$c]Ja9&6QO2H_V`)[F?hSgonD1qLWd`EUVs0,8@lqHNhLEqdJ,d(&
%P6_Y5[D&Tg1*#5Bf&YdT?MWcUnr$odB\E2MSTa;s5lsG2inJ)T^*O'G(Kr-"8.ZTkBBc%9g[C@MSiZ[Qj_l(.,XjP;;L;9=rJEf<
%qbQ51\<K-SH.dd^6X%#:gDn))7VT%Rm6pfZraMBZp&:UY3#_>SZNf<V0QP(/nZiBE+6FX3P>D(HHgjrU^T79,6_8J[MWB)o]PPLc
%\r6S4F817a&\a%X4%WakrjAqh>%Kul2/H]\#sG5eW[hV@p@EG*Y_1)#j6YX9&,Rg*HCIH3Wr8MLK6^;Tq[8^GlBL)Ua]o09[0u!5
%qi9gPC%I+'I!o5dY?@1Kc^+-)07W2s0@@9tc3s,[jE@<%:&[lCr1bV=02C[p0Ke]E6)6Q*S?PWkna?A9VcSZ(?Z="R>U$+Ls&&7n
%=\.a!In>ISLVHXgVFQU)JA_,(W)f:lWWh(4:bdoD7C%k'd]#1urgG9kXC[6q=DMZ>QUMG?T==sa:(H0p1%-2h3HTpZC2b9gK?"IY
%E.n\EqOk$aJ)#e`IskDcY<("D1G@Q3A+?7B^SkS3HnlOshL+^<fA,7?'Ru5Yj%l*//bMcN!OYD]*Vh?70#2E7`eDj%q_,169Y:<)
%4&Y<`K0]6*I"Yu=j'CCHoVL,'Ff$B?/:k<e%BbKrrMEUPkSZ"[JdHnEGC9=s&+0>l[amZ_VLLK:+8Qe#IO[l4h)#mi-nEU?pAUqo
%po@0_5:TZGT#_!;X&VM*^oU)&N6##;CmP@`93^NK(*h5779i">%!AMB+X#u800qXa''N!%J*tUR44Mi!EUC&)UD8u*;1UhOUknJ(
%mR)WA^9.+TgtFt1N"6s,74g#/PVj;:>4W*n@s`^S@/Sh.I+sHm`OT=?cOG0J(fus*1S-?e@8r?1+nEqo/BHF4_*mm<IcFDE[LZS6
%EKot5HN2b,h[ku2h;Tu3G;Q&X6n7Ha\a9mtro61#q!5P,s31<<IOm\Vmh[iT$"#A%\]:!19lkg5;#GI5HVgF(,\E'W?%Omj+K8%X
%kD]4"%R9.tFoAnX?^o"=2dNC'3Mf=Nd.PUGr7WWja;3^AW]Y-=f,^.l9HKDjgA#_=#CWcKcW&c6BuIL,)N8pb7aAHjbJVR,Og;Sj
%gpOrsZ.<9)ebq]-P+m($?Xju*FD^#o\>?>d6"/6'.+WY/\-/*]D4F#ucqs[nR@K0DZ#?Z@/o:ZMN6]/MDUu@dC`5CWA7+J7%>A!G
%?(9`Yj6PH7J$F.rit#$oShU'9TCoY=hXk`VV8tI0Zh-:pg-OVE(MNq79X\lVY#?:'D=GE89A&!AoR:8`S\f;!7pc5Af<*sA:ae"O
%5I)FWiZF`Kq^C7"HL>=P!.35X>-;08<Lc>],'bGXXpA6K'O<tJ4"TM"okc1rG].7"1]l?]'W.T9b(s/m=!RY$p4EZF6\KdU'd5GU
%-5(0E8'8fs9f<OPqo_FI<raZ;Ef)WRS4q?oT$('Z!Z.aW]&Wj[8m<Dp^c^X;20csNZO>3HAmMa;hBch+F/-dbc5oeF77TViF%=oK
%rFI!j>>UQtp1AgSL8p4NikaIbATrN*`O/?8Hs/\n6]qX="UPN3g#]LW9](A$C@8aA=u!Beh7WTtf-j:KaCr]ci&1_4<^N5H)2-"t
%(Fs^]\EZn[8R=o#VV)DU3kh8&i9)O^;D+]r.0T$gb&C9oWeQT^/'?H2#%$s7BXnL!E2sU.h;SRSp*eVRXU2QV6//S6[CEdhDbZUE
%;7:7(i`Ec/&SHb$p/=7\/#:l_UUumtJ7srq*NL,Of.C-eCZ>JWU1+I]2&d>D5oMNrOf+*i9j8HmfDXF""l;Npjg'fm+.tOj'h\q?
%,C'50TWO>5c[qhXZD47H[`c,8n+U]Wn3X#hd8%g6[=1L5<#oVhfUfVoHl_#RC'Hsa;)Q!J-bhV5HW'7$!sR)7+J'(Dr=#0UO;^[(
%pSj_6<=O"4*aD$D8fHJjZj[k5LJq*0#6<^5-)_YqYrhAe7YBI<.B85P*K91!$;\VKb/eg'W02u>:)Tgt71U.fJ_b[tKcI$Zd9I*2
%@H8+K#76n+Y5Qo^lHH3RqY29P^p_&.dDoO7G,%%H"YCl4gSb]K<(hL]lS_q^l:S!$2^I@V+\41;3$%FIC3^Z8^^K^SX61n24tbJJ
%f3QlK1I2soJpJ>4[(?5tmW7gtXkm-'e(5?\;9COgGrU@m1dak4pg,XPfCKSQcum?m]<!o>k-@,\]'N,IBm-8)K=(&+GOAd\fo5nG
%6op9LaV$Rm4HU)LddIbt>*,Pm5;Ra,6CL)*_bbYm1G]PJ@P&'Nmr4cf&Vbb1eFW)f"k>a(/T(ulQTu3G.g8L0&6K*-MHmZuXa<S$
%%<YFeSi%"J+c%\o4OL/N_L:jBI-a(JE+olJX:!\)]>`i6#\9`8+I\g"(YWBibr-!lk"[8\4]P#dks;%[k%Fas5+-'/!L;@?14fn1
%MiK)X(%b>ZIn-,cdWRha:8uoA*[cMD/jR%0gM<Mg"QD+%Gu[52Si,EWEfDYtKp,Ppcul$9<:gd4"H9rDP?/N>DlR$E/+OB2Ve:3L
%4<=ORH^ed<HZ8%G:$'qT-r.?FW4J9Pn_egY:04jY>W+lF-ckaI@)4+OU2fE]D_%su'`@.b2H<uT?(f4m.ahuqojLY!WS4:NS%lDs
%OH[4TZa"?>Ee1RVq:[$<@"L7Pkp=pbJCPfC?W'h*S'hj9i]WXQS'%3,$@>LH]V_<j`S1A<@3S5Y&d:@`2b[@6*s`V(;@$.62J#3h
%o2qQVOK7PSe$85$oSq4&Y3r<c(b0FW2,<>JM0<s5#nCm,BOND)9U`Vd:h]*Fk)AQWE<uEWfdMVu#c5u]70X#V>JSdim?B.a71cs9
%m15kd;f3cg^_/DsBUuJ!dFGY;EVi(c!'lP<LWQX(C<+bfG#IG3U?nDlT94HOCWE;0&>TJ0%3C6%KQoo?Z!;C,/IX%N.mf*[)orjT
%<OQg<VLWtUYO.N\H_G:.56utU+:/j[RWI0JjL`S^(Tm44di8?dd[Fp-DM:?%3[J"r7PgQ_#j(3C=aL,g$d'*H>!=0X:%r?YqpVRZ
%C`sC]]"L#EQ@mf0IYoIE;M^%Eh%*="aUkG!#a)HT:qA%(Fk.GD%T3aHh@qUDNN@DFI82L"`IuEHS`p5jRf0cWXam_S4j@FadOGkM
%`?3]8;d"!=K%/eU>mio85(=]t7X]u'D0';A+F-i.\[LuJI2AZ2,@S2[dc?f$W;9HA(bRg]PWVhMW8G+9%,M$\>i1d604YO[`fPDR
%PqgL2l_:ec.9"nS!9Mc?FgtgZ,Rs"G#\lrA/8Lg!'uIL%"GbNmCL'mbA#[,j)Od3IF?p!!gg3(Vj6Eqm>7:Rs0r0>7RGLiijCs25
%f&"TW=X2'q&uN-hXJl87c[_s0=Ak1eg2VU1B&[@ng6)%@WBIK]n2SGk9Wef7a]rfKap,*H%:d!f*F+dpQ>>s&T(Yok=XH1mMI,j`
%]OGjN/BJ`\B'dppP8G<?c(1oH+Tl%RJ<hL9CZdj<!B>8BLJ@-/KI#d`g?Q0oA'0I"HC_P5'Kr[a?b</3!jpeJHYjjC<9QhTBi^$"
%9`aC['XFa$)UOMnpY'RaTK.)0;d\X=0NTl&"9GQu1)+?nPjJ\>,"?)`BN#%&k,Ie/QeABE2!`<(_\VKM!;UCT+VCB0r3bo38c*/D
%4]uT?5Y@&XH6aO^qr^l;[:APC78&PKIrGPk3R@)mO!mLVT^tejPs,_W:-Cl1oi[L9HGgCd:+gg7^<tcmi20^@A=cFr(,SAe]"[HW
%X40&6aBqleE)BfD"Ds'#%I59s=qmX)Od]qS#,'WPFj!c$[%6^lBWZ`fj17ruA4'i;oj)50(dKUB0(+(r_A0b)S_V[jf6eK7:&k<C
%[u68)6D?%Q`Z^<P\@Y5]>N=..OjERAj!i\"U6P6MomlVcL3SU]<8(VY+pcQH?'[KH#S#%9=[S.Nlh']efoIjP3ME#A&RuN_Gi]Z!
%KN-7(J;ME^o.gse2@t]`aJ.&Zd&qR7Y:5U=r>a]ed?2N#E"1I&\m%Gk1/?5&f*ZV<5Ic->Bs"s-Z0N$kVo:a#;V+NHISTLqK#S.r
%]-RnELF='XJIGkSDq.7#6kL%Jluf/Jfn0B++rO4eRL*a!+:Lbl<]md<J,iS)!8\Yp2!=8#U\M7K]6joj^8qAuDdB^G\R&Q`JN6o\
%YiEld9*s!W%uQA,5g]4aGiQA/81K$Q_ic.hXWn?_f2r)n-BVaGGA`ZsXreJZF@ol&7Q*m;-D>#SW`1/,@]1l!5=N&aK+eSA]qZ?g
%.7-W]dO!+5,S46Y[.`j\$d'5NTjChQ:IFYK#g<>\g3Pm5!a>+tof>ODI*/U#%8-`X"/(r;4!D.0%8ZS#haft=UMQ.^D*f_uIS`JB
%0D.`5[5upRHX>IHFAZ/>oUtZB)gW-F7Fu^<>T9H1Z<-c8UU[H7Z9G6?\%"5@+/-CA?$'1_eR4CKjB"/d1Q6EC[@E<F2=t/n2_RK1
%D\-J94=r0'abmo-+DRh@i.r'&4!(b<0\:cr:.'4qoiV^K'^_CE.SlY3KU-bf'=0l[Y$tu16B<"iNcsANA]V9]LQ?!d"$oN`cd290
%C5]"P_oFCP6*%hXkJ>Mg$mddDS"?;\C$I<d[,i;]Oie=VBNq[e]N7C+Tp-WZ3a$YpkhjF>ZCt@Wq6A2<W8D)TS&9K5T_L9Q]0_t\
%PZhKba?,9*J7*k_YF$i!*;-#lS70-6gYG!0P0tL^#o\8mml^'Eh%ktVWCTkYH_i;?P\p7gTb@u@N4.\V0U"(Yf,_"!1_$RBZ9quN
%I<EP7mP\1Tj?:%HKa?/WW:si:NEoA0))BWL<nWWDA`^X5gMO,t&@7&.>Bc)2WTtW8E=W_XQa#MpQl+XM0$?cnMe.W<,`3WV+9M]L
%2-]dW)jada_ID3eNV+2R>;gbrdM<IMdLJ@0T]Odc0O#3Mp<A_pD"achoU\mI@A"(i(XZ[GE5FKJOKH;)+)]/clYFH,Sgn/`:71=$
%Cll@6Uo:GMXZ52g-uZkqd+1^c\S-n<.]oq#Vu%=qdWPW8Z%CCdp@?j=e$6<iFUq<krn7OI>+Qs#5%5$EI8/,tZhNmoK%eq0[b6'5
%/L/^beSJ+=d.+KTW((8aQfO?KL3#c;5/*CUS^8do(tQ]INQcBXa=S:I6:)X?*Z/DT1Ut\NI`">c-SCJ89o6o-Y1uHiP'T13.M3ZI
%@^2f\*)Q5>C,H0JMd;Q!h.RloEguD[E:TkuP(Ed)Y"^8$1IOs(#GAd*]fDZ'V^U`N-=>_o`0rdrOT45E-Ri6)CBu;E]*dQn+,;7A
%.bmePCT%ED%o`u!HHOf%j2'u.\S`md2QlW,1=hJk3NQj[j2'j'Pn%LiH::BY!Sn!(Q1BL)O/kca`G<p2kap#P8&2V7Xcj<R0dL0u
%c-UEf9Ad5R-kR$Sa:@BZ60jM2pIqElJP^H1`AQLK%Hptms,=6Zka,Y7##,TTnuGSje$=CY8p1s]U&CYX#\kY$p^@t9;?OLI=;MlE
%_fReRAOVco4Um,*eF!k(:Gj,ier7)H(0cd#i%Ii,s.tr1ckXGO!f,>Q`P>WW?\][9G$Lahr,uIFE!iigaU[T'2RnVICtu@jmY*Rk
%S'[[\'t8JGVHKsDF0c+e[*fj!6]Nlt5'GEagN^2g`cp.+T\"'%o?mPB,!o_1!Gm5Q3if$]C4D5UF(h!5D556:oZYu5OQuI^V:9=j
%ERV(Snu-AmiP#J!AUKkd"LOJZp=FkX!t$n4`3*DJD0iFa;%GL"UU[?DkIn:3:jF^`GY4=-!)6%"8fg)X$+9B]1eU#>,+\J"8(Fcq
%MR9fL3])n%9s9W]TS7->#*ho0lK/:hZl$09O.-'2259\(mE5rBl_F-N*>.P(cY1+`gL[SOk*[hOS!i8l;"f7"%06hh.W0=@4t_Nm
%6B4LEIY>*P:H#&l)QB\ED?H4GIG"[#ZAS@`4`O-VCk31C\g7OCSVu&:1V>9m+KgW&Xo=2]\4scP,X/;i<haE1c$`3L-_d,o>?@Zi
%6e\;;HS's3:AJ$^9n5%!B[=SXQ1X\[EJ$d,.uKW6922E&5cOW$p/*8X_KXUkZ+P%<0I+2XZd?(DOe=.r[0=Zp!iE1Cg0uIeUZ:Hu
%P]<&[>Bf7#?jiRrd%3%N()p,6`YFC&YeHo-Rl9j21g:`0]k0j8qILg$gatdGedYn@E"Qimq$#"(k+[!Q4g\3mH!t<EQF+K]8b[X7
%f=%SU\\tNh2Fo6_J4s+oBcM_`<hO,D0"So(W'F_(Cq3*Xp2lj?cktCXS9Yp\TM&Iq704?9E'fj3)LftTT7mI2b*^lhG7QrE<c[O8
%o]s/_CYj?kS"[:nRL]aFJ5A7^.[*F.^pKS@J\cei]raUe;il,]lK[#d!KFJ"kLF:k-r:e6Lgn+E'P4IFES7u7A.9I(Q+UI)>bD)A
%QFpSUN'4o%n]'I9h:YTW]s;Ftd#q^6n`T7UQ&O,kY2.,pW]o0gl6%ISa1B$Wc:pY!JUGYQct3[]olBs3e@bt2&Pk&#[X>ti1@6L%
%P.!GsUGeCn3Qb+LIkX`_pFM4K/;m4cSuWE!J^gt,@ZrNPG`sHgo+S`JEFT3<+pC&3niLfC-o=#(!PRADm:5u-]f+,O]DDS[fmqEd
%I]@73nIX60*P.jTRcurug8+'Zd`uX[XRR9i)$O3bkk<_sf&u]:Ir*g8?Atf%ZMCbUinFh=3<?6g",c>rX.?N;@D%,=.YIUS[t$B2
%Z?F!j:QNdIA/=PRWOcc7>q]J0g-J*7M_=hX"/T"k0I]F"BWAX:P_cWqg,!PKD7dnmhVKprS<p%QbqcEg2l&DK@!I\<Q%o$C,uaup
%Z7;o@TqG)*fOf?736>=>W`2?'88B^\Pg4'H8f7%XVG$@]ag)+a\KsTQoml$YK',mn*431";CTRpD<S);!BNA@?1;$_28J4HB5$\Z
%cCecc)8cJ@.H5D"bo(HECi<@US"N1D%4'bf(EBb"bdbb`f65Ok-ZMCN>N8,:58g/@%dhiSpAdoK5as<ZKX/boHE)T!dUbqO,u>]O
%]16_E#RXEG:l^^!\KU/=J'B%<(gRCG/uS\g9,XM\TVS6FU6!p%27%gBlSLS[][2F,k+TU^&)(ti-mU%*TD8A_BH@'DVr$-T'EM[H
%_hL7JD*,CL8m$P!em`o@a*^LFWOaW9K^+]?-so-_$98%(Hg)sgBUs%u4^=E`9SP:JL0q7<N!BU$)^/hUQr:71RJ49X*L(a3$>j*+
%A`[dF2;JZ*#eaf?-!I19B::1K4RTYN0j8Btm1^SPit@kshb`Y>TdB5UlkZ'f5N;7(Z)QfL--fj1B'cjL85.nu%[@*(2Jrc*.rb7=
%]$[=ZI52N('c.Rle^Vp!VPJI>%_e^s`:pEW$'0+WC@[b2=a"X-&BWi1PiFr$s&V8mm1nJV%R#B"/tC)<U:'i\VfE0k.nG9lV6]`f
%&=U,1ORjU8h.#mqJO#P5"Y6)X?+-lF%ohi`E3he'DK=pT\a5(qiHsT05uuO3j+4"*(#oU"pVb>7l`2mn-sLM@BL-qHP'M>eTM'O[
%e0W6D!u.j3L:SP`U^^m&aT;mt1gFPMFZb:FK(nHajTI5moC%97nYmZg)eB-Q+^RT\GNTA!L;HmsFR_oSh&`JI\G>UZEa>Cg11>#:
%[_+C&m7(Mr1K4bl=9A\;6Xei"7N!6;>aDGb)6sjET_+2n/gQ*p"hGh$V?i<Y&:Ps,[Ub.l#YjKa7OH!#N"eW69-6242c]Tc:<iXJ
%$-tL=m^Cu6Wjji>Fso+#=e?k%cn%g[o4l#nTf(3&j2#/;St_oTSb[_Mja)[X).[TQo#(=k$>'W3,F$\,4hPr+#iqT?_,/u]&g=XA
%WU)#\P/)2Z*-u[%>s$$16"KY8.:G-&H_33_RV_tk0L6V_2.XSE8<C_5WN/-MMdl`7bq"IIbq$,FEgKti[J>buR1VWMkXh*YTjuPN
%K2VoHQ,6cB?8"]`fNU1X$ZQ=(U7R'8[H2@=X/(RJ\[cAIF2P2K8/a'.?8-"Q+3XUg#"tuN'JN7pD-(1U5[@.*Yh?I2>2854%CC@e
%l#"Cl]T!!X&XZTt3a3&3:.2'p+jt2J^$bjDcu=58l2;%XFWHB21>#G1aVC4%n"uCE8(#+rl#bEs!"QfOr1#@qPl-MoM149-eC5p8
%ZtDT?0k]9"%)iV:3kN@q3"?IPk.Ta-E?b7[GjecsfjWf"OO!nu813V-=`U`W:mWQ_g<D?]86:3U%BsW9D:sMk`*UR4?U<dqe*b*p
%):ZC`L22W/2]AM75e?D./1[6RLouB-G];E*6ZHgjAi`a^@nJ+OBL_3<T]IT/9X,p#`C^8^of2XV-51r:Rkcjo+e']SbsLR6'QjhD
%Le%Q8AS09X&ZC"P_)?fT=sRdlCr`qIb1>i#Yt"aK6LeGn'Ek(PSf7F3\TiW9p<ck5&l8u_C>An^)[t>eA?@r@h#gB#:^1.ZlWQ)B
%m(TgWh;jm-rIJ#<lK4D=rIL80lDA8eBPuQ6JbJAq%'WtJP1aXt\S_K63bt$7[P$<-%qd)/Ej*Nq#b.6TiVJVq$dc?"Vhq"IJ4;Ak
%\rZ_.IVB\.)J5ej:4A3H#D@uLPl_X3].-)Rgo%hQ.Un.pGtJPA`'OQ0>a](ti0UiI2[qihDdSn5g%gWm:j)<Pi?>XU4Y(3sDD/74
%e&UGEJ.TdjaJ!?fclZn6kEa.4'XL@u]2J<Kqf9G)];*9WCn:<(irYIb5<s)\]lLa/9n<S%MQbr'B9^*T[\3q%;m&-_l0***%6`-b
%mER4YqPsWPSHV-JVri\]b,IThCL@[f+k&WI&X?VV.nPnA#DK%M)YXhXJF4&Kl1T\^D&^b44KALJG`Z8.KJ^4)%Troa+!q,#ic5)K
%kBN(^",*J'!gN'l&%"j[619WrI!(%fCdP^a!p\sV=o/1a3fdj,gC-B=0mnLl7!i8+Ak1OK)[]E1%fe'@BHg`VRp8F*g",>#1;a3N
%<X)c=#Q_p3;`$/#*kcbh7]4LRQA@]+qR!i7?^mb"+]!qI4Hnp1.+oSn0d09VC\p.fT;l[_*c3):`X_E%8Ma&IA@:#D@Xo(-.=sjL
%I7jBqUVDEq_DSc"1oo3ML)<qsM!L[0%Wt$k5&WM`2R,L25o.2>')&#\PYm,3#s!lTWW.Lc\jE?]Gd*-8BZ3n?F@JZ0[?kbM9+Q1L
%qB1<sn7[AhGX>ufD@?'PZsW@i6Otf?I12Hr>pPW/_*61T`P(IF8VZ,Df6_]nY-'Pb!Kc+$!+gL<AM?TlHRfeEJF\MHgerFQTYJ+.
%E_B!6e8%3g]b`k7Hh`omL&tpOZNL'LV^-m[j<.3=/td?]F@l4H6+ob8=j8CYl)5qJ^kbX\3ed#u`,7l-!bd;B4.HeTk`f3^md!h@
%AU:['Q[*I+1P2Bkr(UF<40H.d.^#3%DEjM&Oid5ZF6r9(6Nb[R+UD;Hh)\aQ=Ug[i&Kq7P4G^;L7#cmUdGhi:8D\)Q?4f'"cb4I0
%G`5BQSn*)Z7ATHEC2s!VJF#4m_':g%ek/i^iM^&=H^Z)5*uS3i6USj/lS+)\k<'l^\fHKul^;k$/t09"X?be\N*O,J>p?^$_)[<J
%7&B6hB$&Z81Em`LlP.>&<)9;^,pN$i6pUKK3]R,E99.9iM;V3#jcEN$Ln%Qb0GF$RefA!Dq+<D;kN#a4cA4_N/Js%cE!'VRc(&0U
%^LPOpeR:j#.47Qm!4&J2dhC,bd8#DO"DHA:."K\4in(()@s<h:Tp3g[%5Kbcg`cI(@GqrUr]5RFaFm(pGDB)h#VH*\*1B=10-]f%
%IW=BsoTOER<9pts'SbL6kSW>g5X1VV?WKbJ5XN=-dFcM'#>oh:$l^aj[D7-l7d(h9Kn>DqLpJF&%*N7n&.-<ERSZC7dr#/]GlH`'
%G)\+n08gseL%p-aHb6@ASdTE]1VsI1V5=Xf/'ne)$D?@>I!DK"<B!Fd7(-hpisT-Am.(U'WJ%&R@Q=*[F_fg<guiIV72""9YU<FI
%*r;O$%V79&1e*">$5p+ad3D0V.$b"0<U>=AAZ%-,YLmW"-bIV;bk:=9<3#&1BG(;Ri(*mfR:BW+-jpB0:a1pBEpG01.haVXA97kL
%3'$WnPH=8f*KChl@o4!#.#<6O(K<fY0Y"-(PV!NPJMmdU"^tua_;&%Fq?rHuK[JeWB\UqmXEb5[R<Xbj$#%WZr"No+$T6BG4B!Y%
%(GOQ2f_/cjG\OI<#cbU8(1-LtR^3jcGsOGlleNr_&3t7d#;jjXHV$ukXjaa#']B>!#7SR%\=[=o;md4o)c/#>cOl!I!A1;"@0$?a
%18(2T^T,<Q"*>S/^drJX8M/(#3a.%*3.]K;K6,0OJ_bFVF:FKK99\lQMZo<0h?E3T"J3YeTC[)WK3&;f3qTA2].ot(-l:IATEjY:
%&^eUfd?egWOLk]TTITDhk&<`T6l'Pk[-5A#1'p$cA4KIM""W.r*+t*K`f>D"4>SLr>9%C"7.G0L-RSrM-(81&7QS7>9s.q6?Ia+>
%FRRA1hSTNr!lY[UQbh_!P/SuK;kn>g[^6Q)XJi4Ra,U>Z,'=F>Jg+h'`)3bU"UtX8j62t!HAN<;%GSh[@O-gU*j;"LA]/Y"cjuhn
%q`oqJFh3:Yb_SJPa;JVs$bd5\`gjH=3Ee9$=HR!IYmcqlap-9a`2sg/eZ`)s2H335>d07l"&,KB>X48iia>R$CXcuu<@j%e!kZ6F
%<#aP-juQrmII^#o+h8%$>D]ZA@M@+5:4_+ajt[XUS@R@A]eJ*h&([JLQ>sNA\>jVmLc]7h*kesu:$Y=U8XBU3*hdo8[`=O#a.2o'
%*`iOccTE(5k;IT1+$*AI:^>N-cI(!:%?u/C*(^$I#AKCAZ*bc,FMs&j"b0!T.!ZMG2MsSYTqTTKWabM\:q3M9dCJ6HG?pNC%Vg'p
%%/F9DlHNmST68iG$XqG;S>F^1L[Ksm:mK-><8GU\#272`!7.YC*Kg-Q\'E*o+iu@?Qe4Y$!.gUXU]TG9(:6mpaTAbM1$'#^Z;lc4
%q^%Y*$"6a1j!KeE-A=Bc/TCHi57(o9@7A"s,_\t&"d)gQ&dO&+!dCY`mXq5fF>Tgo8^i$?[\L_?,:PWp2YS5+LXffgT/iM_(8MN6
%\KhcJU\?:XYJ&:hMBB2;FGK$+<-$NPGa6H*1jn8i_[D/U@CsIS6Yo!6Ed$>^p/.P*AMCY:r*4l^M,7kZ]2\auEuigKa7@=tS?R<=
%N+mf7W1[doe^pkiU'rf9S(S4pmui!+`J#-9mHG"P[AZoV46VW2$#F`KQH[E>df?)PF$T\OX7ps;\*^74pDo.eZF?k"U52t5B0%WY
%[Vsn:=tf`ZSg2%Y`VoA]>JlWNdcm`Cbr"!ZdTElJXQR?%YGO.Wa0C*,C2n=OgP1MaWa8S9o4P-f2*b/cGZ[1B5'LYgdM4a_\7f'+
%QVH4?<S%"S:0A(k??@etdGjXXChm'+=KAq[NLpu!\QlpLe3]ecpeDA%HBRBPr)=c3HEt:Id4t<SA<']2%]\`8rUY7#LB1#E)(f8s
%?;^q5>40!J^HJ$t]NaGGe+>lCS62VqffE6%:F8?T$8!6aVrX#$!ORl`W8r!cEg89cTb]B)1YdD/*n/l<6S;A([l(H0.Uh$^&^Cb@
%O,+[>=V+Do'f/9*7BEVR1sii#YX'$cW[9l5hntc(2$.N$NoeA')DCW<!QD972.k.^]N--eoNQ@L'lCDTF[a"Uat50hjKO/pmY&UB
%I@%&`2"hPcikb!6=OKhK8hH]]1i9rW,M6$4hMJl_2OMt\'oGKN+cu4PSYCBGLSRs?0EH2r,]pl7)!VTMD>i$VAhP<&-%53<d;3M6
%&MFau1tTATTt5K3XkC;%<,-A0f.d\f42W*LY_-\53*qLTg-d2Cn)P$4BPD+45gm,&FLT_mP&$l[kE81Ef<R;YL#9r$[%jU,U==`u
%b'?b>YUTHR@k:bj@m=^P=iK\M[f\#-LiXXL/<>CO4_`!/kG#Um'(&gjVl]\5>=2FYVUu&qeP6oLAPn)P:SNs\5$?Xs5W+l1%7B6+
%X,+1A2+/KO5k5)PZdMb'8XHtR*-M[(YW)!GriR[sbtX\Z$E+kX1Z)cMh6=&G,Mo)blT2oeftXW=>je=Dgr+O&rT3bTBT3X$'@b?s
%"WHfCMuM<(0K'fkH(')885om9qBVb`YXME5P9RhsBO#t"4XIXEmV,!"Funr@Isuco=(OLLmsaPB6Ge9o'0n*$J/DupW#Ot37HNZZ
%U!.,Nkp4;5`#Q?D"]8OG^",^KZN?E\(SGNAkO*4k/YLi^,Vk%d`HL7OhN7=;.PMCY!\"eV)QFIFR/TKtM$KB/7[bGDgI70$S]2n@
%*-.-NO@9a<)1fS'NB%5WpO-7jkfQ/T0%5J-3nGquCccM?l)k9qruc/JAI6W)S[-=="/qO\=u?d+P^:*1QPH6A\(I8LTF[81QYf#E
%SJ=f,E2*!g-K<UYfF_hgY6fO@7r-\E7Uq9lq@aDY?;76*&Tg,]J8RSR(mi(0Gdof6g(=G9r7X'tNEE:45[BCIA,LQ@f[0IeUn7rE
%l=b^GAK$neH!t2ffAqOJ'P>l]^-R=fdp`!LCWdh.Lp+`cr:.979kZ097lO!&$'h_lDE:r&MF\\<`C4R#p6'Q[cqMDTO/I04HY?KU
%?!AbFjDu&(,!I3RCdqeU^ms1@On',7/igP?OHcL`oCu8S`:[>9\(m(&dM>m2?kKCWS#0A`CfSM7rP,"6`7E5p!JK3+^>Bh41SY43
%rJ:subm-M/)EPkdTM]-o\t77ULmAK:gC:.T_&1qd\`Hmhb6t,R*!/i^6G#Grg^qClr_5rT*Z!,V%BXlThF:?L#R#@1.fF/aNE4iL
%d1!V:7nI;;&NY(tf)c9[N0ai;a4<27WeKZ<do%6D%g^Dl;"LoS^HSGUC+b0CP'"i=37QS/S5[(.eU(PBg2>f22`Mc^Z9)HRBaa]%
%f%o?Pkm>jX--[<i*H1VEdBmPWU;KFAjY&%%@V9nL18GS@p`?+M%$JP#b"XZ7bI!Uh<WfpV*@T1s<#V7eK$rc(5tdjs]MHud..)Q1
%5.6LWBd:$I:jWs:`kr.hB.1m\%&Mu%g#`Vu[Hn-rpM9?2$As7OY(rab#&%B:js^fha(q/K1?\$5h.CKt;]ZF!C:n'/LUPH2!p]/*
%S)Zd]*rn,S*X*5/AYBkRFM'Ue/F'Rb1d-t\Uo5eY%gI60VZW(a(>=R_*P4gYnZ?:c]JTLa7s>5+4(l\Y$Tk'IgA9TK2t^&N[A.o?
%;MNPSO6A;KH>pCrD8UeMZTWjYD$`76UUn$A>q>Zjf&=?<i^Zi>F#=0"<nC^AmF0t8Nos#.SeA_7VS/p4Nq"TEhIUa6);"Bk%o,K[
%iDtVd4"gj!%FGl'NWDa,a&9=GHJR&Ue*c8/[sHfP0ZFVf(o#UlL\j],@mY>1]5/"bfL<NS#;QFS-sA35m<RKTlP^pmPnK,A7m(RI
%9W5;.D56RS6iKW#FL)RD>i!J]-)a#*1=R8`BtTJmZ>D\/U\8H-[78(=GrZ1rfhX8&hY;nM7pRMgRSXIFI(C7.b5'7m]##'(g!>oq
%dW4n`WEELq,QI/]mo]XC?],/EL%!Pb5SEYG\pJd`f/-am,eG(+'=P>p;l1.1gM^cm?M.mKHWtYj#%I)!0m>l?/g"Mo@/Rq3D+!$]
%Wb=453V@6Ff),ubH9,D;Uq?`^]f1ge$V67Z&&f"\9&lEE7IIu24K2WjV'VIN(RJ<;>ho23?A4&KqTJZOM@7uMnKl[t!kB+pnI&!5
%(dS`YcSbk2O<f]+p^Z+'<a=[rAT#-<(NDtJRO+WdZE(B32EPTq.W7Z)a5@a"jcns%?(!K(b0K,CeqbWo1Q^[W,)bbs;_.cBFN!9&
%k$akOD5DT[bd5>gmHu@.Rqr32\u0S049&jj"$eH0CA1J@[jcjL&Nj2siD#mH\)]RCm_9U`p]%qO(&5Ues39-CPjP->Y[(A5E_r3f
%hWY^>8O#>+,^fr43okE6^0W(Z/r@Y;VA?cg/acS%2$ri2HXkJ37hCs>A-M7Y>"OTRYcY%8E!;NQ!/9aCqN=@&?*J.CcS[\LMHDt%
%L>eX:=mY*dLR9DaIm`te_!W(`mo4n)Ws+Vd1CMkD$e7IA1oFk1+erV_)!qoP`iZY60Q5==C^8.0j>Vnl""9FHd,5]q7b/JT)rU2+
%q%Ie2^O14Thk,eu-,"&KiD54Xm&X-$JS72]+;gIL=UfIi+i@.Jk!,d2)+*@L0PCgYE=>^B->3PC)\(1,BS0DYB_p)DjYS8i&Ggg+
%kGZ9$'GUBqGcq\D!VgIX<r@\<[U_]L%S?F$$eg'0(DB@A*J%5*P8\!unb"-;A_fX:"HP_VE_&,$UJKKUBL^14arlQs\r\?#bm9$W
%Y0amX-lr`O&AdR\9XY!flf]43a!J+QGb#@VGOfH<IADraR@@Qp`Kc7c]%nC>`t%J`'IJ6dKMZ;=UMgDifAF%h>gFhC2M,[/n3Rp*
%3`TOn!9VYJNp2^eVBngJheE84QA];gPnb2U?`*WA'J`1U^BUCnYKbT&(/S0"2a>aZ(#P@"at>1c]+'\-miFlP<RPEq&N!d:ctAf/
%%t!HiNhT%Yh'ecoP.qA8qr+9lhQ^L7*V\`WGV.Uj"\g*+R6`!Jr.^`D8H:fRoOkP(&0<D_fkHfXjQLE)B=,;7Z@8EFecN]DJAe(3
%BF:VN^t/gcgCGcE%$:&?D)em+1;cLWp>&Ne$3cYT6UDBY:HO1?M\@P@0-/=P1(@(KWrA7BLR&N5*th`ed2sMp&X><[Q^Y!)OE5Hq
%cFX@U*)Ps67V-S!e"G0E*uo`$/NKKcZH)<'1u=_\b!noFI=R2&GIH96<XT;b7&P;1k&;sYRfOq+q_lsK+cq=Z<2^m4\<[L@IZT/O
%O>)C]>4/+n1S^Hb`.k[f]md8R'Wou"a_)7ro]hDZMg^"4VRA2<K!"\BSLo_Va@MD"RS+'+ZaFbU]3mmCr%\m]bo`T8+5SG.*H]YF
%`B0D/;P+m8.Y;%T&SdF,DYbt%Xf'qOWD$4;?Fgqf-*PU0:i2=Hi-4k$0hoIIj^B?NMf44Kb^sk#Gm7fTNdLV`*?q)!'-AuKjPR6*
%"E/3`6a^Elp32kU&kDGHdP<&G"r&%mg.lJhVqTAlr>*=2,G.C7ru^:hiM7HIA67W-hAp3?;H=A:@t"qd+J%7cBV&)0a`2":PX*;=
%;s3QC9f**T.0(c!nuln55Y9pa:hr9^`ELfP$9EIjZIS=s6"3JRV;".bBa1?2(e9_fG56AiAud8.fJ4.g!]<Zp*PU@YPQH\u0D_tg
%'tij+[K&^;'[0Q]c>/t-7Cd.*Bep!F]Vo0;V+@If_]QA*]5*g3+NJ8Q\Z)&2C(e\<@Jhq7[RToYi%mA.+N9?AlD5B`nPgChF8HC6
%rheh#)6/flG#*NS:Qa0b&h=O;Fr_21;.#1r(Gm[V[QPV6^VbU8W6SoJ%S_/s[0)2>;=_)-.6%@,m<%$-BE9TrgAj6;Riqq"4%c&q
%,.0b89:6mG#cK!_Zia;;Nqi:A(j$QF/$coF#Q]`aq[7cU]:m=.YjP.LWSsC+ifurceo2;'QK4IU8H*2BJN,p.%mVe;1hX-$-&TeW
%!@d[LS_3X]YE);]&\*bJ/jVpf/E3O(_fm`dS%"S;r[0eaF\N2i%1q#OfVqV-!$6HMNeD0+Uc9-6htaT`j%0maD%7-?LP>0DbSrfg
%p_h(]9#(c6YqLX)(pt+c?Ug9ME[qB`.CMr1[+N>OOb+R7:'!=a0&Q;P.[0u_,6^0=)jAerRu*m?bt(+:1tjQDbik#Ok&Aunli^!S
%$E1/t$QW`KNXFKj!A\j#I0W0g)aN6[E,ge?)RM9n.IG>uha,*lhQ;dZRQA./K[`P+!moHmLd:!!:.:8?1aOo4>>`C&YH6"f%!O5:
%T\AoD[s!7JRDH^)M:Q6r\.!p`c\QU*i>Pcb_,\k)R1S%SZZoSe=HcX$9Em@[#d!1EI`F5a-\:"C*[l6,ESR+oNBD`]$>Mr<X\j84
%X>CqhN;uZV+b:bd;*uA7gNV!MKR7nbOe@8Vs.%&a=q87IG8/P',93_g!W5l/o\:['0s9)7K^ND9@![tEBM4(m2X0'!RC+CejB]GX
%&E;9Y5o7!K5eY+!SJ564k$#E>7HQG"-#uR1RU?Eg&eI5/d!<MYhI?d))_&3&qWeQkN_%L@mj06F?[Cq]oA6<oFu#g$QefKC1'7f>
%QL&Dk"4$Td$IUP%BZ+uAq@'t0p"0rTH0K4qY:/m>-)?&uCoOYsNh\^bF:/:V@WQJC;28G0">QPd:lh^7/T,u%GBj%/P#;bm:WDN\
%(n<P+Fqq0sft:k5B`O+OOp=PC$UQ)2&r?2d"']K"U6GdNQG-];o9KG-OhPM3EgQ1@bKHN$c+!13G":*HipBr"0_8=F-#"Nun/t!W
%)??QE-QLDtj9Kc1btr$+_$a]r-UNNgk(%2/<PmBVF<;YkO%C_F*:o9\$&'=>%C]3-4d+W&Sp,iSP,[6D!0%[hn>$IPD@I6ld@k/[
%!A5U\,!MY;`(MtYP!cmAbbKiA+[RcjQ[1Np/>&bYGLP3,7O^'8NDMaYX$32Eii.^T1j'1<WhuR5SipW">27#:%7;_!f78a,!%8Q.
%J<nVd09YN)ah^-jo/oHCl`P2Kcaor0Nf,?!2.AWPj4+WXDk]Nq[@(Kc;"I>g=2\.4,ESMCa@:(DVF8g`>!0lN;F9,5gaW!(gncm)
%N)&P@5^&\&jVODF0YYWke:JV?BQ8`c<h;U4iU@kCUC/5">QF%QI=]]3X2+p%%3XOniFKY_5_haml'u31B4+aL'IPg_hg3`3-:9&9
%c?`fd73]QY:s]F\b#)3Q%&hnIS:lAhG&CZ].c\lFYqZh3le3-_dYHQ2rFGgO)L";u9+4]*`cG*2&NYkjq_Yg-YEThAO=C_Q=IC$#
%#H/*h8DDt<MIVC[9@'.#;&tF[T]XF2O0f3]L[W'MqEdM!b2V8OaK=a$5m+Qj^;]_S"6[YmKq(:)KR0G6C2KKHc)VN#dHUt]s28\U
%1XrN4k[gB;Bk"W.F$B7W"9+X\D,<2:+>_l*?X]P0mG9=$DP!:Wh3-REPtk/!FiSK*kVTk5@Cr6F$$F!ae2kgPF@r^u[Ob\.!0%tD
%NQUt;))WE4B.BgWL6<AT"U-_+ld1`_aA[=O3i0B7ir_9XrBE*M'qf,M8`fL]oII5]B^^9PH^EQ#5Shin9Rml[5uq9fdN?X*'2L<Z
%+-]A1gV]!8HBdfpUS]<D%I(\ZD!GcFaTJ:+T?<T'4^HBHG\1;Ed.k$j#j.G8*7-j4V`8ci9Y*'Uk)>s`[Cl@6N](pa`\I@DdOZlh
%&HKH\#r)a%lh5K8)S0-frgk3j%I8JCVgE7Cb3"^aCc\8!mI5u;>>*65c)4s"/UC!O,'D/p5ZXtar@kH+Pi4ScNOZF.COPIoB[!)4
%eIVB@FZ5T>(CKs*/TK)'ZL_L@6ArQ#Aiu(_*3$WAVL9WG%_M-X0o'$QaQ+VFgQ7L7&gGCmPs!+)SFD/:#:2d]@CsH%,oWHs<gfNI
%Y<@'#_Q3s1GkM^mPJ8KHNBFV5HXQ(m9X@TUU+Y-FfCg1bWH%Cf;]FCr\jgH)`*4T&Q4dB(J#.IXD%V*1]J"koNG5B2HEUb4N*K.F
%Q^r7SXo!]dEatFCR^W3\G41A%N3_j:V*2Uj00YJp'=f9$\(pFPP!>VGN-N^jMTV@sN+5*EEG=C!7.2*^eO:ik)$kr>d;8^J.6<(-
%U7-Kic5]mD1imJXa4gEt1CbAH9<5>rL-o&\Z$k8KR@1?%b,-.B@=F'Sb%29J1M!WW!,2,jNYS[aA=(_1&?]ll1LmNS2lq=tHK/,+
%pTgkH-9(bGH/BNMg!-b.HX@fSX-25/2pj@7]ar<S!Hgaehnl72FjVot[YN7G"I:T_rEt5!qBuPDWmD`!P^S)9.3$@<99p3.O?8Ka
%#Ns9H.%FsL:\S(/MPuaODiMf7-&Za_;U^(C=]u-H;G5RcLOZ[%iX*$QigT:a$4#@t65H4D?-]_H6.hh8D8,c*Od;Pc)o=K9eVIQM
%hPJ3uX;SF;[F]]q([A-,n*m%lFO:a9*loqhda4".R[G_Sp)OU<o8."TW9usGl"c'pH1JH;'g9,p/5Zm/60#4dJDR.!3`,@_f@Pnh
%QJ1f%d8R)lAGZ^8i733;Lh238:\cU^P@-,,P#/ZgYIUAV-R<@gMN..?4%b5@nVZr3K&WnZ4M3Q,f697ded+!&hNRhoE2=SkKgOh9
%P+tOR]4KUC;_deZ@;sB/b1LjV5X%H\PR&qpFksA!M(fL3M4b__aO_r58?%B98l;97icJFd-Mn):-OO:7C$M<C3b(eLmQ?F^kLK'$
%=ucE]D;dI]Gg-d6DSB3os6DeW"&1[+g'sJL^bqc#cnUo(3_g=3iE]I#\N#rF_0U,7ql`48l!iO7pS4=7626p7Gr$*c@2dIc4eB;4
%dOr+9G"*fgRQRKJe2,jd2kMtaKPCrbp0PeH2\]g6FS\:96_@%6X7t0c4M2n6C7mS-\.@<tb5p\4JST#-D3WfE'NCa[&J6](c'uOn
%aaC=WCR`[1#*l`O@X*EPqnYH@-u:GYFlQR3H4;pkOf+0]4iho(Hp_:r5##q(M;n"F&&nUcp0aI\5Z=j\jt]>kb[Y<?NTp\1BbQSR
%Bhog<q@:6(&SZ/k<Ub5D*^6eWLlS#NC\($AjW=G#dTQ?%=1ZTa_;[SH?WpJ=`!fs;fH*LY'9d7@j"BB4P\7Tas%u$=SG[\8hgmP.
%ncd]I5+/Z*$d/"=.ftYj=AkWXa2iZom8,U^*!6XR4L=p1CFR(+T!D^cD;.K;'7'\%,U!KC;[q1hc/qL%qQib#/r3SrNf^uZ!1%6I
%6&.XFg8638E'S,lD2^K,4%Q>o=O=KPbML2.n./BCdp*<E\Zi+l/HNdo#.Je\@2B'7Ib<`&,S"K93R2*rq+R_/;OUJ&.GIO001m0+
%Ai,6&Z8B6Q+#iLGXV^9Lf"8m/(FpUY#?1CE>C8(7>Vdh="$-pC0G^KNkGZ9o8?/+1aP"@:h(&652@%2o@4q>8Ln&@];Gkr;/$D6(
%'3fl##oLLp9Ji<N6>WBb]`7`uo8^sOUdU_VNB%/Peu%r`Srrf=CD8`"`pALJ3Y0RA:>4?6>DXX"bJ'B$"k#8UBjug>:e6S*U':'_
%6NWl^BhW+DW:tO*VHp,PSPug1VK'b]*4o6\p2M5FeqE@gTQ)))_1?>3=<cu2Z<Qg6P<Pi5<P\j(I62,PV,eC<L_9nkV%j762q,c(
%0KV^?,Jr8f*[Ynr&J,;lEi0TVIJ[g]H+4gf9nUr62A!tLku:,1VrSPV*-g(t\0[Pa]0Y*;fF54Cd7B^K5t.A,T_Y2<=+KULFmCNB
%[".0-/+],A=ZrEs/d%APEJ7uQ_)@,`85SCd90lB?MXYRO`O\`l8`mFh6[2c(@&(%D#Ygc&2BN`QTOT(nAT+BVW)RqnCs2''EXtt@
%IoNPK14k9T&bB+KURAo6heQ)A"'1ecLD4esKH;bA<#bqXnX5[9emr@a"@.KAd$66kT@a.RB*2<$]JMV-^dM/pNiaQ<F,JE])b_a/
%Ou_:MG#D:!jZ&9)VZHV@'utM+$N#9LQ=?QC&pdCb1I59LJDB6b[TJlu.m@e=p5Vje#(J`!,s03crIX(CLDsP/OK8MS=554Xr2HHN
%(/T6.*CUAsieQAOAO-Qc]sBA;JWViS]_@:.*QT5(^]EpMCd4kK]?VBKn^Iho:i]6j5j8RU")cBb;/3)8APX4@Eg.;i%)=dn>j]o@
%*Uu0QltVQTOi%Oio%-M6ePGl[5^BBK6Om4O_J-5@Wb[/4SX!^(bjH__`;*Y5Fid=<36QI&&S7:aUJ4^SMGE2nK,n*+Bd&c*q^tt0
%Ae"l>!Y-EM#R]W,c(j'mMO&?FR5n4H[="G01B=/-$)4?Qq^CBeEM*l'E\(%A*kQ51_(jU,Q>o2XrniC=cSF*CF@mgr!ufi&\ul94
%2]IfgdcXdS9;k;$'hcHnU7$X$1TF&j9kUU#E7BDc-kV=m3U+A-OsfnhZDBrqK5nQnH4Xj(m1MA$aKZl0M[=(:]GT=t1_=]j=f1"1
%o9_hs3([fgaa2H`P:B)ZQJX8kQX/p+OSa$!iY=b[S?c@FDt65,>t\(6YrRt?%X3I["]iQK"'s=KCG4L18r7D'b@Q)m.HtoHh\VIj
%rOd:>d?<I0MY%k#kDX9*,/XY>b(LJn%Oc<UE=g%Dl$1P9\`J%"/4q,>NIr9q4q;*d*=)Eu_FH1X46`p]Y&]aOqUW1gf8_9Dm$>;S
%3/46$CUZ,^+)^uUofJ?if)E"?9T4L*e/eUj;U6JCOnjBePXJ]KV%?$]=^b8;H\\q8&p7=hr"G7-I>NU,OPcPm6eN`eg2r]K7=Gri
%ERJiG(_R>[H!+aD/Z'u%-!j,#6;8[Jl,@Uu[YYHl'nO9EQj?9+c$\S)]0tZ^o3>gd-gDT`bmT-U01\%Gbb\U"!C86&LU)I@G?%dT
%Va1+0\R)=Pj)4IQc4m]X-KN*t6"dNDO:1>c)PJDBH1*F;8L#1B+G\OVI,5eF/2_7$&)CKQ&Q^&UPE`n&8K&Z+:s-5eM6TCjMp+jJ
%OOD#Z$@\0m/dOVa,rK;];$Nr/%0]b]$KH^bF3mrAr=nFBpNoIO88&]A%B'_sZGZBtJLEQ&r@h_5f/A5<Tslg2l3a\H9G:0T2h&[^
%/f^73b)@ag1='0/=k4?T5Ni?]b>sKhJ8-Jkl\m+77"\r6\W[&*X$#]66:4mCo*odGT>3#GjR,Pd7X]!$\gUu)-?h+qDL4*U4@:dd
%2N<?b[<4ji_/h4'6AX3sTT[up:lgrR:ZX3A0L.#C25nPg`5OMQ&YKd>a$^quAuiA-;]Ki2WO*U0)(7gb*(tDs.io%[%qlKK3P!36
%3<3lnij\X&5.fB*79;N1Bt"o*ZBN1&1`W0jN9Zo3=(gK0`sQsc9Jf]Mo"Mc5i?36'm`sRY$8[$1g*O^jfq5lL3`"SF]Zn<LN'c<Q
%\Hh!MBgn+>f/fZ,bDm.aM=N1u,]br`0W(rV'G%%mCB+jVH-cRhcur+9TX-EUm%aR-m9lunHP8_H;@->+odrNkB@U&&3#%UCE/Dj?
%M]\G^?b&pc@;*VI[@RSh)-LlL59MA%>3Mb1BLg_/R\udX#NNArn>SIKs4qc4N_fptZ>c>r[M(r.;V-*r5cpl5@Ih\`.=Wl$/_psb
%N"L.QUs]rRMl0JB^]7@m75BN+]sTq2Yp_a`Tf(%=g*>Jpd5_91Ia05W)GXh@Gc'QnX^.1NS!he!Bm+USoMH9b,H#L=n6VbN.V'G/
%6E@\2hX4k1$fL-RcF;)>S?%Cu)s!R&en^EsTb(M1m\r&)k7)&U-4:#7K#(mE&.-FZS7)+pB*qH1dV^i<W-(`nE09%fBtTbFXdIZe
%8ig67PShT).Bb6E.V&ge#Z+4/ZiE8e&km77BU`5#(D$-R+9.(MAY.S^X6\f!,gt_`g@PDMBm7C,1"KW.gskDqW6.'%Cm3)sljVqU
%O@trEkD:t?b\]kG`="G>^jsEJa655uJkM/<Fu&\8`AKW#WM6K1/OuaAf3ZStAgZH,QL_?E&nRD&.K]YN.jtBiIn$o^XF_aPDr>"Q
%9L-`X""5AYM2&J_'q%C7+I>pu^Z)fkk;q;#!BC4IIO@UZ\UEl:?"M#+H5b*+mT@sa(MlE19neh^/`[D;()SZ.a\<%SoQZJYE.DQq
%4dHh0#pfBc^6N!kCPpsK_LRZhkbA*L]m&/7,[$94pB1%P`3Mt-C@(n$ng8q@"D0AV"1)jqY_N<KJ-<^C"TNpU6r_El5>H?#AlRWg
%@UJ&f:.VscgI'4Z9heX;qJP'EehEEVbf[3ER$CROb)sVnJ=<s!aaa9FBtY/#Mih^0n,QX\`W7Z0e*.GG5eDa"Ng<\Y.cLXtabI7W
%!HBTuK>$!WjY/66!MF?.r,@'YqWnasnN]psrn3tK$YZs:N`B>Y.55rPV4\[V]0,QoAS_X^?c):<h(am!`ieToakQ$M1'm/f)[-$t
%olLc"=82]jq(h"0[Mb3NE>#iVRO%J2/u$9%VNDNY_G3DQT.9!HPi4kD4U`0AL<3Lqc%iin>W[RS,FUuA8]D"*Gs>a:eTl*POFY28
%Id*4)W((imcL+Mk)-LhUg8T,-a1Y#_L`T0=/D#1akC^H`BbfS<c4Ho`b0<k;%ji7;dk09m0DB8KN3g31()Q"Zk%05iTc9_K(/F8b
%-_7/^*?unV:kaQc_9(Au&HP_S.n7(7e_G$C2+V$0<+QrmJL'Qo9t,29H`'Wa0M>BG9[r;C1WO4h6fU?1,=f4DKP66^_3Khq*KU`.
%0[A!r'7+N8J>B70JM`aB^$5)dOhs6H5oIcV`B^Q-nGM=O%aA5bJLY4X_]>tP&ZYPe8qq31/3/mFX&YViJuBRV<T(Y9J4heND$@?,
%=2KoJo:A+c9/APqpks^!eppeCcL_L"K'9HS-BbrD3h'bO+3aU]Y_.30%i#5])cpor=>m3$N6,RGk]]R2H4kjr9FWCic#0>9k(R48
%9W3cP@@q&%?P,As[/aH=c(sY1Z.6u!T3rige1Ht5-+j-\35#\DF++m</(#DsN(+"^@DNm^/-`UP^TM+WGZ=@5NjD7a!QU_IQkMhj
%2*ZYTS>Lld(aoZTojDg=4&jE.:Xk$/)i4_$H#\YQqe&'Z='.Hc"A"M&>$Q9NFK`#?E4N5l)"0R`?6'(s*X&pRMaL>6e/KZ\Z$5I3
%-BrgU8P4^+';OY=Y;MLii'`Bl=[!17rT:A5N70B>f<\TIV@2-p`]c^4Y'4rl&9=W\-digLdpgF2%3^sP*@meV%Ybb1]*"KCNgL]D
%[mA9E1Z6u&qQ#$hn7C%Db"2$aOdm^'Ra!'1KD>M4Z8RUdl=`N'K.k?46tgi3l0R_9h2*kA9[]E`Jj:KD340OSe3(VX4dk]f)PY3t
%2Nm)$)YSm-9K34:GMPA%C,WJt'HPJQ@UB79mA%0."Y`=U"XK./h3j-8LL$u(>MlYW,cm/Z@aA)5f^1B,TrD)aFPsQ+W<uu08b)5q
%H4*VoFo,kAO;OYYFM`FE5cTNf#!2r&0#qRGT<>R9jH_F\GJdqgL5bK%1S*6/WFG.e$]5tD9/A>@bJ*TM,d-q78rhtah6!*[8b&TK
%V<MY;<0_67+(DUh&DNVX=-sH3^idd`Oa&u?ZmZ<=e(u(f[3eRk<$4-5h*co_7g5'Rq^oYB8rrR72M[E+N<7hi%;eeo^D/0lmQ*;L
%'Qe@]_%"K)>NJkXq8>So)0fG>>gbHoUAPhG)m.1nlb&)qgXcn>@D_c43oP]8Q4#O$luWre!<Hg?jlIHDED)@Nii?(s5LM,n"V\N%
%<MiVeEt+m9)a5IVGZ_2?=sbSsXdd/k\-lG\Ho6oG_D3]7',J8@gsO(cJ>Z]I'\naoQu/^=)k:W2`s)(WYRDaOAoqq8b9=l:ML,T#
%MkeuYd<Q4V$W$.jrl@P1Ymog%)2/LI=ctKj)S%8O2-l&:[@K't<q=+sa6C3PQ-W<Arh,Eu6!1GU74Q,2+Ik$=UOt^`9UF4cX%YZU
%GQp*LUm8<!eJ((qeWHgKfpg%V%N(Hk?'L83ENs"Jk$!u7921U@FPk6@`+9;g9caE&<_lEcl,f+,b(J5R\>G';JFqe_35(TbC0@\k
%JFL2Rd^prP*G/hJaa&3&Un]J&pV=`XWAft:ZC6@dM\VSQVeF5`YB;`]$TuZiBSh`bNsnrld>Ab*FPYf[)09fl<)2e)D@76'NN=R-
%)bLR:N&-LI?>[OE1?grW]r2_,A.>>u/s_>Zd'Ti%Cj=XN>KM'3?*Oi#"Y'(AH`Rt6H=*08eBo?dBm]s'1DWJCRe-t$W]Ts=3RhGX
%%p##7LD6!(qu@X+<sdt3)<(r($Ye`4bU#n4-jhZFnWV-8<L.0hZ,M,,T`Za&%jte+/![c1>EO_<oo6eG)p[CMPq(FCH"uocFBUg9
%2OU-s7"0p/HZO*iL3qU+$jm3gF>'hB=jai>3G]gP<ON!S8]FpdAhVUTUHG4tS^<7.b@Ygq/M4*Y0,Hku'6IOt]*YO+7W)4\WQXnf
%Piru)BjcQ2#-*#no-Ghq$89WY6F[fl-l*2Y*(aRudt_tV9p,Qg5Il$kC,2PZ+eOHkS=.NN#GLBJWeo65J>rjk0)hS3*Y!HTkGaM%
%Bk7nt\kZIAkfnR%cVp7aoFRM0V2Q0W+XSY2)Tc#^GE4,G?=9Z99Hd>ke[RDh(82ci)XGr?"Y/h8@=!'CeTSX1JdO:P=T%!HP?ho+
%Bc"VaW+#V5YP-o=]jb?(dO&NH(CnEOMHfW:O;tU@g+5KBlRLE1cnYd_<eCF5J@\g860!WU+^C?2<D2P0H(K04Y-Jo&-A><Y"^4L(
%`cgF([Wf]G1RXh=kNu^jO'1^r#g#kh1?$H'22d4pBQqWdD[&YM-'[=2pli>TDQ'dt"/P)iB&lch:pMIK`_"0<O=h;5*5F5_R2pR6
%8gpn/Y\<`mACU$9Z$("fZ'\Z*5ZS>)PW'&Slc;Cj5aW8Q1,6=@),LuW;tp[L@8IG2!u+A:B]eYN.%ik-!6@hNP$<S:HBN`,JCZ%/
%>Sdo9Md8&4d('MSG:,2VBA-b\eo<b80l0cW2^Q^(-,HHi'^sZsRquuU3;I7^!(*-m4MI8;97f:,gJEn.[YO+WQGounq:iJeFH-?g
%QE@FB/g!>Df%7Oa*ZI,.;,9;2e+>Uc@lQ;G;iArd#YW_h)jZ!:X_i1JK#M_U'Q%fe187OEb;94P@X&(@"rpJ5=4b^4L?dDNfc\fu
%Fn[$bbk;,e/^e9ErupYF%Vj,=*qV^tl5%e.3R[1dX.Q*u5N<Y1R3=K2R/o=nLUoWn>*e1IWrtTP9Grik23/KRd:=H&PV+J)?Cm`;
%$FUSRLMjdbjl2H#8Tk@H1Z`Yam'%W]<"LqpCTRI.R0+t-l'T-'K)@l!6algF`$1td1a+/hMDDe>Mi'o_+dXRNp>D0'%>E"4JdN^C
%F$NGYIq<rbRhJ\^@i%m).CfNo,mmN3ndiSL2s`E1!H3.D4''K]kj1/ee-tUQ<DIQh,JRF4K@)fpC2a*O4.V'@+2/ZLmu70'#:M?U
%M4eaJh[0@*QaP7oIm`'S#]bjS;<BP7f%%Ka2QM:'en.*f'I^*DJuV,m=#Ze05)#!2kRqDA8_Gql":c"7ogJ<(NP3W&mSuMlN?uZ<
%ldZ#+`l"9fIKiuCMi],/TMP#cKjD\HpPgJVoU1Sq(pAD5@Lkr>TbC&tPj@G!#p-D!_Mm02GC,G)W<k:s"ONZI9mC4LN(FEp67@)/
%C2!mW1BEKDcb*elXui,7*@d"@i68(J7JO@(CCF&>Cm4JFe<*6t.9>J,m+o,-]7d1:B'b[D7o]Q9A:+]M)%@G,Wd1_e@L-W;%@YEG
%9gbAaWl.$DAJ4`dl3?D9?fb/qW!7`Okm/N8f_]7u,Q_-==p2?[7-+*#G-tn2-T`I5l+,Ci@`Y8s`Pl/ZIh8;!+b@`YX;rF\ChU1Q
%NERZZeF'M`LE6S-;oFjG/<;/T)KOh*`66h;*,UQI"buibb[F+c>$GLEkBKr=dN'gL0^5;QBWo/?0GG2IW7>)124h3,@>[[_#1Pju
%\4T09FpEf4T)_L\jq6^G)I_.:'%k8J3C##t8#7?5WOaqZ>rGf9R:_h&.<PbJR4of/6hhkN27,rHPX'Nfk6>4Ge7S;P)1DR2F;7)k
%XtdM>O@BJ(GeVp2D["Y.hG6`?%T)$.&/s-P;=2@YeRDmQ.IS`TX]CjXm@oj(UI8kf=.'O":tnu'm:-_<Csi*YO_b+2fg)LjBHV8r
%3L2cR](ciuFWVc)E'uaW3Q)=GJ9p!d4G&icr#;Cj;MP_-(flhWgKnA%-8:"1c0R9>4d`!M$`=lE@Eb8(n(JD)$f>CP1VL:29M*L)
%jX6;iH8c(YY1S>prMubuqfB"$95FEORMNDj:B$Ur*A^b/,!d<D?(h7eU8'('g"TMjol,rEWls%SokO.$Mp:W/IB[LT%WuPeo`/Qt
%_`uml8^V-GV"q't3OEM0Yb/hf<$VWPNAfVPFeR@5A8\AefHt.c^TA#N5Y@Hf*ObXg*&YcKqB$'d#5%R^)#KfI^R@g$#HOtX-(4@C
%lb4:(=RuH/p33:HRf1bRX$_Vp1&!VjpHWEK0F]6L8"r/2h-`h(Y`Z&]D:jcWR?MB$^/a5LQ;b84ck&q&Y#bJ:4;['SH.ECt%L2s7
%2a4EOC>!BcG#r6"\_0g)8jU1h,kGbh2;1TBWEuc_iM_$'[i28bGo#/]C5<A-]sX^4DJ>]lbu>GiD-CB$HS]nU2PSae'(YMsZ]u<]
%A%6+-gHsO5p06gZ.SREG&B^jR9]#1;MQT.%R[+o(8E5QlF9ospOc`m.Q#&>+QFg3Y$q!*Tjq::`gpC\0*Hc*)aLF%^?-/up>.&R(
%YY9gG;Q=u/!4B8IYg7+pTc3uoA6#e>J.mf@\[lua<GlC1dOaf45?pSAaWYR*j"L>d*ipB]=nG*nW04ITNGMGcVpZWW:g7$/V"s?.
%A4Ri40-DQHKK?]J'\,*K>kqHN:)*fuNC=[<mSQe%HQVE]B_U_QlABc.(<42PRo%@LDes7`C6^.uGt;44+3?^IE$7Jh%uT!L:A/)@
%2ND?pE@KQ8Pd/L<D<sP#URF*e"+VN_Q5,<$)P'E+h)2W0aoMq.a[._Nem>T5g)<duVhe1s+Fgd/46"au5m!lt>/7g03`Q'W>ZW;>
%p"_a*2,0K)A(9VC7<TL^k3f?Yd^7^VF,]*Pm(5)k$I[(I>PW[d.(0eP0h9PY5=DqoOW>4Y'#@eY#:G=C-O(0G$]0&^X<IG@dOG;Z
%Fq:oV6rsdp$O@3F?7a[t\T^,cduV<%[=#lUVd^gT<T'%Q3E5BF:<K(!C@M?mnS]+gE%(;uTPRD`a!s$e[*al^*j!IYo\!`=ME_g?
%536j*6NVlg"9jQCHK5X(pWKb9A%Z(+^[(0k9R"fl5VFanU8LgrT^\.<Ph\^<p65&fRAhmjA1ARacR0&3N5.I-BkLoLI5Ot1=/"?;
%VeHUcM)^rLHWa*tR2!bNf4K2s%[r'E9B%Q?BAW8-j4nTlS\F+"/%/8q.:Ha(3JOPTgX,`nKZQD>,NMZRGG@:l^pNN/Ak'0u.]TS;
%;W``l1Lgqb:t9M]pKYq10#J.\rbcTSNP;J<O>l'Yei_B-i3q=+(hT;gQu&:&,L\Q"a#ik0Vdm)=N8&G>5&#\MD@6Z/Q[qh4PnC.9
%=KaVsK%^,M$"M!'7&tH'MSXcYg3MI$.Ne]KXHnC(U]HROY?KBEpD80XVK&8d[=AK[[<EW>fn!]r#biUXb*s\B$If9EVEo62,NQi^
%N5*e\,$#<-NJ,kaA[R8FPQPLIQO-LtV4f0E3rkp]?_(Xs+Oo#D8gN/SmL9HdRMueq&GU;UWu4jUo$s\o$::`g7lgMTWOu-ehW,34
%rQXSo2GkeUbms:'"]4FnH2%Qi;&l_3DG:&[>d?Z]"*qSZlk,6A`N(%YTGX?CPmPISlqNIdKi;*G#Z^=?"WqPWP-"uR$G:7jWEWcZ
%N/fZC7UB4+Re&rLRb\S-5B-.`*=SrS<koBA5#k^FhG:,3rDd0-#]8jkS?j#%)K.l?"U48qRmjOa<07_(oJ59,\gmj)h?HcSOdY%@
%?aY>4o#i/=ePBapIU*[@1O(_>RS'MKLOr.!+aZAP^KLN/@QdV3Ptbp/U_"P4lc&.q/'4e34Z\R!;/Mg#+9YDg[j`'#UP)6FOEGhQ
%b6tLqrS9BF9?9Gb=!e,;RQ56)p$Pp&gj'gDk46&g]ZMoR4`nfGE>LjO#""q!Trd+@WpqL<U\78LC.lJBZ*Hc.'C((Uk<umVeESf6
%'dX0Ep=6i#T"-FC72#G*cq!42m$[M2oVFALO+r_X_+`5<fA%15@-sD(TB`TFi'cM`P=aDgOm0[9OEH2,N%qU*$R0cj$;,X3apAP;
%Q92!X($cVl6S:hQn/7*g!jl\*cA'h3VqRBb$h[2i.6-Eg/=)PW.Xr5%/GbrQ;Q3!=<[3!n+ZYcM-"C7X>i-"]`[!L,BDF&QbS4PE
%k0,RYWT[#l]K]R17aL#)Lnbf#bM9k5$f[bVc`+Ha0^W\ta&nG%,"L99i]JOJUKlmq4kPP=HGsR^_YS4lXr-p"F'UC]C98O^9OEp2
%$[[1]p:Fsm_?IRCKLIq8&rL"!Z,C3Rq$m\<okr%"D&01[XXH)p;U?tc?$)ctSlCI.lDcl2_&\r0p+@o!Y7OaW]UYPe,c,%^i/E(p
%B`2=^3$5DYiNuZbaB#u2U7)j?VWa>::/G(hmHNE7,J;Km7;H(??KFk4p<&aZIgX'.'*LWb4@]Vr'Ud:\J\dltK<o)(HI_n!WV"VM
%6[T$\hpKDY65+u2F97%oRu54^T26pr&B's+&[@OnN/7KSPKc**<3i4e2($6\EC0<d!Mjk$OBHj;TBZ@&#[>%rpn[%>Z%1()`hPZ`
%h;guh5b%!6(e'qei+Q/Ve@XR[TnurImG6J9<L+>dfqQ7)Ue.r6Bo2nqh*WMR"*rs`FIc#6_5.a*4?j.?=b6<rBfu_R$W^).2umC!
%MoJ4qT=)3>eA%GThr9[ZKEtPPgOmX)r3`Ddb\S\$/WnmdhJ]oDiJ!fR2AL<(jIKQMJKPCJ+<roL"?d0T@\btgG5Hi+\rt[LG!8uj
%Nu"&a?B#-Whr#PE5bej5@*WTF[7,jAI0QWpEM8kC*)>%A]r):VN/64>D)"l`&V^o9bgut,Vf;nj(OMm\4n(p5lS+-TZ'Ii`7G.M_
%*Oi^dg9>c_'4aT94@FP#1!JW<GFqWOJDs-?]Ue='M,T`;Zc*F!mYOqF^)&a3cY@MBB5JiY"cBcKZ@R*0]d][r\KU96KICIgT]BG2
%XdX`ZD4[W4\]q\3Vr(u@4]70*1^)4PJr[qODKhEuT^K&?K=tHc\$j=##NO5qoTC(+m+"3]+&Qrj7:YGekQsja&LkrD&cLPL:>qsZ
%Gq=a5I5f5p_Pj\L:X,,*`7kue(=?RLA(><fG8MMb;]L2/8O[OS!0;eBdDeNNX5<0KN9.o=PQM"9)0FgL]g"Kf,3g^<"[d4oEh,,?
%<+]eN$A#5nI1$+UXETS8:^Xn;$CBb7`F2mAMMD4fWMWiEB3-@M]pO^*GDaV2=a8kHA?+B8L_Y"5*k'#Y>BP$;.PU*L"XpAL.=$[.
%ka]/ADKJ_K5,bn2M]Bj;?'nC2OR>ttd(B7]+g:'+4gB%70[W'I?#lH^Laa5#$n_%1maVt[B`S@$L\K2Rl+i]uR/am,Csua%S0=To
%+&/F[VtA]V58)L>3/l%7RZR?6HO`8,/&X7\:P#oriAAmO[bcF0lt]s8*UBb"$tEu&=-Jb+"4B\LcZN64I5L*N@+7-1`PMUIk%NU^
%dmPS.jXr^>lHS;%iH^Cu-roB<?%$ZSR0V-Pcu.7Q[N5Kbmbp<QBXtIQn;XAk2qT?<"=*&>:gO1lBm0W]EK:^"qJ>j+$`#e8hm+sI
%JAPfA9,l+c_,AK9g3Z!$@8QJ3(jD&(PffHkf!&]Ll9I!X<0'"n#J&'gHT[2u<K!,)<bCt\FG'C!Y6sA-BCHF&'F,`E#.#DGg(R^"
%@)552F9LQ/hp`q"r6(BTjul,%nPI`&@RrE##1[YeS./pQbfq,6Pc`^XPEJQC1LM/SO9limahR%>ZN;lLVYGcbYg_Yu$#"Y3NJAjB
%K?.,r;1l+SGp`2U;G6Q_'oRQE\hVRsH/2urU>%+4H9Z3QO[Z5$;lR,m6=U.k%+$_8Sm)(.J-e-Q"dG"H@ZdpYr5\%K84c9!HSYCD
%a%^C7`SP/a/q;L$^4H2+M)7j&qZu8Fhe%L.QuQPnp-94sJq0)e)SA'j45iZ7dRNt-S1rdc"U_O!;*`AsJnB'nOQ7rN`XP5sT64!U
%cUGhWA`q2"`OJJRnKo"j%i&97Z!E#36KK61V:$EdEkptCpQ;VSY4#uGcL*+e!/Z\I0\>i(Ha/=u*#HeWZ`(c5hq3CX7@u;<<TGmb
%BhbJ&c-<%T[JETXaE;_`fJdCURgLrX$^kG:g5W<E&Iu]=<jECXAE/]<(82E&Ug`^eaT^'im(p7SXN@-DSuU4ZL$")4c0*9V4GX3>
%WJ+,@C^sM+[4\3:dFG5kG2Z$pWPlL7HIjgC!?0R)&T&F044>!_3.R0h-(n]gVD2c)h,&dg<IH)AA-NTd/OeaHOrXaX21</Rhgk/c
%ctDGU%g]`bDfG)>:C,%B=YHj2_.[56LLLfS,mc"=ZI=)/qRaFBX"O2OJ;CD'6[siX!=E:q8%bH3AoN7#e.*LSkb&0M!d4T!aFLb4
%3l,FaJ,6chmE9MfUkACMp5qb/)*ePl!p"&rJD04;PKc9h'Xc@$PD+E$:j']V+Fql\4"hZ*TuF;?5cHXiS$dlJgZu2VX!,Q1PjQ;a
%1H,.nU3[s*/e0;Loj)l@&Z*/j0[G]+[_p#f-r#J#ZVtID\B$K@[rR.tR<L(?<BWe>(-upV%&piZpMSQhAGtp6YMj@`WdQdPqIhnJ
%gOnQ?OfSKN#K[Z!QmLSbA-H6CqB"CD#n]Jor:c6t.e\B,nD9:X[]Jp%Dd$Nm20o6r1VD'TPu+Vq!Z?-`!=Cm-&C'oR13:8[ekmRq
%47A6C-3;4^"k'\HaGgl9HolqCR4,Y%WWhL*&?'T%^"3U,</]sti&+_Ylp0Ct:`(Q#L2oN#oRcb#:j0HA_MK+fA#M(-T\mRX+5Nl>
%er*j/dfLP,Q=@6rKkWSK6X!Ao%nA$NmLu;"b::,&]`P4O'WCQ0``,_A?^[cC&t35p`POupq&0X;^HQpiGqcA5;Qt@X\*kZi0M0FF
%B(%(V<>(He;j4RM6HXBN.,,nqW7O&kC@BGJ*7L#TcsS2M.N,94crBqZB^\E]$3:=28lQ!"-:b?);P;Jh(dXGm-qSR^0gdH6n_Glr
%_-$/p/e=1n/"fb/6W*6q]#k-9g"V=cGEXm:C\7kLA8m3j([&'&5aBWNW4eW8OR16)(Ui2$hT(1K\U]EY$H#O;M*Zf_)X@00&_0#X
%3YZqD\Qm=n&/^.89ar0*M23Q7k7bh6MGW[M79-k_3!./m+G^ddOdG]nL0"P=gk8QD%N.caBMPYKA/3[fAf)kZ1d'O,jmA%UF]B(_
%BdGQqlJ1s11Qrj\Op6gQ):!7HIdQQ:Y]igQEJZX(I9l+\Tt:(mC'qeYqXmC]JriQ6:N;Z.C>>)_!FT!rN'N4jPFQaNQ4YT^r`ITQ
%TY/S*TFnO>!%R9p+jGg>=;;l<ZiOa"9Ajg<+%2Q76F+<:.Vj!Y3,O?6,?*1rKP]Mj(qg#d>'4EkM1PA8.LV+<jo*`6jC69b$>;/^
%RX7bR"%e+;"k_g*dZ4Q44]Q9%AIUr:)'ia<hgkF2^o$;53QfJN&FHZ9g\jRt3-qn<*u*h2O=\=\PMNLD]<,cD5X[eLq04lT;>!Y+
%Fa:<o)ksBAcpuq$Q)[IPYl`Ymp7BfUQGGgQ[L15u#mq^3!Jq,?';_W_H*0R^m%%4"5KYu)oT:?0'Hp!CR`KcffmI?>4A6pf;Ydf3
%DV8,nk'sd=Yio%bS->X08^FH2>*2uii$KRV]5;LIlinnn)c6;(-!]'CW<(-*mG/Q>qgn)GoNat3QTRYQ']&]C.fL?\1b=0iAGSea
%2GZLMYDP+oj6A&iF,:A]%+"E]0`>ELbeg:g\c2o/(<-DUj/f!Y+Zc,JNaX*sX')/dPTCD?MJ$oWW=:;X2E5Ot;=CDrD:Q%VlDo6L
%0tfs6H8-mX,F_m/B%ZF=ok%%'$MJaNK+m80-0Fa=A/T,tE"%S01KU#'APU?$26JcI+E>18l;$4iKESB#V[')]7,-RhP[m,6&UFU:
%FML="G[q]uP[#K2,!,;cYCXneeYL1WeF<6BTYX9sq?k;+;nANS$)R<tZZm]EJ5`uf1K\7n5RiK`;H8\4(=8#@cIodnXosq!VC5Lc
%R`kmT[H$G-oMl'D>u&=ooYa?(?3kl-_LgLG,=/5&9JB*#)SJZCOd.W];Yg'*X8Gn[Vg1gaH.YJ<ZOoO>HbS6_N:H@20eo@iA8A09
%8u9D.i71\#6'b&I"+Q^!Bn1N<jI[Oe8Kb9310\6fUt2d:>2i4R5^3ig3_6r'\&1+*#'-sjVWXMlaK=E!2AAm,cmt=!)I/korVttt
%mc]#t&USpiq"sJ3^Y:(F$Q/:C)T&Nt@uTQ#hf%r\VlUOPoA@C3$.825$,1B[mS#tJ!DH1A.^A>?3>QcPckPkJ_@=B5ah:hn/!(H=
%([A4X$S)qJhSdu@W%f10"(]m:hV?L`Jf_#aW7[b4"$XFk<@*Vf8I?ppf<[;.1%3?L,UCetK;Red+!A:T+D3;tqh'u6Io(?]0ZiQK
%KqGbSZQDqE];atVB[YN;<oaj%h<\E;EH;,NJ]/)e478%a&$!$C-<.$de0SDkl^\M0Z@3k!e&Y/>mtL2uJ&:;*]]]:=bQ%P`rqh3"
%AGYEVs72M+pWG4>IK.(]bCBO^4F@i]<%\EE'GEKtMaRdu/^(+Dn'7E&Ca\.O$cUk;$#cG@`J^D&+&N5hB2tgc#m$*1W-rTn"ak1s
%EU+F'=?GI?Ki_PCP&)V0r3.Z#[F.hs2q]JO/BX`[I41X!Jcs'=RV6n#Qupt-?A0jDD;oiE06#^@8g'TW#I,Ou-7UaK+F&_6:@.1p
%P%b!2M?BCtdk,PtMEVgfKD?&K8]YFh4"cQ2K?2ge]f:&(?j;;2rO_2Tf,99V-&Ol^o6*"/VHKNIH[D6*;kgrhTWbhqqtf!`s/kV_
%^TQMp\q5F>oTd6<6fab)$NaU/!0iFmD-i:^o^THdCkm_/0!Y`.A%R\LO?GrQAWKTmo,rG-(sO(6#p6g2E=6lMWI`d[XP^d_=7r#!
%`H'p)FpT.$Qgj+0>D/d@Aa&_?4U>CQ1:d_LF6G$"qh%Q:=B__c_T0t@"i,c_0mS+-L`0/.`,pToVt<!jj</O'KCm!l\tt&OToWDA
%9A`RCMb!#Y(p_WCI^]6;<eiH9>Oe$jBJE^00,Ss9_3p((L/BsVj?)EHT_m195oq).`U/b8Qga>jim2"BAb'3N$GoQj9sBgYAedA'
%J;2oC+*j;qBsetg<kb.V5<#70:q/?H4VU_W(H!Mq@T=P4fnFko<!d*]5(a46Y&m'ZB-5r</ls(0SNNDCKs;8c4-Y;c:sohWID#0Y
%n0RM0h-M]*<e@DPs$dGd67#5SadHH3iMLnq2`_6IE2P8-j90KRHadU8GKOf:Rr?QP"/F]Gj$pIS4&f&1F>PN?QD4MRdg)#Od(puO
%Q*%0KJ,,.TpV4\6^]-Oue,O[g5Q9D%r]gG?J(fp's5AJ*j+%*j5JR-e?iKBkHtiWC+\"H(pds^'s6k,G6S;sLoi%[^\ibEd20JQk
%]a=2dq%ibal(>Q8!r/O?q;nB*roJF!%mp.q/oLVorplE%S#UsDLX=Ap=6tAe0e`IY1QkYh3D)h+CP8_=@/5JR.B7M,G\-<^1.p+T
%5h#K-d=]+^L<d^G[(8lK\V*9W@000KX+?u\V2."2Nu$7(nRe:/>$DlFf%,;SY7PPF+jmFSW1+qsfgVBEe\>546shYQ4I0=`c*_ek
%@CcRec\'9`3q_e$Y1@f/P#&GWE/E"+^d0G.<%/@PL4ZNhoL!hQ]s76cI^@n$]#48+[bdOn(NgZ*/@KZ[hM2Nep:6a7(A(cZ*JC(0
%gY=oI$5h%RK1ME#Fn+e/oU2@pgRab!D@h)t*eYF*"!aD6^<#KuEHW$uRE);9:>Pb0`F:p]_Qb2SU?!U+aP%&O'076MhIdu&:W)V2
%"N0=ea_rpJF#4[<9@)NETl.bNR$re/RM27>XCaKZ+EIfHVlB%9!49,1F_M5*EM.3i6'6?/^fUD*Dn^6'nj,iWS/rY\9K<eGA'4[M
%9jDi<FJrPH,4/n=\A96o`7gO+iNl';?-_!$mbRj:S-9EdQ<%&8>,c:W&gO[H[q=*NdDYq9dH$oCB0;mE*V.[XEo_9%G149,\pD=G
%gOjq)OSig`8Y5me+;=e7Ad@2'+ZM@?<>hVhb.O4m\[!Y!'VK0K#]!]!q%o`2aTVS;>Z"tUa3oiC:&%el0!"k2U9o;)kP>TLfc=qo
%>\6sPJB'=4GWaOg3Nq_QL0+foAJGX*37mUrI.ms`7.K>Z"cH+ha$Qi4+Zt5+-eP\Y7B*U7+3a;_I4R!$pY`$21&I3n-sLQJRQMo,
%fQ5ZGPL(#+#bIiM#G8DQ'RNpG64Z`3@HmUdQcsr(0_a>U\S30b(JVRc]d?9d)t"OFGLu6+J5*G0gB4Mr30pbUZau/[iUlqp!);F]
%cFb,*DN56oF,#O]U\:,-$X1eGW)Sj<q]`M4VU9LaP][<d$HC7[qI=0bUm-Hj>mF<qU*p?g10L%9;g-Z[QSacSlWD;nI3dofB3tf[
%iOe6k"]2cIWlRG(SWUV:h8HD;\UY,,_^eYU=tQoKjZ"NiXBZ"pe"pm;8JdY:UeKsc*!c*%1(JrF?!)^Fm]uL_(nhO]WG1dO8f!C-
%<FQRq`Xnti_[o2VN1aboU0Sku77ccGp6T9G8@)]O!+>8^nqNf!g^G$g8;<HB"U<RcAiekqa"/+_lp]c@;?8*kU!RK4QI@\"$(@4J
%3T_A>JA19lS492'N+^]CL+H_Q?=TQikYt*P-'uI-\XJm(MrKL]?sM*d_1W%j%l2r?ePMDs-O*SJib4dN2on6RdQAfIU'*7E%U8u<
%_sLPK)"l,uAQ00H7`H^VLkl:t;ZS#f40i5Ser4gRE?l]cK1I_Yq.n\<<MdPt"s"V43C_eu(hhXoH/sL9mUL@%&=Lc&bJ3qXOM./g
%TOfk9(lr1B*"DYc>hAn4TN_m1pIjoqCEF[lmi#5FAd8?IH$Sb8%WCu]lF#Qob^Fd](oE^R(DIu5d[?O-lMZ?/?qE,gN[6^lQ%>"Y
%K6Rhu*rI.8BSe2*9`$M;32n>>C<>d-'D/];^\mr^JD#k\^%dZS.e+V[o7-VWs(4pBhuCW)fsYpLc"]T<?=SflJDPQq2%$Ocl?4Yo
%G-m)L>l9tUfIj@dN@NHZQU?c_qFqHC`Q21u<1C657g[9p>4IVQ:tQr?2jj;_fGHMC\Gut/Q_g'<NL,6f&1FJ7S()0+[m8M)FT4-g
%`aWUNrYc6+9QTl>>0d5oBFi's2J"4\To,(Ba+3<igb&Mb8r?@jH(i^T#&WrsVo?boE)u)]Q7liq[\cpQ&X&oCjIr2@*W"R5@6^W;
%o.W)(DTUHi:jThpRX#BaP`YIq&AgWI;!J4,RjWi6&[J*8K*K6cL*5X8-DX!d6@0:Fp-g0%7%1ts'0Ac/1+QqJ?;[S(##-DUprqeK
%6U[,t2^t;/Vk6Wbi9rFZ0sWd\ffC;0$1==FlcG#o32qp\UDm&Zl<"VLq.aU8p@U_>lsb`2Fk<m*^WU:#&XCJt$YQA]6Urr?Yi<qE
%OE(!@%LhY,dt%8=649Y>67TBO->$#P4sFjRVO3"t:kVLmnq>>0VoDE&<[]293DT-1UG:Ql&1<L(_a^<HYm@\d9Hl16KQr%*P[Hkk
%KA\TEXNn?%M1XB4J:d^'',_)*4JK,[,!O.E9f%)t<_?gH0XMZdqGO\2,[K+Lj^`jW*!5me.W*P4Sud[r6b:nafX:i^ha[st`jXD<
%:knQBRQ?eo$A]!j#M"5EG;)g@Z#NRga1]%oF-2Sl^DFrD&)jE.h/?P$5bKqe*G]6G;s[^?G25[>8H6<hj<u0p2i.t+LqJCd`bp5Q
%*W,g4&OdN@P_9o:QYh??.25,0<YLr37XH[PBf"If%8t%u@hoS7)#qf]G6lk1/H#)?7DqL@DW8Xo=GCDOiNmK\ECF`JhZW,[I!KN3
%o*hI^S*#1.k.jY4Rp,Ztf,Q@+222LMWG)j.*849X#4c7/`2$_`"fP0_cJ^b7#uX:(#f`]PTP]l/%ZqFE/0A--,?FMS2tr20NEF*q
%]&Fe=.Z&rk0_YbBL5anEm$_(g.A!Ocq1:WFe=)IFYs_q;UDR8LQDUg-O<fWc'R3*74Ko\[LKXU!5,NYA]$[<(%%H\rSTX5Jn$M$f
%gN(1[qfYoo%>\[=Ed\Z(pEq*+nj+[jFdY3'g`;g-CjGSNAV#cdntW?8ZPZg(Zu[4^@#%#kKQYo')HF=B1mh@4Y!sUbMHCXPbXOUt
%Mt*%ZqBA[`6sg4_Bl_F.fh==5eW(2<L28F'jC'"?1c;3Z$].7G]Ei<dY;5lXla`P^lHlBRLN-IdQl-G#!;n*s@K^BGJD#BFR$W&S
%",iA&)a`T?Gn4Q>G6cr.JLGkpGk?JP^@*h$Pf1Ng[#3!R+YqJ`ltn*Sh$6YP3:HAT&1Esq4?t4.9P!M:(&fOop0],I"sER\il70b
%h\hq^1l&mJ@5mtFm)t5g0;@>=EH)2*'QZ,'7??Pl)d$ZQFO[+j8X%q::M-6U^O^XP1%r2_4G;!Or%[5ZI7ge+=n@gEO!S_k:jEFE
%k/Zo'@aU<o3]1b3.W?/bh7uLU,=c1YWJ</mLbrL>5`@"]3^`-YhBfVNJHqXh(s&8FRG\uQ#ERtXJ7m5FK3<rBMV%oQRmPW19SkG3
%E[(4LP73,Wo$'"\UbVelAn2$sFLL<VO:a&OBI^$@I!F]5.a_UHa8^#(#I-?a3fG6a3=Arul-GP"'V?\cg=6GO),a371SGL"h;/;n
%KaBaHW"`Q0+[Ig8`fW9N]36YqY7"6JO(?R*c$D4FRjgWeF:SpfOS\7$*Gp+hfh;iaZj"3*bQM"AOWLcR*'DY]28.^7rXL?=llV4P
%`PiD&MYqk0+.auI.o]c-,pMIY_QR/84`Xn&$YA^5\4>t&nGod&d+AlU[Ok7(f2;/IQ>.2e=5Uu/hrWB445$I-4;__P[Ehn7hG-F]
%*83%NMq9l5@*O8Fb/i5NN&t$/f*'\Wm$P60Y$9;^1Z!Y<hTh3&)r6LK&\B%qTr!Fdpm"/%1C09.1(jCcr>BB.\]`?:3Jo\?;sTYN
%A6j_jRuA7!P*-gp,\A6bXQ+X9e(uZ_B.%WU8".sg,9W+KC#6?nieM;rIoVF*bt@>@[=5Af7A)t^4M+HVg3`@!3;Rqj)<1U<7$2MW
%2VRMKKOdrt$B/NgrX]\-1Kg%aHo&Si1ETr[/%Ik6=RS[kHu7-/WsA5T#H-JiTck2-]q7j#9@[H/fLH"(RH/CWng&oWo:CuCLr-e+
%Fb^fnW/sk<Ql;o*6o&)+>JerL/OjO8p=M?[$J)N7gLC0dGO=;DE;J2(W@.0l+*^0"Mgce23kgY:FZR`?pt;sj2Lu1_OWuXRP"6J4
%Sro`frAB\[*(pl]6*a1MEA4$9b>/^1;RJFkK0i*?$"F-)+!q+$BgF.Bd%k8A'Z%@K#:TA[6u5G-YgHl0,4XrqeAMB?B]=*Gjkc('
%S)k40/?TiR,e6GkHc">m&aDQJkT`(f2U*F$4aSajM>TTTJl:scK%pG?3B9Wu^s_^&_F=X\d:\A\Ur_;Okg`<>%i3=tK/PF@=Cckp
%9N:^Yd/#B%4FjVZ_t:##a1T_QVN:UiDljNW%B60s_he5/^st+Z\T,+5?M5o]RkfO+7S8fga'7pB-=%ob#iP$'+Vc.j#\<NkbpJUD
%aDD+ZaZRtFN/1TMaGr+qPD?tLi3_4L"Bi>uMZSJ^$H@%[Kd''+=U\6^6kDdu)Z1s\lAVYp@R%\;G05[G=V@8>NqBiZ6/<L/C"(!B
%,p?B,#[#rN:#WMPO9AE4A:5j(&l$>'`0"T+pu&B6+r`INL/G'i3T]Jqr6CaL)jHHC%IEdS7&_Ht#Md"t,j%?\?bnAu+&!r?_8B-t
%\#:)p47%7VJ>df=6R,&*(K'?=r7+I#h_&7^F9Ni<0UgK&==e\s>\9++ah.i"10#Xh.m'3R'$a1<>B'1Y(RTITRs*?-731t/4i/^T
%c:.$3aEVTJQ-atTI5ElX[bj*k-<VM"`WR>\nD\+.AAp=#ZM^g]#as,\TFSK4V:YsRSt6T9_DuQBLPTcX%3Hc7(.)Z=`1l=Lr>&;Y
%ZA9T"/'s_PTG!V9=`Icd$mcb@;F@.n'mjp$,>0?+`hGS(fne$>?XKtLq5]D"=,cm_`IIfJ8,J4qYZbl>16j4[@M1O8B)Aso#,B*>
%F&0tp\A@6c_*k=]gpe`'m(m,j%D<_L<?5T%&'RtjdO?R9aK&?o2K"9I;lBE0'kCO?,6o,)?8dAbWMDAA@st@9C+"6ug7/@3.i%8D
%0M*R--eN(*/BjpNVd.%^GJktG=0,etna3[*R.H5Z-Mh-Q_f:>p[D2%ShiZq!,S#;sIaA(Q<lZ&0]a(l^jJ"ja0-Q0:#ieEYFUH//
%h")^-@4&=O'I&f;K"*6Y\g<4Z=G>j]^_):D"-PQM(PJCdBs]4.&JZKQqAr$l8i70,.M-3f#6L`Y#jiBqAs\fL*tWcR9;1JH"mb+I
%EDis0?\)L_`*VQe1,cmr%=iHSVT[#`B5h.2gJJ[B>TKZ:=06*U]XC__Jn?1Nf[mt>num]GRg5QY*Gd\p/Q6F-pW.klCO<T%cK>]:
%\%$S\6._&K)ZJ-k:j6H/TcCo$%/l?951EGAGpRV%YY$*%(Ae(i0'Ii8;6bZ]UtuCK%lNmlD8/>4"l'(^,U_6=_5+u2m2YVK5pJ21
%'?EaYS#]G*,=C>oeTHR6+3QrRaKESIk;,[-A_JrNaafbf*'r_n!XS&;!MNX2&G8<lB4iE*<1h/e0`OPU4<0`nfeZc/#GlEAeX7ef
%P@1ohLJ3X4*PJefpdn[?Y)G&^;#D.OL.BBI78._a"0:)r,+T>SC)DD?GpaahJPpLgU,`?TQfN6J@;_?#&3n)D81Aop[qIe:>fZ#7
%P+;e$L]6g<K,HsPIlMNa++AOaU8N"J?lpls.tjG<WL*/Tnuq*R(#pt0p^[;D>Zb1im0@,,7she*cfYf<[r!(6gnhn)F0[h:*"SLP
%=NP7.OYI7L%BSrbj5"]saaRWR]kDr*MV07,6XgY-:#nOa,4KFg#Y#Q8,Up?c0-K&`40OfXbK4jul85X,YZ]oQ%V1UaZa,Z\\C8s/
%LDX(u+;Sgj"b$kJ/>6FH_kp/tY-N+[mt7F@lf=BuP"fK>M%Pn2%.#942f@]8`+,GFQLS^'+KHegK)Ql67R^TQWYpGE:Cnnkrsm@s
%]#?HOeF<2nPGBqd;mWBH]>/5Y0T%nO5ET'lh?slA&1+nC"#>\r;&GidFP\=KJoYBnHk0`Y0,Q1IR8JEc3uIp8&MjRDK9TVXbiCI1
%92;;V9igm1q$q"Z3K3m&Ii\@B54V(KJ5Vsqp5('NE%D!Enmuo,FmQk[htU]a(gfsSaHm:[M;7Kc^rA3VR7=&k#e%hKYf(/#:R$<)
%*9pG3kbCDmq[YLM^M1$)l&_m2TF2mOn%2b+(u#9n_3*82'niMJT><sQZ]%K#E1S\2oH-cj6>5ZL@ITur#Zs8I3UIAA`d3X4.KFHY
%73pMg]k[gr@nHq<94+P#\4$hsL,W:!l,#5-!hErM9)EWp0TTF(;e1fK5GCZSAk"jt_Meq77+8W5D:Dl310-mKV\.l^)\F-/)-brl
%+\LSZ#"Pq^X*H.gArOm.;'bXW#@u1e8eR<4?&.Q`2[^OKG_0<]M!4S<P9C[N:/=I4)m\nK_M`\f*r%Dg3q0n0i+J?Z4^usW1KtFG
%Wi0fA7cqbE.K69hKh6!O@hkdBD59ae8(FVE-5`7>;M/DRcSk^7i]7-Y3M7FNoRapa`_5%]8"0-Yjh:6:"1M!@9H$VaCBe$^dU<1.
%_kU[rJeH[rSPn!p?=PRQ"?t7,7ujk/=CL:K7=^)ias!"J*$9,Vm"SPR4H,gKXi`tkj]Z2+-0)t!f;dV/p:\J@BrhT3gV;?$j<,Y)
%7GGSDa9E1n6+VR7=R<rg!ri9PGGX`bUUs!U[#<Yi.T0Ge:M-/PX^#HlN!Xq@@Zn5Mo]h[:5tVCn$49gFei;HoEK&sWIf48_]g^1X
%XMu>_OGX9[aC0()2-oFZWG7-J,/#^S$@p@g+tr$e`O('*/b\i>%eO<fUC"-]aU#<Qi$"^Ap+h82&Is$^K<*V32XesA:+;pPbTOl1
%oB'#l7.=*ceL,5388CP]Q*Vk]^YYWM;Z[=d]q".JIf86MW5o>@PAE<aKKCu89n?fso9jGgAGQhlrL++a[]`DkTRfaqA["#I'1(J^
%'T.U\DEKMj8Zq==cRM41:JL!,r+,BT:<72q514.P.Fn/UG$hH9Mb:h51P.#$=?g7Qik@V-0%Q%a%7I&o1q'ii-u)SGV)Z>+Y:D!T
%DsW.l*p"c2d/pJ^goj(WqJV7P3AjOo^R/TCa`<IMCXNIY,NcE%;D!a:-dj9UUn\a[,R7g`BSG=mHRNHtd\fu-2@7+'&XPPk5HQPo
%g!a?PQk:jJ&JN^sTEnlEP'l#kO#5js6M2KWO^<mo9?WS!]qHn(8N^B>h%j./66Q@ok26rc1-h[>@ge6eq52dT/ZiC'FFeGX]L]rM
%=*Ku]bSr;`:!=+Cp9\hk)Sb*oqiQ&L4WDUJ3Pd9O=4<2r45K#A6%gkW2+a&$R50EUHuF34]QosNh]>+[aTW^4-J+]kO#,&sWie1=
%m*/oBMQ<tr4qVsi<*BHog3RImJ[KG-kfcCH%HT(*YA96C)J%_XY%'#"W**X%'ZK^P$XSh.EMoOi[i,Z5\7iQDO4O%QV*/aCn*22E
%":F\NT=sL:qp)qqVu%XNXmEH$Y9&Agf5Fkr&]%$t?=lQC'"0h9gJ)g(+PP\@2AhcJ'Egj@D=e&p!hk\%G4O/Imteu#of3es]kYpj
%DM,(\bINYh&s<6+kWM4b"qujmgnpR5Tc"P,E'f[Pn"I+kbVM1@o;b&fhh>t/GM-1BgR4_(?6m<bboVWk,'hUV@-M'JJmpeL!%<W]
%p&7c+\Go#\#XC[^Z?-f]hU.ktJ-kk.j16g:B..?QYs+jhe39+_&I*C,0n4KMi7,t`!@T-%57%=Wm<X(=%Vu0&k7PiX=)^D`c+]eq
%+<c^@ptaH_AI/>m:cg<2'kqL(@CYPk4ASeUk*p``)pUj,dcduddkcK"$,G=qZ@p8\a?3e",li5!no4t$Ls.hGXk@:5!@:1iZ+,ZZ
%eAq$@A+@aQNX[A=UBD\t@[+cL(F;X75pKafJ>.FHLXILnqeg`B#F'b&Omd4S\4O86I.kKk*GNhL?T,O^[Xhh-ORN;Tq9)S'k%M9N
%H]oJFd<*U*!c0NEg9J<:h=u%CpNJd[?7YRF[)*Q4CkdNGddKn#"&bQ@[QC'<mWUeSJlSC>EDXHD1qX4@MJ!FR09Ah2D(@JI[K-U@
%6OTZd3T$8G))&u.cA,XYP0s+^R$9267+FOI0dI*Yqt@[BQQ!WpQMXqu\XOiYnr,jI1AnH7cY*QORnj`q)[-RU=@Z.5I+'f//$l!H
%YdPnH_mHb6(AkP?5APIigdU..T*`0Wkia_\h6fP'2HiS$VOFQ8m3nF,CS:PCBIi"YTRejm&8sG'h^;ZUiM/nKK_K$CW&SGF]C0"[
%o@>FCE$WJ6lbEGc9s<E7_#7s&%d]DE?CLRjVqn(`Al6Kj>+Vb(oOu2jeaBK3T[OJk&CuZW7XpL[G)m2*'Rm;^=l<<cW0WL@7H@Z5
%IPrBWlBbEQ;`=sUMVp$T&B!NMjIq7$4dV<$q1+]ADD.%n%nMa-0cK!*,<qiIo,.o'C*g/jc$CH+Y)EI\JaWls.>LbYp=(<dHb,.u
%6hKNaZ+,B9VW2kNJipc;W`\)gp+Tgo`0DC!)6A>d"F0.f,<0Z'3L2K+:KlpVq=BYqm!cBg*.ps7\4h50)pcPB%P,mc6VK7X)LKhu
%_40DW3,B)o)gV329N:.NZW@aZ%Gu*t&OVH7;3,3-ORh@\`$f60,=mTs_rrHhZHg/SB-2LraNMN2e5N9]#D4Lc7uq/KB"^HK)ncZ/
%eAD&agih!0VnnEg#,O[%a[U:gr,`qUrc@MJ^IqUjlN:5kAalstRX9Inp;mh)oREAUm5NqkT@>pY*:l3/q*NYDs32SUr?X=LB1R.H
%brtK]rLL;V\3H@+^[/-4bD6W(_8BhK?%I"+PN%&EJ)`P1k7)KH_KWNOD@Ba&*ndj)QeMsUA,ZR0Y<pcf>:?l%MGR,2a?>afSr%On
%Xk;64Rk)7=d.MTdoI`j`J(j0#/Z23W,dXf:.r;-U%Nr6N3PJaUrLSG"8$W9hV=@NGAG!u)_q>l]e%B5=#&+IDb2GW0LG\UiKG,3k
%+u^A]i(\K$W:^A*8`!JK9tes;hFGUq^M@c[9#AqW.U;<Bo7?"KlA]WqVS1n20erqf1+bU6\l<`LX6e00M8G3mDbiIZddXa#@_ZDs
%I%#cMTbYWQ@Hp/]7k%T(aO)ukcX]OcA(\r7+0:.)cg1nJ^.$c;2YDX>MkHF/D8ol]QarqU>9UC$gb*LUZbPJ/l.<&(2<"5MRW&>7
%f\LJWk(FqQ,H[#tVVLL$.<dFj8$mWJk<AZ?)>t?\2@Y=:;'2FdgcB>QoW8(3_i_X1P*qc1p@WQ1mRQbq[-o=$[^,'sI;5[/]>Y$)
%h":&NE%eK+LE2'jAZL!B7!&]OR<Fl!P%/jCK3Jj_:U6#bW*4A:Ll;N0RfkctH9gh3E2`<2:8lk_VQsku4LiqHDMsn6Ak*`?A07f%
%(g`o>aoDIULfMH0h8j*0=.>$+pgAK[l']j\#9]=V470Dioa)17iRVS92gp/Y_:fjV1,;AH/IUr;es8]j-Kqh\?ps$ei.6d0^hFh"
%1SYb;7^.sV.L8nX#OMro!5VP,Mr$=u_-0d'&TpV@cr"]X`XpQF9bFIca[g3eR)W;kR&9.X9`n@AJ%>9rT69cD<5I*:JDoSfJ0JOM
%3?euI%RYE'Oh*p@l2`11`D1`[FmeD5!$ds6OD,qFi.ZJB14i5:lmFe'\>@HSTDnX7^_Ek0%6^7clXN'r8_KS7A0d_Z5f6OnWcu8j
%Hcf'dr&G!(TrcYM[XtQ^pB(bHls<cg`Jujp%FLSMkMT+DR45'>>7Z%\Ao0+\4;2:`/4(Qu[-`qG%#)3m5DJ/'%PuMu)(jC?2DtA7
%4a4'nX#>KK04#Tu2E19(G;JjHl9Q=407EHPM814Y#kU,S3-Q.2><C%"!$tN'dG`YSlk#.a>)^["ZNi.J#UYOJVnq*6h0tQa4<niM
%gOg;+DUnQIW0]Vl$(JP)!51V!n9pK<eO9Y>@S\WB,*Vg3I\K39#H_OT&o\2q,*M[nj!GKl,C7h'larOegH_m12LM=L^*2e'VT8+?
%p+4oKP'1hDJrq_<0f]43'E^HHllZ:\A1lq7"tNH/X1:q(&L5W]q.i%MdnG?IGVM&o=u32+n^.cbTTKZ6foVL9LV27q6h5EX%[*5K
%Up-7.8ocBT@l**024.;ghOdiY+YB4q)N/o[NXhIsOIRc_nYC.HBh$c&5uargY-qn^E`V:1H#0?O/[@H7^b?-0W!1HFeq.pPC;)tk
%APKM-qaCB=JoD_^>`KA72teA^;n4!LIg_P05%,D>(cApEi'Js"F0^#"2q?G"QR7"hCMn['gI"ANqTV]:<5!$jNOr0bmC(f21un0/
%?a`l5;jL8f_HbNsUPOpdJLM#u#+/V$1Zq`QS%Af_L+Pt86^cNIbmAHhSB0^-A>OIE8[[<S02mkdbHPu.A2_QCOn.+:;D'dffTqlC
%W?pjI7a4#HKg;dh2^8(o9I0'sR'@m,>>#*'c!1i,Vf$bXQno9^\<F$bMC+"l^HX7:C$T!&f(q/Wh>><h2gp#0s7^#G5H[dsHYM1!
%kP,*9fP.qj`=0S3=">2W"C`QhIIjmiKg#N+So$gbn4R`?N+[run;FtqB`4>OcOZl2NYl1S&"gg.nd'NB?l1JAL\=C`A`V>$<IP$!
%5dMIpO_*GVF_.O4U:DCGj%s"K\6-K;b7Ah\r#(i3X-mpLZu,Ii%^hcMGo3cC1]MGoOb<Caj<5_&',jA(%=b+KnF5,$`*e(n+gZ6^
%`kNBGm)-%O6#>g6W!-[35GE+R4d=O>K66@E5Psq[_Ss^b0ABB1l?W.4QtFNMY`Wk&>TfrI3M9VbO2X!;ME63qeTd\cQ%W)6i?q'A
%3fGr[E+V3u1Kj@h&]HoaEW!r'FmYP\s7l3(GT$OG0=)aJh<d&K0uak>S/Lo!`SF'I:4@6^Qc%bQ#3@uC_<l&.Wl+$j[/;n^b3F"t
%R(r)FqDm+$E\*7;CY*J"!D!0N@i"oH_HjT]?T/FN<tar>?Zh^ASZuD-T_&;_Dn>:G-mTRt:maI+8tf^GjL;a1J(I'T[1;Y$lWXUg
%Uk_]Dc/\22"6)CS!(6+$dlu3;YDdV'bXnY-F!,go]+uSdi(riYcUcg,g.nk!<Aad[I?'%"9K/Q\]ot)1Ict&9ot`6dSu!k`_&$cq
%(T=9Z70qCFN\G[:]2\Rm[b1%pXtA+iIOPSb]D",8UY/-[G([MK)d6HPkc'5XYl1"m(JHK.j`,USZ!qVm-f)A3T9HbNd-")[D^>>T
%RD]L#$T2SfCPrTqinE,5eE.,150;sQ)X>%kHFT743n-E9j=Ono6"ma+T).Du#@'57Ai1ZpX#9>dGV8E0o?6X+C*Uu1J+faDmt]hM
%\F,.G8UW7/qkPHS73E6K#4A&-3A[lEo4rtP=Osk%1h$TePbPS=T?GHsFF[9\]C/6H:0onC()L10..'eZgu)#H1tmg:ZJ.%0E2V_!
%:,_h$VE^W6DB+:i?tC+]6Wo]HkEfNN!HjpY0H@9.Jqq+LoAG86bIQg0i<&gGY(r]?;JGtL4@40-5N<>5.G7?E1X)3GB5;7[Z/:FX
%A(a%Ni&M\FEM,6Z+QjCnJmZ>YJdBFXQ8M%n0@rD`o+-9Apsm8!`),K:kh/E%G_5%fSe3MLVf;s(>WpC/%>qh=#2YmLN[#)&rHXh(
%*BCjfEM,[irJ8C&SDXWkc?L9(`2lUu55DMq4_Ea<kFlfbgt0h=hfRh(*7Tp`6UrPMqMkXrftWTE7HS;HHoC\D)>hq-Wd,HYX@T<J
%W#\k--`#7<T(Z8g.#!^neX@#thE'a'*;_tAWV3TcTBc*"@-#Jc`F0tL;fMtZP]#!9FZP^'U04A4#:DSX$)N=XamR(GC`CG%9o$kJ
%o8Y;hANNjTPhX,=P3?!q'FI=(N($CB?t]_9'[Lka4JFm<VOsF,$QtYai8/jdEY@d%8=4F%"gg`p]t$kBLLQ`84m(<UHa0-01)#s1
%%k!,K0U'^n6j1ehSiV(0QrhQ0VAnB1]>76lgF@l(@j!:C)V>0j-)MSM*pTu^"0T?7j@K&aV>J9!J%mXngYrmV'S9bTkOl26mDFMs
%lq"X\+.-cSgmnm9fY9kY=LZSSg)a%gXcZ"sid%>&4eNO3W=.gY4Ap(4;IO6Q]N/iC$eYgiT92\kOqEY22pMVN&mAn+ir3U(R/jiY
%558\;=nSOs`iZ_iS[SiZBHNog]^^TaoqOOlX84d\S'Spb++%nbb\eZU1q/[pmJ==&FC,:$?LA8*m4I-Gd?`D\Z@g@\YM$2t!62@;
%[KDB7U&'/S%I(>#,G$j]+:Q#TKIJJO_h>"uTa9j>(:1:q.+qJoL"c%)"J\R]@$i?fQ`u,'qW[h5s4u3Yad<T'au0,:]QZQW%I<:I
%ohU'](M2e]g)oG>ril"JB1,bV`C*lc:<^dS6hsS_o8aOjIg-Y[*KfqX\T$+Kk3dmRN7O$V(f2$@pF9]QcC2f_#7hmr;fcYWn]DT+
%FmN,ROn0(W&[Cb@7f#*,E9AOL[5frSan]i$[UcnAZ^e9^mM#'9[^@,-%HlXJ_fo"kcBe]Al_ej$6VY(Mg=cg&D`9au+j*u[9"0>Z
%!g6b>Ks8I=1T<_a7M.\5fmL!b52XL)XLl6d,O#!_pSX:pC)O"/@6[4J&#'qWW!Q3U:VU\M+0#'SGC-rLr*<\@db'F^W*Z*=k']\%
%`BLL(%ru&;9D3OL6Pb^_/mqMd68ocf:;WJQ_i#?W!G'O9[#fQgZ):[<7b&q^'aV;NQB-5[LDIX$qC+B;BWZ^NBPo;-;rEOgGFj\?
%rRI-^geg#<j)^7\?^l*=qbTUO'P]W;%Z0Y7EWHS&@<ZGMcpsL@n^nikqWPIOY2t,YmRT,^fQ@l+_)">+1I04J%@qd*[h\S9+&6\+
%RAhclVKf[r7l_.`1=!8?NL*t_[f#O$f^IH7f+Zo&<o+;>blGLNhKe"B6:,)>MXA&OJt!)<l5qNR*t,nPFqJQS'e<cHhU_/PHU#Sl
%p^_RoG.qtIT?apU_+D;:SQ)c!#,DOja4(C@B(nJSK+[ir:DsMYZUcq@QNYoL9hFF=&5OSXC+\R>\Wtt3,286!AcEfo(0>;'#;];A
%e$0Zn"g>DsmN5,f[r[8DJ^qO_-<XSEi_If`fG(X(krR)"lqrA*Zo=8\n)1J'X$ZU5cSKelU`?-Z?=EkB)Zm[oGXsD`I)p6+=:IB'
%d\>upN9.t:_3+PmhJPsaOEU6?R<G`UH%0"9b)p7h82rYV@feb<;M:VYifb^<UcI<DFMqp);_K@tpo/APRsQEe#IpHORI7^f))7P&
%Y/Q&4>h\*??0o4fi"gia)pmZ'+%A?1Y#Ifag1^`:Q=,ZG24N(fPNdEQ-Z<2YO`('MYbV(Z]<Bo:PpK5&Ck5Jieo]-4=hH"C9O9Rl
%V,5]taeq.-AAt[F)1mTudJh.7pmeQ5XDjA'R9=74IJ#2&Rl9_/6jYD#,>.";d/knM#5[2LP@+E<].NbeF5^o(EN-nRdgB``WujJ"
%K.,MQdf?3Sc8=k#4_rhCRdkMQ=thPiDDJ^R!'5c6eY3[8q7saLD+g?uD<THsdK!!P*'kO,SURd(IV>#FC)=!_aTI#jQJA]&fKrdR
%6u"&iJU>hV99%hHbPfd:rj.!Z&hRrI$JUHH6u5A+S^YQT7CprABIqEE;ZUgoi1e0sVIXV8?u`/#O4-iS<^t6qDHYE-U/SZpr9H.q
%#?mMg;5co&?!HA99SU`,BJnWD.[mPVT_fYkV$('/>,kHk#"LHO?b>:i@ieh.c5(`uFBl6BC>bqukH,iJ8)>J+T0@SMWV6L65?RX^
%qkUfiVS.G=K@X)2D7?&[6198-7n>"AaIj`bC"IbNglBVnVhTO@6HpUR0\N'@KJ<=5mk1t$BCqlWUkjFZI^^#$-of_]-DO0:MHh5i
%iB)S5+^*s%ZD9Yc*OkIOke/"Ticcqf0Y$E%/O/0Ir?lEeLN^[Fj>;X##g)KHf6C_9Dq`Wa(i)H[E&p6//",l=m9kN*(.TBps/qq3
%jZNIfqs9X0@F26KLAEmb@*bhF-ia:>L1^OCdH"gSJB5CIf8f[U$NT@$3=5`j,*uW=!l/@=a)Oi3I5sV+9@ZH2_W^#*!-55'HoHRo
%jrsepIXRXa:qG@C$:"fpdLka6]E3&7.5/`IW.j&Lbb&,?ChB9ZIr$$sh0;'k(n@eLE<-od(d(1)17B<$kki:J:&\.JcPG<*IlZ,b
%L2i[^7-QGkisMTYECQ$]qf2D]i;P_9#pI+LdORQ?i;Z+@[=5#%UtC/tAD9MrTiA]7S'6d15qf0e$!8ueL%>QY4/5q6e&32rU'nSE
%"?I@qq]9]0<Hs!sh9:R+l>!qa^-HtoE3%70>5%iaD]-M7U8_D>1*=nNZEpk+F=l$Y>H,K6$+\X;L74!<q'2<,iDT+4HbK[*7%c3^
%,XZm$EN5:i9ZY]8X*/@8[DHjk`I?_)/[L)@,_WE*Ce&9JUrA2B=Q\2^dK32JI*;%\PH4NGZB2]IPdBCFa8G>ic9."6TGMm'I4"DL
%j$M!rle3J2G.LIBE9$su11,I&f.cOhgL1:9k=E0V\`;/H'0^ZNKsW;K$$j%TR?DHGHf"Ock\[]#RlLEUce`d/P6&06XP7a.YO8f4
%T6.SsdltIRE5.p0$$#r<o/t:Pk/)kM"aZsVN"oLs^?j07ZL8g,d%VO/Fu1@O]t?HCQfM';pfT^jLRUXG_l1a"^%I"`N(9&F+s`lX
%K*bkc-`C7:o`<;GpcfIZ@Jdb&RNGADq2A$kD^Wsu)ZAf,/8FYH/-C!iXY7_g/[^oY"NQY*%);pd/<.3mNh=Q3MK5Y(M<QPk)'g0k
%0\X%%8S=uQd.&@])30dFj]GaiZfb''r94B8POl'ai+f/p('0p;NY=U6"8@UZYrW=YCepnA*"1MEbMs38j(c445a#'e8HLfWkMps1
%D&opP*h\qfKQBPD>PK<@+lTYJm?mnW"9A;><</2/'d(FH,,Y&nZ8%(i'VLGX6ic?sh_(uie1$B0#iI->8NP?U\-r!r"<tBr%O2qO
%/ocQs&Jl&##m,B#/gCSkVJgoK)>N6^F$D`"%kj3S`>l8P%-Gh82]'h:Y-=[618_\WK/5d".u%@^O`;LRge+!JqZ:l7T<D?VQ7p%E
%CX&E^bY9=r_]:`7=D,#YNojqJnfesbH6+=.*M.g"'IGl+Y1L-8m^8Za0D+oJOGi;UQM2c/NYV9AW:nL#r]H!6-Oi2eKDCN(V:=te
%(LNem#P%_E?6LP'_c1Pj/J#FalueGM#^fK]enSGD&+=`;aO`4_V1.%Qq!)*HgF-r&BG-lIhs6J:biVLdHi;\_\i0KR[b1'$*M6q-
%;(HIRD6;!/P..E!EM"!!&`/Q#8EQOkIJ`C:ahr1'`[puUG&_l!r#cmso8MCdnG6rm0XNk*VOU<J>gQXMqV#Z+]fqp+pQG8ImY4aq
%pY$.M.]*0>7;%gQ9j3^oh`VqPD69E&ikW[/H[gbKlTK\Q3qjkE5O.tUnta!d[XDoJI_0.se<8Ve2X/n:1DtQ^:bZRO#<C0WYZ0=c
%&2tM]<4J&(l*R/clBVe[N"_U[eH&0**%(^qKneSQ3'@PQV^eWV^=^&PAu25J?"gQj,@g6'8&-2T]=2O=%4WfRD0cWAjqt\dh7FhB
%d+)BJk/U-<n/8,jLcY]"#=8^%?X,Qm@1H(Nhg@[$0Mc?tK1>#XoM%n*2R#">gG,cX*GWOo:rbGJ&.4;<Y2>oR9#`OX.TPg9qi$4/
%5<QMWRq081-aFrB*ikHd.6VuW]Zr2['tq2&6G\*5[9rp7UHd22c5k`88fuE7jNH#aI&(2]j>YmcG.5l25pY_2O3Gbh>KZ7&3>kit
%'N`O=E>Rd/!J7q>,8<E`i[+[n$h_lu,IhT:L`Nm!(c87^MWJU[.+VrFoL`b04aP_LQ4\hu?>b)OcRAk`6AW(fO\blQLk:[7/3!'m
%UhiTQ$s!Nu/Js/?`^g2KG_>?9f&r^%M'c(O<nUc<bCC,sk`CW7!jQV?*Q2sQ_M]MmL<8=h3)qE\YZ[#n]J@kWE#r.nMN78_e[m<;
%G6>`dDgLQd'7`<;7Hfp@C2V9^pK!XD!DQEof[@4ck@M+oNC4[oeXS/8ToklJPSoC\ERTK78qVfS#o7uZM<@g3A4kg?/a+%/\UWDd
%pdpqe#0-:9'a.q10!o8;rK%\hXrs.4*L?>m%i<I<`5k\_>5"-kYe.EJRmqe$f=iD!k,->iC\BSE/b;.gDu3&XD:ERP$(U\iB4BMZ
%/Fa1cGrckU6:%NX7Hs&A-blc&4tfU,r%-RHS4*sob[O7CN<nF1h77#oh9_UB#emT+Joo!)-!Uj0CZ;VKO3N?]f4.QuG^ioSgc"+k
%58R/HoS(Gf".J%TBmd)FI\[jrSYI<;,GL^QT*k_Fh@4#,N='S($cE-)%E"N'*J:,QTh-m/#g\ue,gEUDO&Z+ZoC@F1I3?Oto>8?m
%&OrHFL_-@r:,_hu44j2nY0`4diU\%E&C81o/)0Q36Fi_K(:pWCBhaW(ls:6g51YrYQ14K)8U3.^lC(JKF"_SCh3`d"aMH%COhD@q
%f4X)[q+%`c7NZ\gaZ>3^?AQ%sKW/$eI!m2u\)YYnP!fIj"07c7m=X"$L;O^M6Wu^6A.6ts`BA/:[RV:*AhUpulqO,/p](1oh%&b7
%l<]qQqFTX""`/ZkqdBVMj1AJ</:nn=Hcu8]2$GBF/]j#B-U?grLR*%87W5l.4e_siJ;<."bVW]#O5b>X-s>k'p#*9_#@d?l;ZT^,
%AHnC2mHXcXP7qIrJHH`."$$#&E5bL(mn9k^JCh`3EE2_b]k,i>qCiJ+Reh7GXpd2]32h[/<_!F5[?o:u"Lt!l56ckFlsGanf5V]-
%jJc;n_k1o&o/Nf`nJgKkQ.YDJr6aMq?B3!)OR:osbFa7]0e\Nfb"!X#oR<BEIg20bWK2\F6$:H\KOsF.rn%f$gc>qa(&E):I'm?b
%r,SrIofV%@!sZK6R1Fq0]sX@R&9se$T.U0)j]L6643j1^DY[XIpj#b"%=]ega*JT+^]Zb1UH5j0ZnjP=0uP0\XfM>-p]h*$*i=GL
%ogq@Ws7TH!"!!)G6RQ_ELLCW8>TaTP?H.KlIl`R=Ca6^MoZIb)rdPoWd-hPUPI<*.OX'Ha,.Xb(eQpIDZnA3/i=6'cAnR;^4G!TO
%cX\KMi*<PnL24?7ms4V)M>*n_hUG4R7W*u1dK2L4D1\#JXCWJf_cI&\^qJ&BR@@uQQj0YjJ?ir\_$jPM<Bk]N=Tc#6;iLVG_pk[4
%&"U\ST'LrF2+9kr;_B[p;&>`6-.ngGSi,n?h7)-*^[H^hhYLD#@J_HGY'-%D$Vam3N.;HUY_p*LQEUk+?c2MdBuN9q['J1UkK0$V
%:TC@bWONhPbZW;"T*`*U^<ks!WB#^q5\hKe$q=B>h^>+Fohhm@LUjOsOm=t/c(a=E\3\q&W2EDckeS#`ia.kEbF.L1$[^V$R_>2J
%RsptlH./I2?%5(0pB18fWi&=7eq#`89^a@_AGr5a-Y9$G`BQ5lkhaZ5$SP=%ird0A^lh,nF?i1%>ODTLUu.5%V4XYPC*12.@^.0&
%A,Tkm/'u?i^OYIDE/O%MAIkXP0@6Tm\0(F)Au'Q0(71j@?i&jhe7h*6Vqp*qEFI8@j1kOJpRL9:eN2FEE$s"6f+Wb$m3ht=%$kuJ
%JBX7nLQ?$a<54qR=I(&\5%5BN&,@p5n4X[3W5W`tJ$^'ES;5P(#Bua8jaVjOhr\N3O$AG<_I`_16gcYaiCG"b8B4&>*.QanL#W5b
%m31#Hj%!>>QN[BTC:Pkq9OZWcK:TG^Z]#PS9=ZSR=lG$(!=1"5Q^a$2dgH0<Afb"STZ?+^!)edC38?6r'>alm7fe.3ll1YD"b5$I
%)#jTYrcfI`0\iK"3;sM+pW(,,Pe[[VSSR@"bp=>GJ.67']\N/&%ljQ<O@/D"r*Cgt&@*:s6qQ7M;I.o/<WnSQ,@]*O-XKn"JiGF^
%E\K3VJrPDHmdlHg)ZM<4obQ74'17cVZV>fmbb?8!!-lZVp-UiYR\OCXiGl#t8!IXKA?[j>08*PAG8+;`SOD;1/C_0:kb:;%fGsWu
%4+01g"E!j=m\ZMLYIGFpeV)%HTC$=_o?;Q&:]7lSc)^Pdl%\reDQonneud0SJYRni`,6sXiq]G"W/Fp=gpqoe<'86+4K$SDe7(91
%7l7]?E2Loq3@"Af\sOM7J&=TA1-;pUDbh0J,;0]B\eS[7UH#HDKpJ5[jiHk>"(MQlGTa[ohk/`Ug?q,Z*kX2<jTOJS0Q):pSp5He
%N9L/?>Y[q<mTa+:SS'daMGL=o3B2BrVYpX>'5D\,X%#q@6$RKY!hq(JYR%=6h/V-)ZJcF5^93-E)0DAs@T!J*g]@)In,*N`m-PPD
%(@s]j6h1PnL^t/Y<rdS'9!cGqEC8alHh&C6G2!R]\L.YDM63D@s8Cj2Gp,12o`p>PItOZE-[8qQq+UaN4ai8EF?[a+&pSo]>O=5@
%.dqs5XW8eOA1-I:+S#8G+;b"cWouO=kC7OJC_UI!4hDF\3jU(+^=,he3?niM5^qsCLAAZR1nDe334GY#;eW?igQ?1CCO;Q*OPK`O
%!uRG;+<">='od4Tn0\!tm&F[dp.NT[DY0jK`.KsC`:p-G/rUCok\]-XKr18noC>@T#si6nb`E=JgQT[bjQ>;l\^,Kj#Li*ZEW`n#
%q#+nQZ!=_RWRJ'n&S1_j")"uchJ9A<WVLK,Ek?f!OGaK<G@DZk*cUAgqjQB+qn2nma@Y>AgRk$pBA;)pe!hRNhC'mb1H-p4&P8><
%@t81CP*gUQ5t]JsB\rA>O7,2sqYE_'`08#T`/H/P=#R0B[:?4A!+?+nk/CD@A!B`Z;(1dtcF=Sc4aZ3.'(KKd\8VpT&SfV1h?R]P
%ef(]pDbiIZg@D_b@_ZDs>gI0ZNP$49S)Jd\XNsL2&CR#8_L+9EDC3Q-J#j>a@77!s7h/CfOu@F0XaL/Oqa&fLJ%/.gF'';E`IK]j
%*5],om\I2J`e.O21rF0&/hU!I`?G6)]UfF259RZ@\?,q2;aMrDKt7W)PkgG9o.+$tDh7(bq\\sY?<75RUoP/8:n"\cdtq#cNtRn$
%3'`q_!`15gjt/QYqE$U/%c"[k^[PB.T!fu]#:GYpZdT/89t24295hT$(&=!gIsng9^)&g*E@<8EDZ]Oli4LnB;VeeI>2?["1-_R]
%I;>FIZ(6'sS&PBn;_DCtM4J?VCD!gN'_;NoMYS<TX>5Z<FnD<8c)-mt%uCqVm`PHU`Mk1rll".ljdf9$7S%epnp1HTYZ3Z66_'n4
%VI3]YOQ\cSagK@]1);g4oDRoAB#XkK&^L=9Z^]Mjh+e+5b.SSf]K-#cA68\DASYL"S%6;ofTE+KS]-<;jt4+AN/a^G?4hZi$nSp=
%k/=6%kM"\40+glJ&Nn3I:X:-D)AA0)\h3pQ@IZ9u3`t1YHu8e62<l_u>Wq!u'PJQQD/51p,M4g=(q<5][!<D=f=N7"^"_p`.q'2R
%_'.IUCnk(ZH$q##caF2u"QZ)8H_@a!:!4IBi<Si2[aDhef4F*O]tPEmm_K?$,e8kE\'*mH.,8Xb2d^kp-(\h:[h91aTafj_,b1u)
%;kUO>Y-mj%*(LQ1?eU&=B^q\>"O3A2lP""1W\"/B>8H&<7!rXtCL@dtNf4258n<;4ghSKf]5,gKPI^Vs3P0dLBkf]X11W9Z;03:A
%"-RTs+=C`76X.SH%Cu:Y:52ekc0q<A:"L"BgEq(=lMH"s@/h%^!^ctS%#m%S6HRHH3o2gVpT[1n^O<U3^^?49mO<%cnZJ<>L&Q)1
%q,:jM4-B^n`PT9*\9WD`A=nM+9`ru@k0$*OY)?kb>6]\]9=rid3uBBa\:-%$Z_dKog%Qj/*74"g+Wa2rj]ejAS3AIOG%_4hMu6l!
%q>0K&MJ/5.G?g;/agpfWgIbe1r8D5_j<sLT^[EP>>6h^5r;NXQ>^IUeQ25i"=u7K_25RaQS9C@$1RXN1R/27`o@JsgT?X\;[>/9@
%Wfac1ELSOKET#I]OICp^G-Z&hMLi;*Z=K6tlaRfOGof7)o/lZb70D=8-C/KuVK*[DaFs;c(-XYRd[7MU1;E!cJ%[T4^+\o/lT28R
%#9a>3f*0qUs#NX[?u-/d4hMiP/146Y^IA2%+D^!*]_3L3-<us`5@']tCM*^le'p7t6te7G3k-[rc_6rk1<1c1KPXSXb[PWFnrL'J
%+]0Q@.-RLnZhsl:_5YJ<k7"k9^-.'PX)$,Mm/B&P>`&RB>3=^_l.\]4R=NNQiF/tLm%AFUIBtSdH+PTuO0S?5pVks->mL)r+QRN(
%/'A+W<q7nBjFBZEZ5CWK2_8,fjM+.PrZDU+8K#1EP'q0'X93I0X*NosB:TTG%d$sZ$flto`;Ra$?2V-("jr_p*/qEn,3qN2>p4U:
%i6R2GC*Z+?a7SrKgN0@ogf'^5g_uiY:#I-;'1e&(*JESWpceb1IC:#icK35f(987\QH<%62(`j.lN8M>RXj<I>&SlZfR29hAp,)o
%H@ppRDW>o>cp-R$:!j?tc5DnSI@'O(R<?0N'"nK&*I/:8].IphhgPh)YY!]F4i(!qh"TMerAMJO(k/pb<3MjN6QCe,bt;V.m'$rp
%Scc;qn6_>!f[=Y1@octsA,heb2V^lZ#,2^]c9PU;Rp7Xqn8nqK9gQnXXkWX_%f]5L8S1nq0FSVhP:N:-K-;CEY7ZYL(/hkBG_#k>
%S'n/=>Hi<-:@!SGEXAhJrbCs)iNBai)[es+@R;og",_oqpK+&@#VDn;61:'m[s?#YV5)^2TnkltM+ho'Ss<SL*L4auSe72I%1!Fd
%!o2Z9\ZF0)lk>3bgRqE=g5r"*''aQ<.f"RIJod@l4@9:g[9$0],`Vb&,T@o\C/S7L$-E71"Bh-u]aZjcUD&c'QtV&kY,-[9#%<Gs
%okn+bQ3W<rW4mril_m@`@6b^pV4$7dA:md`lap7B%':k9Tk/!Z0@gD[>Z4HMlatoic9`c>4I%S1=e2O,&qZIb+=r!J>le-1^qc1#
%5k=DG6ZFN[@7\k/]"cB=a?m]c!i/YA@%&H!/0OR:Tak[4HaOA7Y9U"a&K9%'TqdhW2&VQ&;?XPe!6)CK7'";`CcLu!Wmb_&#U"K%
%0rgTh4?\t<eJhQ@]-5k>A[_9b8j?dZ[HYM2K"YBie$nE`$d%5qFA3$8Z5Or-Jd?7JKNRP!eMIV)0^&>&+^<,JASL^$VRe.,`LKKl
%;2@$2@J)XgTeM<W>r#;!'-`&_OQ\P0*mB?YauD3b74a8C.Mof+]-7N,!3);G@dfXO6nO]M">6]nd,G'SAsKf)c/'HsY&;tScb;-`
%_ZT^l*5\6dTfh\t%_:`6j(I4b&FA<h6.YoNmB[fK%mk,8ja)sQeSS7.65p[[5^c0O@#kFJ&tnTnBXmiGG<7%ZM8BnA1rYOo6-sM7
%ca_]@F]cL3TJ9R'.bqh-cWFsHTF_9l54#8#`PC?T1Y>2i9WE.D5!k[:TI.k_e%V;m=msA0Ks9UC9(-XjPX!57gOSk!0BA5meSQTM
%!k7hihZtN3%kq%&JfHg5;LNMH)p6,G1!^l5m(Jp02CLt/">>r*h9f;\#`^:>HA]-@64COOKH#&\[u]J9##9eG/g;KZ<kV,g*[*^u
%3c5i&c#'*"Ru/*qA?B\k3AIJ8=$p(tia^K7"B[7sSF4_)2p9;.$V@MK5]^2f(jnE+:qb"CNQBd;RY%`/(f6RR"Kk]jTe34D'o?(P
%eX[l\]A#NV;!WZH>l[i)ADEr726Tc9D6C_CH8/Hmaf-1Vg6.Z2^)?)*kEpi2:b=l8W$\2T?!]r:c5AmQnXL.$=*<cQ7,JVRTNlpG
%8U-[@Zis/k]^&s^:L7A37:f]4m5YXjTd`tD9\oU,L.0#-C6L`d"_B7oeWsQ-EQteXMEg=j@*S#nRVf%n2o0LtD`3Fi:n-0]89PR!
%AZn"]A5.7W^)X!--'E9i:l50OAcr:e(5*oc^Y?.j!R9o/L1kIWCgHE,e^4$o1mI9=Zc+l+MM/)Vrhhn]]CgQCW_,3A!>>'b;3KH^
%O3uP\?fkIh4Ec8KO<:&?1dYQ2SYNEsV"K%8&'e))]=q.%[N91!<uS,s#`I^i(VBjV!AP;o_U:>/p0j^R:n)(jHJiO3>AIA<?V3\Q
%AUS%A?6.M[/(5`OJatN'Bmhq+R2rEXEhZ;Z*6B>:Cf:o!)Xk(`Vmte;\pfe)/l_[b@bA*lE[`M4.-+:+c_e6;f;1>Jm`D7d[\`.4
%T95d6+]?nH0NBF.i51;/W_9nfrZ'_.*q_;4mkIM4X2S.k^:pVZ,qTt2,1l0[^.)$RC\=jjMWF67[[*P"n+Pn_0uj?gdB(W9e[T`<
%*[PiX2I*joYMj.A*PC*rC:j='fAQ:/h)X)5g#5$.F$rUn;=Yk*l(\"G*cNm_&Z435"0!>ecj;nr2t_0]3b''$h9kW.(2("'-dNM<
%B=V.A[fbs6.;mdO9Z2V<C!Y\m%M!r4oV[cdBH93nD*coZVq]l_gKkVfN9I)(qF6kLG>"p<+[eCh2r@%K>bP[.n?"Brb2-It7=IV9
%STg?q_=S#>11^F#G&FAHh<G>UJcHBtCL>@ec)ofe3[XI&G?aY,DPq*s\\[l.Rq,A$m+Q3'BPl)P&2)gm>a6k5r$9_'&S41Lp7>Ls
%KbP.<faHQ[CkAO"&S:=,?0_#L[f`Z\]WKYc-DMpooqaY:L5`5ND.r1*a1S:sa)RMaAm,Og=^Tuc7L-1u&m@oQ[P1:_B:IIJgL4Q@
%G75FtSiAi0^3P='UCcu,FF+U)^!g>Y1^\cQ_UZ:2=V(*$RSGYZam7d5!s?eU8m#<+E-S)dkl5SilWQ2<NpQ0Mp-6dGJo=h'An9uC
%V;85h0OTN]DhN;\)Dp/:1,A_#XuLDre>qi*6,E_ef=lV/FQJ]h<EY_%-Vd'!SIG<^GAL@85%S(cqZSW(a6Q4K/"i?bp[%0(O%0G$
%3P^lI_(,q+4sB`hXm6qiXBl?Xh7R_%VOuQ7m)G;Th,!HEM,(JgM_bs-!<)HpBPRn;<4C17^^FSg!pZ?:_jD&tll^%sWThoga'O&E
%H6%+A1D=7!VFrLZ3W'*i6P&<LX?^RsfV^]`3RmOQ]b[l7L&g4-_%m13NB]UZJ5T$AQh0e<c6`%3+4C>Z/RB[-?J3p&$;p./a;DR-
%76N[saY<u6[^2DH2\p*#i8iMl3,BHY7fbcB9F]Xf\=Pn:FpWC/_E[Oq;iUOohcjC9dBfq8UKjZFG?_-F>'<>1p!1!EeB&`tF\U,t
%97Jp^`RY.oOTB-P!-o@/I/C`;I7d+Je4X'%;/!-6\s!P1>?he!2^k2#=)E-th:KPJ!lQ15PT^&^TRFN2Fd=rdH9L^*6?,9LdKAG8
%'<KNYQ\\PCM<:?Qm$9nmC(n13n3s><54$djDrVe.:9Fs@BAL;]?1D@-m:kQ#5un)^OWUuc3JgP`fK:\k[H6h%@qt2/*AO4Jq6Yup
%6*o1PH"\+N`O5:h*chhEn&VtZU=M2pe_b$;GVAE,m?,_Kp=RX!P/q&:qn/*oG#"bTqFtY/O43p_%kYMWI_DAr3U6;hNUMZh5BlY\
%NnRg&1PoH3H[TqUG6lo-:<tf;*hHC0IELeI"e+lbQ<=D"HjNC&nY5?o?>/!nNQiWECkaOG%:mYM^5U#lAaaYfZY;ou`*A")SldO9
%-Z?e`8-p\fY0XId/H[Sup<)sYZi_!.7Z5dFWjMPI)(i[6#cN`L[MKk55gtG"h6SI<YH\t,fcR:C:\HKh:$[YM5sUVGR30A>Ie=&d
%=%GY%@eJM`HkUMel3MSsPIa+'@?XP?A!G1-ZrMbc^Z5[8-hCi72YBXC%c/,k5D/\J?Ja544pSb?pjS+S\0Z_!r/P)Y;Wk;\jfM%Q
%\/,8FfOQAWZP_IaV:0g![XRL!A3;?US=kK(CL'#+++8Wu&cMXZPtHLeoDYA9.=VoP#+pT<4\c#T#nN\G&FGC'escO!DU_J`KO_Cj
%oi3!X1Oo2E4j-Jr).j&K?[1d38#gCH\'u*>[0)DY$:*FF5-HONHElkC>9j_oHN7k<l&r,/KA!W7'B4P5jtFMmGhieR%M3Bj!]&Us
%NfaKU0C&^83Phpa!0%DP7a<%MXO1<M)\j"LBjeq)QMfj,okT]M1.[imG0oW)`8([5PMR[doJu__m;`\\dnR1[:#"gAEA(HO'Kf(q
%a6/"m=1n8^iTb;b7^`@UP)IR!ANn"gBONrMeMD)[*%b5N5B]Sl1CAR8=oAc@"OpRU51";ZrhCYPT[$p9m3;540)@j*SuqcG(t9i(
%4%DCX#7aSZb)@Nj,5#m"W)s@M1AJ8ZAV_r9YGH$YWn3fE4lYZ'P5Npf_>])%G=B@FGiJg^me=`%9Ntsf?s=i_Uht4eSA(WLE]`a>
%l0:aBS-plmUkJR`%\W81eb;ips)Y@g'7ilUb=k%,hmPoG,jZ'ni`Di@B;s%9E:(H0HWEQE(hL@ZC!&\-Va7k@jHCN<$!2d(.qg'T
%,<?6hJY"R6HH$C`7Jtuu+;$ge`7]LOf\U1M:)j!3g="pGGf:Yk*T!8G-cKRXkec;hhqbDrs1#]7].9q$jIBL)V53q2Xn)2*)]PYs
%&Zcc&5!<N4PM7+ZG+4#Rkp_g%'he_[A]^tW%k"JE].JBc6P=nbKF1p9'_k;@"2"*GMV.PtYV&D]/sEK7o/A;O5kH.j:H"!k/jJZA
%^F^UU6i.3E0URt4fpS$>7&'ndp,sPY_gA%g>A_E&kl<jCkS908^#p&B[$2.Z<Qg\_@=X9RCSU.*S;eSJVEENeA`=-Z.CHrVOO;O;
%:8i_4NAH[Xgd:/I[\n&TOGKX,phIpQhNO$S%`Ob9iLV#dU4.06]:P8MSFUVOjH.\dD3p+$J3/C0?+7Il-R+0%rI@!EY!U#b!]53h
%=9dd+mrehZ[@Q`>@[TRN@#6+SrZ%54643L5#b.k.@u/)K%BZ'D\Dokb8s`t6DpmCYh.k>bd&f=hF7R2u$T`P\I>UI5=7F/gHWiXY
%p2,k:D_9jlZW1Ole['1(eiVc7bDj?%QlJ72N1r9ZpH>mCoZN]9*P9\r`GNSs^j_]d31;F7jfq;M2GDNg'>]6<KdoE8<dnk;(31Pq
%@`D@e)<o'8fX@/='I1Otfu<QS_'SL=\9(_t5B<fLlNoHg:sm$*UW<J$1o"ad`k`:S(NRtjFKQa]+4<Os^D[Rd)2[o?T2pi/bnYW;
%U=WV)aoo9j@,EJ9iH`Cun'r*B/rFePN,YHMM!alWKla\Sq"2LJKaDbU[FC,g77_;r#^.RCo5VSUkZn["Y@eCs2]rpk^Q"0JQ)<N.
%^K15$WuhcB2agA.p1=oB!11ddNRP[QHf?d`^$F[<,t<<L0J!\C;A`f&PBZa<"/VZ9?Ig3DiAid^Hs4"m&/Y4*DF(n+!m8Lq^"d79
%@Nk+Y:e<D8ZncT(S%=`md_KQ3ce5!DUg6eXTNR"b>H9Bh1b8!AVbe9aI@+@0*b?>apD5dcmJ^F:-uW4ck4i^[8m2DqPS/jO4Ri7#
%WLp;CJIJS:oYGZ"BOm=G-[dB0\Mj->T=S<TQNQ*5>s5hk4&7Z<9/1RTQ[iUIq!+YT2,0i-q5m(Z89t[a&gb0!@T'[RfuKPl2k@6.
%^De!Eeo%nOHp?TCn:;VbX@'ZJmm-S6\+qM5MW+$ccc@m*MrGCe)^p#9NfZh9f=RP)+k*B63bg]^'gqGepq^6k*hI8bP08BnaA'S=
%Fhdd<;UO&iLG?uIAd![JQ*I`69RBbd<mPYE<=q-"o?BX&KM;opS!B&8,on]B?<DMH+#e,iY!N\U$Eu+h!SUqfmHh%7dRhs@'Qi60
%8)4C@ohF^W[\,tpiY>\c=)@%ipT['mO\us#L3(8*Wme,bcR^6Z)N':9bEaJ:#*^[3dSZU@MYL:X6%af2dQWIf+>V/Y\$=OHAj'Vi
%'T#R_(%8dfWb*>U3qo-_n\1a)>GDJfF>;;gbu2/%n#]<b+eL4O^Fd0kZ_W%f.3=&oKapHlXnk0h^thri6H.B5!Y`9rJ.\t)k9R%+
%Ju^iC],]^6EeO^#M>M%[f;VnmYFO<4fgY4I"g)XA?&!_^Mq:P7Z&.O3>U$R3-+KQEYus<RYNUZ#9":05D!;l,>T=%7gj[Cb_gZa2
%eB,LUV,!mS"pjZF,e"<D&@GeahI*]g@j?2B%748PdJ#3Jag604$h'"*RdiH$LCe=>)rsK1HACh:5$eI/_954P9Hq*;Y#gW?N^VmR
%E2PliJM,T)PT7#^1IcM&?/<pCNV>C-9Y'u;gDckEp+']0d3!R/Lhuu/Dq=:ZFKa+0501[7V3CgT1HsogiHdaJ?eW^E'_r6:'KS$-
%=b/W+e=/VKgaM/O`L2DE"jO"gm!\'lhK4gmWJd3HkoO@.=7(DdQ,<j]hP7<u@^k1uIr9qeagU'<&jn;KomZ[W2Au`jC2.gSDTgMM
%7QLlFBg+tibsnh'kH"hIkAT*$!cY"W("8EYGok6[5N3]sSJ!aSeWW<V!,On"]r%%h7nGW5eYoTfluR=3(p'n8eI#2(L&I3"\)od/
%AW#f8ZOZ1K>gj2'0m+#29%DM37IElYfig!`[PtYN)Vpf'U*<ej3N:pG@ZCEEHoLA)d[fuY4U^rT_#QDd#T%5V!TFp"Y#kPde9'D]
%Og8j;hW$".o$5a`m9t\EGj!!dAG^@7.tB.gg$;C#d!D;;WKsDf8)mLUP8sqM,[6`F-e'Rp5Xi:lY+Va^$@9GD9gg-*S+\1_\1XRV
%25%jc#gt[\Q;]b_In1tZ.O?9oPA@]N"^*r:4D[]M`geqoi?IQj"&14XCjq"Rcaqg8.OK=?SjEO6)LG!p1O`K!'ENmboISJg-r0Jh
%>2Rg[1O9spbLGDIK&`kBhJf:OESIstiUtg0Z;es++Ea,RF;Z:JF;UbJ5sX^:5F(.&j+l354h^N$$AO!q4u-iX?dXBeIDm)%d#"7F
%A8B35^3#G&KKu$(n$V5:.!q!kR_8QU23r10k:3BHY)LQBq==r_V5+KsbL<coOgh;$WUKHnR8!tQA<;N@e%>SVF2!h;9/;OB.'*!H
%`aL5-5d^d%@O+3mQNe4qJ@Yer4b<_ABcl`JLh9:IP$t*;X\__j0sZNE0VBj^a7%b^@?Wd)CnE\*QV\`r#"[.<1[1\>\gpAee5Msp
%/Km^6()([M)2ZdSa,/ZTi^&\Z#\_;:71'GGP;hJeri'bF"ci7pnuS!MeE[N0Q&F>[al"Fa`NU\ZYCLA<1Q(/ME:GRRPL1<UE0Oid
%<^+oJXcuPd'9[#u`)hI8p)6Y"bO4f&pZ#NLU$*+Q:pq+((/Dp/KdN"kjmA[CH'lUr02Uqg_J>UnnsQ:q+OB/1+g!@?Hf*/?L$IK#
%G<*NrY6IC41)+o,7XXYW2-uXoEQX_a-u7hILV9@hi5O*P#H]Vu+:OcnjRdbO('0t`B=PYW*:EMU'b_B5D^afPHpMa#SA^5H"U$fn
%^fUh]U7@S^C\W?FF/l'V*)[T((B4lhGsF9P(#%\a&jYmEO;(P$F;L!kGZ@"1EJ4UW*f%!MR+>;\4/W-COWXt+`7+JMa1M]&4)+*e
%C.e01H9[ZhFs9-`#SSV<p3V-l:%\)BHp+O+k8U>]iFKkc;fYsK]9MYDXDgG-$^"a'k_c$?rI)(D9VmB_T-sgbaSC;1WFSM6J8dDW
%gO(OpWrSR?`Haq5jLTC,k3@*$pF;%UK6kK3IO=d:,&\@G(.2hc3Kp3TLDX:6WUtHCTX#ad2[WC#?`Yt#)s@m73C#sNfmo>e3XkU(
%:489rHSikfk,=74i.8du^u;+kR=R%cE*T&6"$dp3X^,"7@)uGh5Uo:Zp<9#qU&7<s]@_.dYRG9;/Q_&ggu//&(eeL)JHB:bS@A\9
%B3,*hV9M8o#\YZ<l*+n(Nm+RUPS9Jh5[=(c.P^7.b_-2fTg2<YA;JD1=rKso6u$O4o>4t5WN6l:q\K"Ols_%pm?Lk,n.XQ:XrNZH
%pAr@#ZaMe_X;n%LQE-i^*nt#feP*N0HXV>L+F[5i[Hc;F;M6re^GqG.PY8I&%g@'>T_NuGp'Xr.>A?8IcBG3(#B`7]Y5.d=^W@.+
%BAEjJ8dZRt]Bb<VXeu!X=Ql[BksZ.3TR6!UH9IS=r9Y"J@rK&Q'4m.*3aMP]Vn]]aL'EhLJVBcKKm8X==TET,[2O%V^6[77AD:mG
%[1UmnEcb#D$pO8e)1!+4l(#@NPs3e=5IJPggk(4CH1ohSj)\h!Y;gqe^[K3ijmBLqO7.@.*))iddKN8**MS@]TDUhUq&o=<*S#<S
%9un$.@(B+jCC<ig+BMTGP>ijTRXGXuT`N[WBO*u>dff>I>-1[g>Kb"%Q88)9W:'6/e@[2O*:I'@Q3-qKH#H0`1E[kM2L=Fgf%h6s
%Un3E)=DMiXK`O>TnrI%,)1qKOilkaL1j>K9A$#4BoDg'g)X%D[&#TbR]WIY0D9:0.$HZdCb;@.[ZsVqW`2g7*0t;gBbX^L!:BmUh
%OX)tW?$dat8"LWlgcW9i[gon"=hf.;[_4;XKm%,7#F)on>m!*nXG=-nmc/+ASTa;;jj$U__(0R[9a]uZ[YAoROq3fQfc!?hmt=Wa
%<j`r?l"lpHmf$O;dhl6\SNh1kmWKVQibbpe>$LUOAf=jrCXu_Gm:nMNSHdE0qUtG)KmBSS%],+m#$qc#]$i@_p<kPur-X\MQ_:W5
%[3>8#BR?13hN%(j5ha-QBJj1e9&T*^HQ>\E"a"JMpI[@bo,Vghb+9[eOFr*K/!kS':XOc+MO_R3d<]J=&,A#HE%K=hR5(C:0CSR.
%f>\s6l%&#1-_8jp.uj:+:&!'Ol_lT?[ngdO)#>>&8B<[^l[NY^=pSiYajh)0#`ul8QI:5!HX6<XPaQkG06D%t)^e=snQ0Jr[atV(
%/hF8;GID'W$()D%N9=?O2kM#[gm.+3IQ/JKg?C2]e=;fP41r/4>6`V!g!j8J!!eSe8kgpYE*IIcI(h9`=,q38WE8j@,Dnd_^C7sJ
%:)b%n+.t&7:a=jOj=W;Soo)c4,14T"]p(d1E'chqOH=f``a7asqW;>T?.l8-k+!jTT?-6*BSfcX`!C,_ZK7mUBEfT=@r/3De4b1Y
%EB/ALfB@&?`O;XN1T.d%pO`gm5T:SM?n2!Sf/94t@O@;nGCZRFR.7ijlF1"H2Eb-ASU"qi)JCECiC:oo5[.6;gsjn$jDj?d%TMJ0
%fYBsK.NrV5JE/rji>NGE-Ba$tBjls(YZ,Xq&Ffa2,mSLl[bI&F%5'?.&o^,I#"Y?DIW'E@%J__ODdGpSkg#CH'%0<GHQVi?Wr3Uq
%PsCX-\"$:o!1IYK<T>FQ)U"+]aT)bbFLdNJ"/m#X\A/:E5siHsrDp5li6V55<U7cm8bnZ=&bS'k)Juc;%E(Y"Y)6>p^%9X,fU<lO
%1-eR(HG>seo;EiMNc&@][j9O\%2D\O7jEEXKM$_m;ed*01_:`0,e@_Y<OP-]_W&MXppoJMF+?T"K*+3<FL5&""__K6C6I;un?VZo
%TM!nNZR17j@`nPik@Z>.'rom/[\Xjj4.XNX`Bi@2XH_$S7EZ?6q!77`I(-8UU%_2Jf-.kALsCniPj13Qdjm.0^)oV<#XM184L$c]
%%(CP2bTr2Y>;;eIVfX&q!$juG6mug9`E7je4cf:e\P.fm&h4X-<pi4I6K!203uJZK4S(]`hWQ01gM6D,O"TZhMgZXC;oV-3$T9/p
%R/Y[\)bhfF4ub!_D1[3.a`lREGiu4H,L0sO+\^7SJ9F5`l2b'WA=M2`kc:*;aPR3_U9/9P+m^h9g<R;SFY?#glBD:K,R\k6#*"OS
%p@EGhp&#d9"b=0,Ct*uA1!=t!RM&q.Ya5YFj*/P]9h=MtVgW7TC)"1F=]6*c?DdBiM.RhFUh,GY[NMAd72?L@3p6@bKJ,$.T?1U+
%l\R1&VucNB%EInZ+'kA%eChKR+Jt`2R-K=,2qg$JPQ<T:8a,_'-Bbn@]#npe@-Z$AR7m!kMBe,(TZ<ZoV1/(nAs@bd)LbK5a(>'2
%.pkE");6?=I?5fVWX=GS]^?3VUU%Mp-FIq0i=lU?)EO!lBJ1)`gL2MaOs@rPjJt:Vs7CXTb(C38,!#NMp]hK!Mqe4.D_n4(XHg^;
%c8/OP<iVrC0sN5%N)UBS;]33r=aV[FPa$k=,7WcpdWSOg@H!p_g<.;S;E+l,PdNLq*12hN5bH#bD6NMjqd.7Rm&!O"h+gGo:`kBf
%QM*.gWJZ;a<nWkXP)e6p@[t&CcA8%AC]bS/IJo+T+5OKgPkLD,kN)OJg3b?o;@+qJc&EP-ZcS=?-'XU(H4qFQ5/k4+=s]J]%e$pE
%`@G6J+PaB_<((7BO%G<GS),:oRT)!1MsHOs<NkR<V6!l*R0$7nUd8&h8.$pScdh_=^cc-,+QeGIH=Q;9p0Ln!cOMmkk-*RhI'o8P
%."g_oc.a7:fejA$_=O]SF.AphT)Y&`P0m>/bA`$""ThZfK=?-Sd\CM8501c51dE#<1K,eZ0jJ9T;?_f*^f">^7$#1K:MkVTR=*rm
%V8*5?"A"5n(K.%13@aL0\lI54eZGU>?pIX[J9S0%o-jETWZ2k-"O[q/8b1b115;bn.c%4aIb^8^pSIGrBo`C=e^h<@#psrff^IR#
%/i>5@&'W*\V-:=PJ3]r7p?gCrataf<T'p1T.<i;!JK0N3gSp$L8mL)/iKRu9<#4OTAH.EA6?g-spU[X3DW_D=7p1!?APf#dXhC!7
%>g1Y*eki6Il,'HRF?7MC)=oqPI21M+=VQU63=(=AEuF)$:I7[(=GIOd#F'_F_CtsTXu+#k2hs,R]Wu+^3jn[-+S\K?n3;MjB;]o'
%S8Y_lpfY^arT8N&X2N(YC<Xh"5%tGI2IP*2e3_$1SY]"G$:L=$X6L/Inf%)%b!4HihV/oSmN>sRPI9m9lHcip5YVT=Jc+GVQK%_8
%HTm!b=XL=8'A8"<KBaR!kFhm;5J.#=1PsD7GB0;-7k%WMlrT$rO;e<Z`X?K]GW<lH8'?/9OTXK&gKN<(J4>O.k$h+9e"\b"4T3>e
%$>=TGpNGF;:Xa)pQeb[tDo5?.iP$+FE3%Hs]G1#NOgqDP:CXkr&%%e*I+1Y*=g5B<gNb,aTNCBZm39^8dZOZ8GoO@&PP;NNl('/n
%\@7YbT3dR=,opt^7(pUc>`M(9-<35)qu.R+[=CqXD4bqqf9MARC>+6?WdPY`"e[G#q=3i3@Y?<)^,K@N!ea"IJG*;!*.`C*.AcQC
%GSTBLNp^,GQ#AV1E!T"sn2*OY!`Fp-*;BE]RKO$T\%*BB?-+TJ<sL&&7+)ro8qC"t6KH>o<"]MloHmUgg\/*n'E)P-L<WPoM'-*j
%(DY1YrMcl.`ai!qcMJpX&4-nf`2do6p1Q=cRY$9AN`a#uLha8f$\m=-?uL7kBFr(2qS;@@fUC@4kf*e3m\7IWC?iK8Ia>>-&I67f
%?qQ9.lj>?%7=E'`#%S@h(oi_=dU+JlC,h5q,7IX?$EFDuX^(lIYu^cg>Ks+PPD?c7MGRXiTbe5ghj`t")5e%oYg_IIX'7AsN`E3o
%EK+k4=0d#7*nm\'2*9QNj>PB=X9Ub$K<I:j7(kjCbdYu6)\eEOA!YMeLF?oD7R9ASpb]K4`!&$1`[bWi)TnkGj4J]%2(9rVb3;!&
%`2?U@G=b*o<F.+=Leq(cEiSB,j@q_CAlb0:[nEcI=VUr(k7rDeeY8QoW@^_6CH37PZG.,>c)Y3TU?ba$T.d%/:]?earpq\OaP9D,
%Sqm&T7piK]/cEp5<-[LKUFMb9:>:7uEINaSqHL5rK.G>EV;QO>IbL:f9Y[CA@!h<^\Sfsthi\XXY?]i-nGQRqoI,W+6;4Nif8u"b
%._.M]m\?+.:bKNT%]?;!l8>T]p<l;u<[q?`Z/)OAEqQk]4PNE)G'sc6co$"bN(oQt^^;JDcq`HM)S7n;9=Jp6g=fO%4#iS9M!(Ed
%cd-Cu:tm-C^&'?6gag?di08m+SlCk"jWr;cnlE)"*4_n[(O?hLp2n*PCcuSECh``cF"0+b.:q$fjY5i>M6.-C:obShZ!D49]EcQ$
%E!f8_-)$.$Was(o>>u?'b1-`>G%9_OI%GX;UK,!h`O>_[aJksFfqOq<p8Wceo9A(6_>2j/fNV+nUmD.,Q!aa:,76eCb56M(VKSlC
%W?#-*gT8,Y<Y\[p;JlQaFP(g"r,"g_6dG1IaK<XU3]UJ5$ZgQ2W1+1YBJLUIc@B[#B,gu9)&_Wsk?$/5;a!s259QEBjM021S5P3Q
%6#lEtQ&Bu]\T*p-7(,HGbOI*t2*&s4j=A8BERiY+W1V'^VU@eWh^SC]<c[kQ?Wlf$Ech'*V!K<<HQ"2-r_lOHbKUCYDcK?&&8"]Y
%J2Am47G@rJIhgQMjtP8,I2.=+?YadVdXHOK[smgE=0mnmS_9tP>$I&*N`WlhZE=c\U_IE@<8uS).Hd[#id6("oB;PjQSs1*)<@,n
%S(0!HiSG*6lcP-!dWJpI$!iORGd"p1C9+.+cO3h,AF5li5#prlO-@'3Q.bX>#!K7TQ1WK!._YBs:/Vl/#oQe8_OEOUPGoO-WMfj"
%PLF@!JPt[FRd7NA'O?/=2<*rOGthI<aK,01?ZP_5X\js>=cKXs$:7'gs-g_!ZC0#=[F_@>l6?8>-H9kE%[qeO-4%NJ)As&.P&#>=
%[d+T"_Nct6NgRq>_haBd+=%cCY+6`/1[E#K(JWV%%aLrG61kiB<!RSaC"gdq`]H&OaO`p)BbF6sm2W>-hl:/MFA<-8K/0+E=)D7=
%YMS-59r%<UT-F)*cr(q%\A_OQ&(qgj5PTVo'UMfVCgAZPitNTlhBcoQFg@q93)W1u[+iiAO0,jg^[GeLF*uDEldFQ5m?SUt@k#!4
%c79kS.=+5`XY(m>hLD4eK]*:;p%H+lOnH4]#'3CkB2#pRR<oUJTIGW7qRO/h:0qUl6U!(h1m%HQ>=lHZ7XBZYC#.nqAb^%6Qcp[N
%%#-14\P0f"A6)ZC"'"g9qaOR$e)#H6mjFp2T9CV_W^<BEK+N28Kojl4Tcus!#2Tm-:VZb\9-F1rBDaqbSG,Q.7%/^Nfi:Kn<FCBV
%e:F)oQp?pDJ'=)CfiOTKZ]joY.X<uljbA"\K!V,gn'r@#eF37U\!^bZP34KHZ_:JdlR,ut+5H8Hs.;RQ1Ik_PG^Zds_$IN/V?=f/
%!9,u$+9Tct(nd55faB2AR(u)<=9a'X7Ta)mf[EUV?kHQj#A8]Z[7_`+aLk>3!(oOF&qP_!;GPAQ<nf1s"kG=B`.e%\]Po%kI>(<$
%!ZA?cj^*L]?5ML1?C+&J5S0M=#i>n^heuHF^#HCK5\mTbg^t>Pf((Qcr"stIn-9EcQ`ZIjF8ub\-O)D8Y6:Y$4j_Da%8mN7p4+oR
%0-DNS"QYPZ]0a2^DY;a"gOaBn+:I^dp=o1E>?&YSC.cmu`::OPmcm.":Fm1t^'Wb_6a]Xg%()/[m64#<:1u_=DG7,RaNpP42,Gq_
%?Z)h3(4U4q#l'"aNeiZ514r%=H!3BIRi7,B5'U#T.>^oP=UYSh9e1.A*dBr&&)$C!<Jl7.W%PL2Xmnh8^Ep>.c"HD-04MDtH;G#c
%,3R.T>PHE\&Y9#fHZMGn^2:'b`F05W/`WUA+Hut23QkkF4uM>b$'0Z*OaZT?p^Ds;bBg>teA&21B-AEp6p4&QO.)Z^?TUF>(1Moq
%[O4LJcmnP`S;#lKe.?%P#B\X@[oM8@b_u]M`:n>ZQl*?*S\K>(P8,#K.>S^#biUQ>8gsqNF<Tr.iuI>@@R/o9h4jP+:t/dgJ^s*F
%F_lVJ=puCf`g.jeVP%U7Ftkro,KC(*?:Y^"^Li+ghn#49%!998%k.7UacjUCV/-=b$PW6n..4/N#O8-sgR0q>5d^0"4&b>QQ=X%1
%o,;77LPrXYI*`!'dgena/d>0>p$RG&Qeb!8Y]-0c+$_VJROCmARMUk!?ms)-ap7dqfg[C4kll/;*X&F$<GcZo-:'d_gYGhD)>7iB
%0EL!7i53WJp;huA6YOgcJ<EJp:4Z5>0]3XYdHpRb4BDdk6LYtGE7ka'+nj8'%TY3rTF/9!AptE7!]IIY1m$g_aD<NH=V5>e5/AYc
%2]C%`FYVQ+ZO;=dNRtLK%[`$=:]W0"5`>dlN=aH]#Q35uqSg9g=\&S??sA(W4iQDs]<fctkRHBc<c1JS+7['*g\^lumdR-O'q0Pi
%=6Z.1p]k-7CFD>Y^s+]-5\t_P`&hk&P\?_X`dh^PE\'.J^@Lg5m"plo]q-XAp<83fpb'/!7(fm'Xm@Ge@.ggJB2QaK#(q6s!G/,V
%TTr(El(FVOFZWdO`^hri2"bT\(^\Qkko&1=TD>T77=aY2:N,+tc%dD)bRZi!?;'<*^Tr6[!PRABUe$>OgHu:T9-b^]J?j&AEiH"[
%$8`PO<0GBf:X[13S6pZEVR;0^d?LuBAW@%h/<L(V'?S\L5[#a:S9a(2o1lb4#En0Ves4Z!d&9BUh8QW=W-;=nd/mi`hRp#^;pT1>
%q0tYTCF_sh5f:-92Z9/\%r-79Keq?@Po8gOShKo#H(ATM<L!8<>c.B5_Mr=XI0$9J(N\hh_nc9];6/:8(787mM<6Bok!^BtNZHm(
%gT@R?5Vo^:BKe`B%bX_pPoJV[+kjPnAk"^UkI+N!m)cq`eW2HX2UJ/`3(6>X)O$%Lm,"Xp0tiMMC>se^DZ!fSaSEhe*X&ib[e-X<
%M5emDGa*=QieX)U]\(`7#F]43E_9rYD7gZkg+P9`=sij^8BQgX5gd#8K?\<Z9u=MWdbi["\6[SZG.Y')LmY9O?>IG(^E%!N[`GIR
%SL1&2/aAo\e4'>Gr004@cQ5T109dqddnQ0?>BP:=q)5YRV<<!l!1-*D[Qa!ibb!sf%/.Dg7_/UOq^d1-csb[+]>IHnS+K.Z/rrOF
%90^GL2Cg#T3o:*?i;):HW=qp7$AY,B6CTg0gQaqo/D)glQAl+q4R#.DBgaZ#lrP5RLd-7":[Lhsd5RpM(\IPu&,Km)f>OpQYBumE
%#*[)6V<>!E.$&h2ceen3/UYAXm+U_0gLbgA>I,^+Y]"B#G&,0uM8]+&l"]Ze2A'\0XK>BIfJU@to\K.l=Tj,k&Y#3n)g)YA:4!,j
%OmFdKXOml,Ep*3[Z`PQ`A_GYD9G;4]D!P54()CX?$dLUhC<:]1RJ#>;lF3@jVg^O#OqK$;+t@9J8^';Z"@:%-".gs?KTWt>AnQu2
%@>Q**>*G<'l7pt_qE5,H"$6#!;T-/>fO2n*W^hV\qF'"fS&7&2nG;*,YfqTA,5pnQA<@.B/LOnBSf*Ea1:nQpeesR.Y*J1X-\sVA
%5cg7J[$%:)]ufa6>u.tCg_:oR:>10XaWg<d:_r,CDn#"L]=^5r!*`#jM!f>AoaECf;=):!oY*>QM(/Z>`7[-p00c(-S%H=6Ej\12
%#ZXgkb,G,%6n[C9r\cVDGieA7PD9g/Kf^H<@kgZ`<Yi@CPeK(m^SMK`5[h\5&p^^B4L$<bUQHPWBE_r3i]u!3cmWS5nkc!mg+H[`
%HI3.g'.[R@J8Sjolp-V\&\]B\/Q_`p*t`'ajA7'M=`('MRKh/15dX*6.d:Q[/1^sUcE&bh/(1N:V-XL:6iGmY+]<15BYsode^T_e
%$qMpL2]h_-:gJid!TP4let39^BserM:;pe+:IQB/.ON5WJk#%?L1eV="QY.kH/_(2@Cc?>N1D8:07SojH>mAhmVHHChE]OT>#D\e
%_ja00B!E<=r9)h:WNAZn*^E0M/P\bTpm'3OVnf$jBft`m/]G7&dM22OQb@KE8"c8J%e1F7J8[TL%=']OEM9>mVm]7eBBqU^VRZu`
%JOVqZf!6=:H5(5]S3H#am%*X;`M0$nlh-86d"U)19tS!M;^:8<'7.K#0?Ca0F-C]Q8W/$!6O]e<+;)oD7Qm_5YR`e9S[XnVZ='2L
%p,]Ygm!cW3ZaoaUUUSJU)gU[&\6AB0F!M(!HH*9.na3ujPP[kT*C-cn2W)V9o72ofUZutg->NOc;]#0m<Mh"fkp#tH>nQMON"]Y#
%A'O_@.E:\Id-%<iC5<F[%m+%O'Q6"tID@e*X/9Or/D"BcC[RiUdV'#8L*JmG^?0/E#C#i'[3r)mS#GAg'j+[.>1@=YA95g':<JC8
%j'G'@mgS2dSke(p5)]cTA\-VngZ>EHlZHY)Jp]>hoV[hM?i>pdUL1<\himM3ZMOl)_Db*eaYF;),U(S#X*BuO7F\DC,Sb5I'B;MT
%dZu9PR4$RXnl']]k9oV_Y%Pl.Y`XP2'<f53[CaOFC*I2.FPg0fp@H&DUsU<ZAj3U?+f+R\jk:\3H:TUBXD]q8>1=h)"mI/K5fpaD
%kVbU#]:GLOB&pl#n?>H%R(!?\e=Zr#F:BAEol85D1-0XBW6qu1g2(&C5l1nE7(29P6\&&oMHl0=XEC!mA.KG+a\A/u#oSQ>VJ<&+
%$`pi)d3f@A%?RXV0Y]l=V`!`Nj,,AUcKj%,V:nWc0FmgZj?i2I"l(n`2:+%Q'0<d]fMn#Ff5`Zk07J($onpO(+=d^e<^9dh0NOmh
%8j:A;CF)GX$'=b:*QaNMFObQI%(ul#K:tl^^@B7tiU%S:eT"@=qf_<?MK3_<OcZ3'XI&Rn^?W="4_*V^7$J['(?g0`cH"S@Vbf>s
%id4a2VpdGsIS<KYn(KhoN#G(b1mC-n4Xj0p/Y_LC1D$bo6,=A!f+)Jh64teiOcZ=nErIW$m]h%X?EDlr-!(,Ac1@hH*Lt7Kh8qUB
%fmRY^*rA<D5[f%u@mpB/<<nlu.rXIlb@gLL0%I/4")3^10[k^Ok)\?J/n*RahsOc]n[+/i9Fdkl:1_?E15?G''C-/P@'F3,2.s]I
%cW*9"a3*eJE<uqEDV+=*kG0g;R00*][KR@W"'C&:\Th'c2GciDpE#[KJVqBAbGN:9&`Oj0:4^gq7=:[C/h$d^3=L_[L'Z)6]%oq=
%_"&<f5h4HW6U2YQ\H;BRmCLEME9+;-Pe&[G%&%qUBZhusQam>?_'_5iI^8@@W;$KcYY4!aO/BcLHYbUJdrNNV<b*9jN=@\;go+H5
%*kb-tfa!F$9h3\b%HqC)dt!0"#/[5-no3[U%]X**3uC0K7YI,a2T>1gbmILm&m<nRQ#HdkHJ8ptJ,b'c_rL"q7//6&OSUOC9%h$k
%\6@%!$$=@+Cb;-&eu4_P!0@9(W/JQZbd.U4;KMuNjh5T@>Vqd:eW/G+q&g,h_%6`kbKF6EDff'Nqt`B\*n(-HHPMe_8C-J2q)nnW
%L<'9]&eRYM'EQ(+H\X#E4*NQqhWhu@Yt"Y%>OM4O,XV)'q5>HlqmD&fkf$P`?O9\ZaGn=Q5XmnZLc>IYr")+UO#Ts^AU<]?4?rn&
%Zp7mR.ng_e`6$N!!-h<`BG#Rl.gF@gFk*Sp>B(D&n7k[q\q++C@*oH)NLC&%nsQ+<klahqi*2n$dK9n;^)bnD,BR2tNKR&lRX)"^
%e]9l`8JibPR(4bQD^$#_X:'5e0'AWW!L5'Bf]:(iDqe,^kj=gc,O0g]@Lt+6p3UZd77*"DDHWP&R:AF+rWfeN*"#]SJGS#DLpb31
%k^d9%0VFOYkUpWElrqO)(<`"+DEog#90`Aq@FS$DIHteFeF7d5bsB0M?+@CrEh+6>O_q^gFp^A>+4Q`cODu^&>te<CXk3r_4p7On
%+e%Wq6342!OJRK#B.;,%,dY&;:^Ae]dR!;-osFY1j(Yh(oK6K(4hIZc^*Yd1X*\")8kZ4<o/X5A(6.*,;9cbF=&0LI]%9l/2$oMd
%"5PuD`lmQf^@ea;T"aW&R!@nV3bFHle?<-fR:jcPY1Y=<=;oCsS(`Sj\jLh`lCrKgp+.^"O=cs3jn^sjXZ8W&kL=*lk0mjtl#R.H
%0!.)V.S:%jaAJk/JkH3MZrO'?Yn8Ri=@;m/kEK(!0;>X0Z4JH-/I^37[G-Z;`O8FabK?h9!Qh*EklCo%?5^tn2@5*,/\H]3E*^VR
%fbGCo%j$F14XAoX=sL-XId).s3O"WYX-=9n:]Sr-e'ZT![5LbBTjP]'Pk+Te.JUc_9`IkoDGU*8?*ej,(if#M&>2Zl=&ok1TV=)%
%A$(]&=nse3JtWGf9W(D[L($1skr/tm,$o4pBAP.&OC?d<_495IB8ThoQ3EcI.07Dai,%IO9du'I%3hh7cB1uYqCG4\0bMS\6TUoQ
%OdY"DB5B%g65&!E'sWZOml1h#`@F?ZR`b?AL;B0+bJ1k)V2f%_-lf5/'Z[:K:C3tQZ8eUSkYYQA<8sPOC+B.;I^TcU$=B-DCJ_SG
%<,,K-=rCsR-8JrmNfX1nn8-c7i]0/KST:=aH3HZWbDVdDJt\UsN#@2fV`mhijuR,c_F[g*K$'Y;2.#1)38'Qei$DmQl&Z6'N23,j
%G<&91C.fW!=nRSfk]q'jg2bMYghQ%TY&7ZDYBsgr<(/'!3[8/5q95d(4`Z\MfQ-1g9Q:E8Z@C6D(sd8T.Rnm>ea_7jPu1(]DW?GV
%-Z>0>Tpq=uq>0sloZZV-'K]giCij+8*Wn6+d<`4]f,/s[cRIV<@N!qk*nhC)J:gGGZn683d,Ll?kKo@[S5!i9U=1]fc`*cUS$d7g
%lf``"X`'=1p7^*8*un%4c+P<GO><+uKgs@9V*.J1N1hj7oZrCm4EEHXe$gC?Zr_E&m;u>,TK`5g3Ad_]^V)B?<3udA`CErd("G.'
%cb,?sg]d(Cb+,PB+5G4&fu_@C2:P1-</R/s6d$36M4Ek3FH1<+'%2k=H3Hi.@!&I_1eL2u@8hnG8YMe?R!V*hIca3g@d::5Eos1e
%]'W*ql.IS2ZC.TrW26QV!=]0&:]9'D7K"beYko@]W$_R@,Gk./!q5R,5]uTepOd3rk:,Q02aU6.nGtp&-%G6>/2aW_ZYiX*.5?[d
%!&a/7R1.dc4AtW@n[4ZrdiK61'<:OukA4D+*enEb")Xi[LSiRi'h?+q6\(+@lmRtsNlpKtXAec!9VeiMGU#HtE,E9AG7>"#FsTZN
%Jp-2#2,W"9f#P7';:nR`W9BU1<HWaZ9R@6#YC:sYV/fC,'LeiHdIU;l\k3D4e\acAZp6,!Zuah/8>3ITh_2dEIu"/(]!*#qpmP1*
%-$&bWEdTgc.iaR$-ET)NELl5dUX^!_RU5<"UNaHtVOPc6rgcpo<#*-#:6pY:/"IbSB\Zd_C6Rf=b"GT,*nHYkR>l77XIhIl^sHkX
%AK?XG;?k9#03ukg'qE^b)iBW(&AqgQ0Zi2['fjEOgHQ*6rT\;SFnA>0nTtmF=)'J1q8teA"V/p:(BenH/f%bE8:XbT(I]*)<98uW
%E\12CQZ8Oo.0&T!:KD;&#Ot$l&OOao:VP&m)*SjNI^-FrTD^WRp%/39M5*9r,^/mV)5]^L4<GTL@:I345B[=ZTC*oG'"_F:M2(27
%_*KGW0ROb/I288YUncd/MJ'ne$gc*_6UblPd_F`g:H-rO/,]am$'3E?Q6P)@I-"GErR'!cHV857kii;"/8j_*ojXr@/_qO:pK.@8
%&*Jj:I/frDI]J3Yd]MC.Zg'RUm.M[up?15OCcG6K4Q%7e<6/PVd7N+`*9ja2M^kKVGI4T"`dN7%AUJn;?PtQLhhcU.Zh['AX9\S<
%]SsUf0B@nPIJ+U\G!*MT54d#hM$!a>GC^JdnmJ%pn8!(b'lfkjjmg(%fpb"F_o]k]gh,^!l(.G(".Z"^c32%:gHujc3Qo24h*5\(
%r2"W/Q/9:Ud?.V2VQmkqY&"m]Bn)/mpQ++[T/6IZDM@3^j*s8CSUZAR&"DI)3X[is1\tmJrp(SSAWWA0LjP($G0XS]IespFqS/S(
%rUfZa5M)u+cnHM$*l//kjEpF=@3U^N):"f6<5^[-)FseRS8>6IiZMK`/O*(t;X6[RnGMLVZ73$\>gKo$Gu2Iq5ogWs^o<nE[90T)
%b;^k9Ze:T)X:X%,pE!e:SRJg_S73b=Ac2!%\,2@)gaA<-nBI$K%fc3o^\d-]pmV6=-O;=%hETW35fabKr&?[MGj#TY*/llf[Mn:b
%L%6@[9Xm.]"OM=K0o3"lgr_l$<G)\N(nOc2r@XY85&up4<HSFkBDB;&%?J.a&n;Tc)//>,n]n#0U4*C.AKQ>5`3@)>_*Dsam?`%o
%=+:7sE,hm&kJYHa(amh!&_PG**cq%.*L`2TYkI.GGr,Od!IB5CLr=9nn`#4F5XVjkAZ25uo4Va.a_;`C5W##&4m;GR8L,Pm$=itk
%i2*,CJ5MsQa4$!@:E]R]5[fr@a10dq:N-!2rWXKDJ/JutV:?3CeN_g6d\'0mK;Se#8FL*NA@1]Ap/.+\BVElrQ)8ZOI!Io07;<+R
%+tT0A$#aILYXOCTVV,.mG6@E-C4L="CWQ7NOSN?%3+<p@o=QfJkI82$i`?*Ece_`:kdXl-Ko`/#;8(^c:A#35@#mr%o&;8M#Qg&j
%%`[1uo+`:VpRGSR.)CS*jhsh]N$Iu4)8$p;jJ!17SdDcVEH'7Q3X@m00Lh#J5FO'nik[`NB-5JZ"1m9[E.lK&2uD3UrdVBFp6T#d
%It.>;T)\`_s2k<<5Q:AK^A[.8^\cib:Clq*s5fT^rpIQ"m[*t62rFT%n,Mh-^]3C;^AI&Z^\r#.n%4'trp-%\s6dMVs3H2jh07cS
%rh'5PIg$IEWkgpt_a".`s7l><pV-_lNnL6~>
%AI9_PrivateDataEnd
